{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/chic/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/font.styl","path":"css/font.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/layout.styl","path":"css/layout.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/media.styl","path":"css/media.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/custom.styl","path":"css/custom.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/normalize.styl","path":"css/normalize.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/css/variable.styl","path":"css/variable.styl","modified":0,"renderable":1},{"_id":"themes/chic/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/chic/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/chic/source/image/gavatar.jpg","path":"image/gavatar.jpg","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/demo.css","path":"fonts/iconfont/demo.css","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/demo_index.html","path":"fonts/iconfont/demo_index.html","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.css","path":"fonts/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.eot","path":"fonts/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.js","path":"fonts/iconfont/iconfont.js","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.json","path":"fonts/iconfont/iconfont.json","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.ttf","path":"fonts/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff","path":"fonts/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.svg","path":"fonts/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff2","path":"fonts/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.woff2","path":"fonts/lanting/lanting.woff2","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.woff","path":"fonts/lanting/lanting.woff","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.eot","path":"fonts/lanting/lanting.eot","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.TTF","path":"fonts/lanting/lanting.TTF","modified":0,"renderable":1},{"_id":"themes/chic/source/fonts/lanting/lanting.otf","path":"fonts/lanting/lanting.otf","modified":0,"renderable":1},{"_id":"themes/chic/source/favicon.png","path":"favicon.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/chic/ChangeLogs.md","hash":"82786c20871dd56447d872db9c16bd14b0cf01b8","modified":1587261935816},{"_id":"themes/chic/LICENSE.md","hash":"9911bdafa287bd65a822f84cc12012980bd10247","modified":1587261935816},{"_id":"themes/chic/README-CN.md","hash":"af0765f26b72d49f1b29afe1a9d0c4a492912aaa","modified":1587261935817},{"_id":"themes/chic/README.md","hash":"3805a9cae08d92b63dbc3764e57bb0b295972049","modified":1587261935817},{"_id":"themes/chic/_config.yml","hash":"0522cbc55025e33b3978c1e6214f11e4cb129011","modified":1587274259227},{"_id":"themes/chic/package.json","hash":"8b4072879307eed0e74ae35390825c5e03b9229c","modified":1587261935822},{"_id":"themes/chic/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1587261935817},{"_id":"themes/chic/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1587261935817},{"_id":"themes/chic/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1587261935817},{"_id":"themes/chic/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1587261935817},{"_id":"themes/chic/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1587261935817},{"_id":"themes/chic/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1587261935818},{"_id":"themes/chic/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1587261935818},{"_id":"themes/chic/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1587261935818},{"_id":"themes/chic/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1587261935818},{"_id":"themes/chic/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1587261935818},{"_id":"themes/chic/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1587261935818},{"_id":"themes/chic/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1587261935818},{"_id":"themes/chic/layout/category.ejs","hash":"c9a580cf70cdb2f8de68ad45097043f3e08294ca","modified":1587308280127},{"_id":"themes/chic/layout/archive.ejs","hash":"48cdf67b628eb6a1c24d484ed252f5b0e3f06ddf","modified":1587261935821},{"_id":"themes/chic/layout/index.ejs","hash":"b3344720176ad12dc88745cc5b31d497356ca4fa","modified":1587261935821},{"_id":"themes/chic/layout/layout.ejs","hash":"f874320edabdefc204f9e17d119a16d16f26c363","modified":1587261935821},{"_id":"themes/chic/layout/page.ejs","hash":"3179c527694a789760742e1923c7ac5f94b4997c","modified":1587261935821},{"_id":"themes/chic/layout/post.ejs","hash":"a23f83d6c559ce88588472267468a54488d50e8e","modified":1587261935821},{"_id":"themes/chic/layout/tag.ejs","hash":"1d0daa3823d08c69e40c6d68809e10c9c2308979","modified":1587265825666},{"_id":"themes/chic/scripts/imageTag.js","hash":"4b69804c1e4bf638eda7022499c440ce24e28587","modified":1587261935822},{"_id":"themes/chic/source/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1587262368313},{"_id":"themes/chic/source/apple-touch-icon-precomposed.png","hash":"6ad676a2df760d823510d5ddb9a6b367247bd9c2","modified":1562856412000},{"_id":"themes/chic/source/favicon.ico","hash":"8f78f11cc434f3ba65061490d2b7179c295e8559","modified":1562856412000},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1587261848611},{"_id":"themes/chic/layout/_page/category.ejs","hash":"e63734fd3ddc57f522f886ccc74f53725318ec4a","modified":1587265184742},{"_id":"themes/chic/layout/_page/page.ejs","hash":"1d875d59cf4d6b681cc8cf755f19b5355e5d1144","modified":1587261935819},{"_id":"themes/chic/layout/_page/archive.ejs","hash":"04233830605abd5e36af9f4986a117bbc945e920","modified":1587308165303},{"_id":"themes/chic/layout/_page/post.ejs","hash":"84a904fbc2fe3efbf9b0b64538ecd58f09ed2507","modified":1587266246055},{"_id":"themes/chic/layout/_page/profile.ejs","hash":"c6d3cf2ef90e5d0fd580e7cff1db47c28fb36037","modified":1587261935819},{"_id":"themes/chic/layout/_partial/footer.ejs","hash":"e1c332fab0d6cd713e36d46ccc14d0991067ba40","modified":1587261935820},{"_id":"themes/chic/layout/_partial/head.ejs","hash":"c299780fd960bfe2354665a5fe37ccc718fab6ec","modified":1587266667971},{"_id":"themes/chic/layout/_page/tag.ejs","hash":"0c20ff00532103f9a59639ca9956fc0bce4aabc2","modified":1587261935820},{"_id":"themes/chic/layout/_partial/toc.ejs","hash":"4758b927a53ba9a6ccdbf254ad142961ef860449","modified":1587266363920},{"_id":"themes/chic/layout/_partial/header.ejs","hash":"8f1e5272a4de96a3ed94de1db988b05b34515463","modified":1587261935820},{"_id":"themes/chic/layout/_partial/paginator.ejs","hash":"ab59d5db77f2aa64dfe03656e72fd49702c62e23","modified":1587261935820},{"_id":"themes/chic/layout/_plugins/mathjax.ejs","hash":"53f088fe44d51c4d9fb61aeac4c23b3cfcc19762","modified":1587261935821},{"_id":"themes/chic/source/css/base.styl","hash":"7ea2db2c139a719bb7d3f3c5e182dd0e0d59e098","modified":1587261935845},{"_id":"themes/chic/source/css/font.styl","hash":"8c1da30e223c0a3d7ef452abc9f0e4cc71dbc140","modified":1587261935845},{"_id":"themes/chic/source/css/layout.styl","hash":"9942d05bb2c55cf035d4bf9af325e1e81766a510","modified":1587261935845},{"_id":"themes/chic/source/css/style.styl","hash":"a13f2c38070a89b06a2ede599f5ce5fd160e11c9","modified":1587261935846},{"_id":"themes/chic/source/css/media.styl","hash":"f96c0dbb9653667906a6dc271f637543ac5c7212","modified":1587261935846},{"_id":"themes/chic/source/css/custom.styl","hash":"bf8dee1a094b104d87a53b43f6daa7ba43b67574","modified":1587261935845},{"_id":"themes/chic/source/css/normalize.styl","hash":"b3337320133b7a336db7033aa6bbe94b054c0b21","modified":1587261935846},{"_id":"themes/chic/source/css/variable.styl","hash":"906faa95457eba70118a0705e13b8f43409e502f","modified":1587261935846},{"_id":"themes/chic/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1587261935935},{"_id":"themes/chic/source/js/script.js","hash":"93694e4e16893f83611daa5ba3723b14ecc80abb","modified":1587261935935},{"_id":"themes/chic/source/image/gavatar.jpg","hash":"974547c384669846ee47989cb3b9c3f80002f010","modified":1562856412000},{"_id":"themes/chic/source/js/mathjax2.7.5.js","hash":"7ba18c783d543cfb4b45a0118ccb73d3f68cd46e","modified":1587261935935},{"_id":"themes/chic/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1587261935823},{"_id":"themes/chic/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1587261935823},{"_id":"themes/chic/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1587261935822},{"_id":"themes/chic/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1587261935823},{"_id":"themes/chic/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1587261935824},{"_id":"themes/chic/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1587261935823},{"_id":"themes/chic/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1587261935824},{"_id":"themes/chic/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1587261935824},{"_id":"themes/chic/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1587261935824},{"_id":"themes/chic/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1587261935824},{"_id":"themes/chic/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1587261935824},{"_id":"themes/chic/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1587261935825},{"_id":"themes/chic/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1587261935825},{"_id":"themes/chic/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1587261935825},{"_id":"themes/chic/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1587261935825},{"_id":"themes/chic/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1587261935825},{"_id":"themes/chic/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1587261935826},{"_id":"themes/chic/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1587261935826},{"_id":"themes/chic/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1587261935826},{"_id":"themes/chic/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1587261935826},{"_id":"themes/chic/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1587261935828},{"_id":"themes/chic/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1587261935829},{"_id":"themes/chic/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1587261935829},{"_id":"themes/chic/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1587261935830},{"_id":"themes/chic/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1587261935830},{"_id":"themes/chic/source/css/_highlight/brown-paper.styl","hash":"329b85ae9130a5587a6fb1c6f80396f9cca5ddc1","modified":1587261935830},{"_id":"themes/chic/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1587261935830},{"_id":"themes/chic/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1587261935831},{"_id":"themes/chic/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1587261935831},{"_id":"themes/chic/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1587261935831},{"_id":"themes/chic/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1587261935831},{"_id":"themes/chic/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1587261935831},{"_id":"themes/chic/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1587261935832},{"_id":"themes/chic/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1587261935832},{"_id":"themes/chic/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1587261935832},{"_id":"themes/chic/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1587261935832},{"_id":"themes/chic/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1587261935833},{"_id":"themes/chic/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1587261935832},{"_id":"themes/chic/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1587261935833},{"_id":"themes/chic/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1587261935833},{"_id":"themes/chic/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1587261935834},{"_id":"themes/chic/source/css/_highlight/highlightjs.styl","hash":"65b5981dc3c57cedd1cb668c0e377230987e08d1","modified":1587261935833},{"_id":"themes/chic/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1587261935833},{"_id":"themes/chic/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1587261935834},{"_id":"themes/chic/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1587261935834},{"_id":"themes/chic/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1587261935834},{"_id":"themes/chic/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1587261935834},{"_id":"themes/chic/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1587261935835},{"_id":"themes/chic/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1587261935835},{"_id":"themes/chic/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1587261935835},{"_id":"themes/chic/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1587261935835},{"_id":"themes/chic/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1587261935835},{"_id":"themes/chic/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1587261935835},{"_id":"themes/chic/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1587261935836},{"_id":"themes/chic/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1587261935836},{"_id":"themes/chic/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1587261935837},{"_id":"themes/chic/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1587261935837},{"_id":"themes/chic/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1587261935838},{"_id":"themes/chic/source/css/_highlight/pojoaque.styl","hash":"2601b4285803a7cea5ccded8d624ca95f80e3d88","modified":1587261935837},{"_id":"themes/chic/source/css/_highlight/school-book.styl","hash":"beabbbcc7930f8de19159381a01c0ba41dc2291f","modified":1587261935838},{"_id":"themes/chic/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1587261935838},{"_id":"themes/chic/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1587261935839},{"_id":"themes/chic/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1587261935838},{"_id":"themes/chic/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1587261935839},{"_id":"themes/chic/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1587261935839},{"_id":"themes/chic/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1587261935839},{"_id":"themes/chic/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1587261935840},{"_id":"themes/chic/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1587261935840},{"_id":"themes/chic/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1587261935840},{"_id":"themes/chic/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1587261935840},{"_id":"themes/chic/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1587261935840},{"_id":"themes/chic/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1587261935841},{"_id":"themes/chic/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1587261935841},{"_id":"themes/chic/source/css/_lib/looper.css","hash":"863144dc9af7c1e181670515bc85eaf768f4e287","modified":1587261935841},{"_id":"themes/chic/source/css/_lib/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1587261935842},{"_id":"themes/chic/source/css/_page/archive.styl","hash":"71ea842f068b29b4418dd09450db09d27dcf0947","modified":1587261935843},{"_id":"themes/chic/source/css/_page/category.styl","hash":"cead361269616b7a6ddec3090d9fa34c3c6ac722","modified":1587261935844},{"_id":"themes/chic/source/css/_page/page.styl","hash":"34e33b52d2e046aa2f5494e81ff4ac2d5ca78058","modified":1587261935844},{"_id":"themes/chic/source/css/_page/profile.styl","hash":"5ef6d5a06132f26b7aa01b2fbf4bbfb8ee862b7b","modified":1587261935844},{"_id":"themes/chic/source/css/_page/tag.styl","hash":"55b220cc58011876fb3a470cd1fde8ed87c93079","modified":1587261935844},{"_id":"themes/chic/source/css/_partial/footer.styl","hash":"4f58e607eaa59cda3b5a9fdb3404ffb75c4d1a03","modified":1587261935844},{"_id":"themes/chic/source/css/_partial/header.styl","hash":"be70b4ab3bcc977f1055664899742804c716929d","modified":1587261935845},{"_id":"themes/chic/source/css/_partial/paginator.styl","hash":"b4f4a5180c4cbc70d186792b8a1fd0f5855bd86a","modified":1587261935845},{"_id":"themes/chic/source/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1587261935847},{"_id":"themes/chic/source/fonts/iconfont/demo_index.html","hash":"16e01463756a77b4acd15ade4e6b73f0376d75e1","modified":1587261935847},{"_id":"themes/chic/source/fonts/iconfont/iconfont.css","hash":"1e5540dca41dc53879226750f936e72daf616662","modified":1587261935847},{"_id":"themes/chic/source/fonts/iconfont/iconfont.eot","hash":"d18736f7885569e497698d17f49b9167add67dc6","modified":1587261935848},{"_id":"themes/chic/source/fonts/iconfont/iconfont.js","hash":"87bfdaae31251f4d605646c5ae9c67196f6cc4e2","modified":1587261935848},{"_id":"themes/chic/source/fonts/iconfont/iconfont.json","hash":"eae94b803d34035008842855d0bead92d2035281","modified":1587261935848},{"_id":"themes/chic/source/fonts/iconfont/iconfont.ttf","hash":"41c4f4dc82e42452dcfd19caed6c7dc333ee769e","modified":1587261935849},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff","hash":"a57593c49b56c16ac1def0e1f3dbca3f658b3579","modified":1587261935849},{"_id":"themes/chic/source/fonts/iconfont/iconfont.svg","hash":"5c9c4e44179a7435d0f91df4ce1154dd677ad8c2","modified":1587261935849},{"_id":"themes/chic/source/fonts/iconfont/iconfont.woff2","hash":"39d97a0f72417487f5c1e0a0abf8e27dd6ebda31","modified":1587261935849},{"_id":"themes/chic/source/css/_page/_post/post_code.styl","hash":"06c3a3524ffd4b27e03e79489001997ea5d727d3","modified":1587261935842},{"_id":"themes/chic/source/css/_page/_post/post_header.styl","hash":"d37b032bc5edca92c84bf62070a28fa40939df55","modified":1587261935843},{"_id":"themes/chic/source/css/_page/_post/post_copyright.styl","hash":"64fd9f07ed45f035057d46740af0db70218714aa","modified":1587261935843},{"_id":"themes/chic/source/css/_page/_post/post_content.styl","hash":"5e3d63077549d8e2e5ff8c452e809760f5a99c17","modified":1587261935842},{"_id":"themes/chic/source/css/_page/_post/post_tags.styl","hash":"2ff93677aa4d81da83c659b4dd4e3cb482d9ce7d","modified":1587261935843},{"_id":"themes/chic/source/css/_page/_post/post_nav.styl","hash":"03accaba13c995cbe65a05a88549ff74e992eb3f","modified":1587261935843},{"_id":"themes/chic/source/css/_page/_post/post_toc.styl","hash":"15e1ec7af93f41184f986aba21991a79923b0a0e","modified":1587261935843},{"_id":"themes/chic/source/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1587261935933},{"_id":"themes/chic/source/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1587261935929},{"_id":"themes/chic/source/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1587261935891},{"_id":"themes/chic/source/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1587261935872},{"_id":"themes/chic/source/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1587261935925},{"_id":"source/tag/index.md","hash":"2121a2f3fafb4d33e095952e2fa2a4f91afbbb74","modified":1587265304019},{"_id":"source/category/index-1.md","hash":"17de72cc9aedb07a065bc5a709732d2369a6b99f","modified":1587262853614},{"_id":"source/category/index.md","hash":"2aa64942630017781d21b1999599b18d34d1630c","modified":1587265291610},{"_id":"source/_posts/2014-11-14-aphorism.md","hash":"c654adf90517d7903f4e39fea0ab966894adec5b","modified":1587264178714},{"_id":"source/_posts/2014-11-13-my-dict.md","hash":"94abfb5b77b251529cc369bd44bc9b2ac7c8074c","modified":1587264187990},{"_id":"source/_posts/2014-12-18-linux-notes.md","hash":"907c4364bcf4cc90a6e5ad7ff604c31d205d7cc6","modified":1587265023850},{"_id":"source/_posts/2014-12-12-connect-mongodb-in-vagrant-with-mongohub.md","hash":"45aee2bb6648fa30d514f0951119691baebdc7e6","modified":1587264283714},{"_id":"source/_posts/2014-12-22-how-to-use-linux-screen.md","hash":"e38251ce509c1aade56db84042083d94e5c18ae8","modified":1587265019501},{"_id":"source/_posts/2014-12-26-secure-linux-server.md","hash":"96e686a59123d211583a2b26f040532970f9ffc0","modified":1587265015236},{"_id":"source/_posts/2015-01-14-use-supervisor-for-laravel-queue.md","hash":"080ffd9eac8902b618b24909b8f4309f9cfe02ad","modified":1587264335871},{"_id":"source/_posts/2015-01-13-create-git-server.md","hash":"6a2eff51e19307423c6fc92bf37ed75d0262a879","modified":1587264323171},{"_id":"source/_posts/2015-02-02-popular-js-css-collection.md","hash":"07118a44fe6e3e5f2c92ff6931bc26f356cdc87e","modified":1587264347481},{"_id":"source/_posts/2015-09-10-optimize-nginx-and-php-fpm-configuration.md","hash":"b28b267aeb8d5e60a9558d116980020f19f6119b","modified":1587264359962},{"_id":"source/_posts/2016-07-01-jin-gang-jing-note.md","hash":"70df36823dd7b4e58d32cd5746a2a09115e275e6","modified":1587264161316},{"_id":"source/_posts/2016-08-01-php-advance-1-useage.md","hash":"7cd9fcd77f206bbea79fab7ae2e24a755b6e08aa","modified":1587265000554},{"_id":"source/_posts/2016-08-05-a-sand-county-almanac.md","hash":"72e52b09d8d093b1d6906d380127fa26af9b90e1","modified":1587264113496},{"_id":"source/_posts/2016-10-03-php-advance-2-psr.md","hash":"73d54b9df8e8d4cc81713cf00220405859259634","modified":1587264994813},{"_id":"source/_posts/2016-10-25-rfc-2119.md","hash":"4a71b722463ef884f05800530d78abf82db9b7a4","modified":1587264612203},{"_id":"source/_posts/2016-10-25-semantic-versioning-2.md","hash":"a6b7e8d5ac793cee7f031175818cb5b99c24530e","modified":1587264630707},{"_id":"source/_posts/2016-11-17-elasticsearch-01-getstart.md","hash":"e34a26b216672e42c6a7bac2d3e0b272109ff675","modified":1587264987781},{"_id":"source/_posts/2016-11-17-elasticsearch-02-mapping.md","hash":"68749f3fdc75a1afaccf347f9118dd3f111bf2b0","modified":1587264982377},{"_id":"source/_posts/2016-12-30-keyboard-conf.md","hash":"f1ad76c88e543409b5c46ad11f26872c77a4070f","modified":1587264916316},{"_id":"source/_posts/2016-12-11-be-productive-for-mac-1.md","hash":"3981e1679da1fc1a14314373a231a4069dc6d12a","modified":1587264977341},{"_id":"source/_posts/2017-02-20-php-advance-3-good-practice.md","hash":"01bd1a4184edc77d3ea32e3847ab21fb88596325","modified":1587264956903},{"_id":"source/_posts/2017-02-25-php-advance-4-tuning.md","hash":"e8774dff42f7f80a31493107f1b8b4ed5350c6ad","modified":1587264953141},{"_id":"source/_posts/2017-01-04-vim-configuration.md","hash":"4071f3395cc9b4eceba2dd6469d99eb9e02c957d","modified":1587264961555},{"_id":"source/_posts/2017-02-26-php-advance-5-development-testing.md","hash":"90896bc192e4ed99810030e331f3b8f08dcc7147","modified":1587264948911},{"_id":"source/_posts/2017-04-30-the-school-of-life.md","hash":"c709c6befbd9608f9c615fbb1212016fbc6b4d8e","modified":1587263892064},{"_id":"source/_posts/2017-03-11-powerset-algorithms.md","hash":"b82bcabc73f1e083bff0a0c9f082b2f8bf48eb49","modified":1587264944179},{"_id":"source/_posts/2017-09-10-wang-yangming.md","hash":"37a0c0feac11b11b2af50afacd7129a1e383bdbe","modified":1587264937088},{"_id":"source/_posts/2019-03-23-canada-personal-tax-rrsp-and-tfsa.md","hash":"dec14dae5b53aa00bf6ba2f9927b3eb88356d830","modified":1587267068709},{"_id":"source/_posts/2017-09-12-chan-xue-ru-men-lin-mu-da-zhuo.md","hash":"8145fd1ed547356eb8aed648d5d3b8048c35bdd7","modified":1587264932088},{"_id":"themes/chic/source/image/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1587263038834},{"_id":"source/about/index.md","hash":"1ffb3eb04c26e2c05882a726505a1112ad18beb0","modified":1587267414222},{"_id":"themes/chic/layout/_plugins/katex.ejs","hash":"c71eb685fb2427e86589fb6ddb4df223a992c7aa","modified":1587266991520},{"_id":"public/tag/index.html","hash":"c571216ae4ce9644cb5425a50b8b29603f725cef","modified":1587274601667},{"_id":"public/category/index.html","hash":"b77f6cb64e02169f4aa14c971c20f78aadf765a4","modified":1587274601667},{"_id":"public/about/index.html","hash":"348c50e51b20ed7e9ec538ba29ae62dd42bdf8d7","modified":1587274601667},{"_id":"public/2017-04-30-the-school-of-life.html","hash":"15017f0f654fddb26e9899d9af094d20adf5fecc","modified":1587274601667},{"_id":"public/2017-02-26-php-advance-5-development-testing.html","hash":"51070ae0ca640641290462e0404442b904ab4058","modified":1587274601667},{"_id":"public/2017-02-25-php-advance-4-tuning.html","hash":"dc654900b2b17378afd5f164180eef9bfb5634d8","modified":1587274601667},{"_id":"public/2016-12-30-keyboard-conf.html","hash":"fed6e394886ba640fbbbe531008f4929959588e5","modified":1587274601667},{"_id":"public/2016-12-11-be-productive-for-mac-1.html","hash":"53d180a1d48a5a6add8161748642d9c1c9b815f0","modified":1587274601667},{"_id":"public/2016-11-17-elasticsearch-02-mapping.html","hash":"14d6d88d743f2c876f8a465460607498d716b06f","modified":1587274601667},{"_id":"public/2016-11-17-elasticsearch-01-getstart.html","hash":"9f4ae87d52f5a6d989b61cd669db907fbc7efc95","modified":1587274601667},{"_id":"public/2016-10-25-rfc-2119.html","hash":"6618485456ca95e43feaf12d6ce97f2d545b5339","modified":1587274601667},{"_id":"public/2016-10-25-semantic-versioning-2.html","hash":"0a91b7341ff2a2fdb84f54831d43c6e9744fa5ac","modified":1587274601667},{"_id":"public/2016-10-03-php-advance-2-psr.html","hash":"d20c71fdffdfe1ae1ba2bd658f294ddba38dad06","modified":1587274601667},{"_id":"public/2016-08-05-a-sand-county-almanac.html","hash":"f33fab85aa2eee32cc945a9bf3b03125d9f6a478","modified":1587274601667},{"_id":"public/2016-08-01-php-advance-1-useage.html","hash":"e2771df6627a29e548877ece7d2ab76c6ad0871f","modified":1587274601667},{"_id":"public/2016-07-01-jin-gang-jing-note.html","hash":"7518bb8e89a4e484057dcd309183efa6767943d8","modified":1587274601667},{"_id":"public/2015-09-10-optimize-nginx-and-php-fpm-configuration.html","hash":"8f2db1e9e7f4a98be2a3100d52212395f6b9cb0f","modified":1587274601667},{"_id":"public/2015-02-02-popular-js-css-collection.html","hash":"c5117b570d96d6da111eb6dbe966c0a59d887f60","modified":1587274601667},{"_id":"public/2015-01-14-use-supervisor-for-laravel-queue.html","hash":"58abcfbaed003f83339d6eee7384dbf1a9804acd","modified":1587274601667},{"_id":"public/2015-01-13-create-git-server.html","hash":"681f444c8fd9bcf7289c0fb5521de6c731b96415","modified":1587274601667},{"_id":"public/2014-12-26-secure-linux-server.html","hash":"a822bc492800f65c3fd6cfb8e083fe44bd196923","modified":1587274601667},{"_id":"public/2014-12-22-how-to-use-linux-screen.html","hash":"5917fe65b9d641fd52e3efe32316995e8a926bff","modified":1587274601667},{"_id":"public/2014-12-12-connect-mongodb-in-vagrant-with-mongohub.html","hash":"0b2811c5a9fdac4c467a3b74bb60b0852daf4d1e","modified":1587274601667},{"_id":"public/2014-11-14-aphorism.html","hash":"296b8665f9e586bf1e3f531a4e668988f7572b98","modified":1587274601667},{"_id":"public/2014-11-13-my-dict.html","hash":"acd9c7cb2026c1fdbcfae1fb186b73d356447cd5","modified":1587274601667},{"_id":"public/categories/生活随想/index.html","hash":"ece020aba786aa9bc172346c3c382308c5b869e9","modified":1587274601667},{"_id":"public/categories/阅读笔记/index.html","hash":"cf8c36217dffd33ba43792d5ed89a4e7f2c7b737","modified":1587274601667},{"_id":"public/categories/编程学习/index.html","hash":"8e345a5aeb28d61647d5f25dd9a4a3badb8d4b1f","modified":1587274601667},{"_id":"public/categories/编程学习/page/2/index.html","hash":"ed76ba5c437eaf81a093ecbb0c3541322511ff95","modified":1587274601667},{"_id":"public/index.html","hash":"06a166ea0d83fedb59cd554e832cf414238433d3","modified":1587274601667},{"_id":"public/page/2/index.html","hash":"06a166ea0d83fedb59cd554e832cf414238433d3","modified":1587274601667},{"_id":"public/page/3/index.html","hash":"06a166ea0d83fedb59cd554e832cf414238433d3","modified":1587274601667},{"_id":"public/archives/index.html","hash":"8849d2ef12bb08ee8799ba0963927e236e84d723","modified":1587274601667},{"_id":"public/archives/page/2/index.html","hash":"4756b3779ff8e9674214e8e6e41cc88511de74aa","modified":1587274601667},{"_id":"public/archives/page/3/index.html","hash":"789dcc27d5594a6bd3d0bd75434cc22fe670ca63","modified":1587274601667},{"_id":"public/archives/2014/index.html","hash":"3087a5129990b59ccc617db6f41a6fe5c2407e35","modified":1587274601667},{"_id":"public/archives/2014/11/index.html","hash":"822e216a73bbb1efd9c94c6efeadedae1a5cc0e2","modified":1587274601667},{"_id":"public/archives/2014/12/index.html","hash":"ebf27760baebb3dd323fb6fc101a0b959ed00fe3","modified":1587274601667},{"_id":"public/archives/2015/index.html","hash":"b82deebd4c1bdb55254c4bcde3867859b0605187","modified":1587274601667},{"_id":"public/archives/2015/01/index.html","hash":"6340fd2bb4e7478a20a2cbf150bb83c5c2276814","modified":1587274601667},{"_id":"public/archives/2015/02/index.html","hash":"560b691d83bfcb863914a97d01a8d2b3fbc8f74f","modified":1587274601667},{"_id":"public/archives/2015/09/index.html","hash":"aea670a056ad79b5e482191d35ba229932358604","modified":1587274601667},{"_id":"public/archives/2016/index.html","hash":"617032d7a3b5df1a74c889244680d01b3c7c7955","modified":1587274601667},{"_id":"public/archives/2016/07/index.html","hash":"99ae5788263595213ce3d2c8f5c9ca83850591e6","modified":1587274601667},{"_id":"public/archives/2016/08/index.html","hash":"67b82a8fd25533b2db8d2fa1831fd742b7171c89","modified":1587274601667},{"_id":"public/archives/2016/10/index.html","hash":"45e2c7998cccde42b5321807043af6fcb7e4a251","modified":1587274601667},{"_id":"public/archives/2016/11/index.html","hash":"fb106d392cf81a885edc418c2c637944bff7acd2","modified":1587274601667},{"_id":"public/archives/2016/12/index.html","hash":"76aa18bc4bad9bef4f372dbe206127a2779e03f8","modified":1587274601667},{"_id":"public/archives/2017/index.html","hash":"564b98aa3b2480c7812d3d2953042fc88545cd38","modified":1587274601667},{"_id":"public/archives/2017/01/index.html","hash":"1ac71dcc02024c10d6057fb5853f217496a833db","modified":1587274601667},{"_id":"public/archives/2017/02/index.html","hash":"c0d0a659ac62130d73cc0603245a10c9b28eebd9","modified":1587274601667},{"_id":"public/archives/2017/03/index.html","hash":"de5013b4f15592f26c0ef268b9a9ae4180d643c6","modified":1587274601667},{"_id":"public/archives/2017/04/index.html","hash":"5b09232c84b28e411e391b212b4e57ce3339ca92","modified":1587274601667},{"_id":"public/archives/2017/09/index.html","hash":"736a2d478d9a79a25657abd25b5053717f7d4a0d","modified":1587274601667},{"_id":"public/archives/2019/index.html","hash":"0e424c812ff353463a2560b9692e210be2a03d7a","modified":1587274601667},{"_id":"public/archives/2019/03/index.html","hash":"a578065bb347b0b6135854c00c866b1f02d35844","modified":1587274601667},{"_id":"public/tags/哲学/index.html","hash":"0e1f64372cb9b8dc4395df31ecf4aa78e95d70b9","modified":1587274601667},{"_id":"public/tags/MongoDB/index.html","hash":"6fcbbed32f44f01acdabb0e33064211837639bf6","modified":1587274601667},{"_id":"public/tags/Linux/index.html","hash":"055491d2456ae074bab397f15ec8eefebd72d35d","modified":1587274601667},{"_id":"public/tags/Git/index.html","hash":"670e21deeb9105d489ed76319fcec34323de0876","modified":1587274601667},{"_id":"public/tags/PHP/index.html","hash":"91081a129f2a51690c313ba529b81ba0dbb61bc3","modified":1587274601667},{"_id":"public/tags/Laravel/index.html","hash":"650fc9077f102611ce50e11fbe9a0146bc0a504f","modified":1587274601667},{"_id":"public/tags/CSS/index.html","hash":"5023920b63e1391d1dcb0f4279da51f7c20a6828","modified":1587274601667},{"_id":"public/tags/Javascript/index.html","hash":"f1e3560b948e9f5a136aa7cade060d2a41b076ae","modified":1587274601667},{"_id":"public/tags/Nginx/index.html","hash":"818202fcc31526089c2fdcc6bb0215bead2d314e","modified":1587274601667},{"_id":"public/tags/编程规范/index.html","hash":"e698f3699b5a706d82cf0931496899a331c53b6d","modified":1587274601667},{"_id":"public/tags/Elasticsearch/index.html","hash":"b74563c3fb20ef10f2ad6bd8df17924d9a1341ed","modified":1587274601667},{"_id":"public/tags/Mac/index.html","hash":"a76382b98414b11f0ee43f8e88ea37c9eea82762","modified":1587274601667},{"_id":"public/tags/VIM/index.html","hash":"083a3f4f1f342afecf6a5972e61fddbd69c646de","modified":1587274601667},{"_id":"public/tags/加拿大税务/index.html","hash":"02ee7ad9e8948ef7fb1fd7134e4819567da275b3","modified":1587274601667},{"_id":"public/tags/The-School-of-Life/index.html","hash":"48a8d00ebcf9c2072d5108c6fe47c3613413a932","modified":1587274601667},{"_id":"public/tags/效率工具/index.html","hash":"05ad4079ffc59529ed0a702bb9e34472ec1f182d","modified":1587274601667},{"_id":"public/tags/笔记/index.html","hash":"f8d36c2b0d43a779497f063acb24bebc82501c2d","modified":1587274601667},{"_id":"public/tags/键盘/index.html","hash":"0d3bb45c9058319328516cde0ddbfc261d67dc50","modified":1587274601667},{"_id":"public/tags/算法/index.html","hash":"0526d7003417ee6f3cb0805bb45cd7bab1e9811c","modified":1587274601667},{"_id":"public/tags/排列组合/index.html","hash":"610bb536cc2803e8616f35cad6baac5d62ca68f6","modified":1587274601667},{"_id":"public/2019-03-23-canada-personal-tax-rrsp-and-tfsa.html","hash":"9cead2786cc0af2fc1543bd22416fee24db8f794","modified":1587274601667},{"_id":"public/2017-09-12-chan-xue-ru-men-lin-mu-da-zhuo.html","hash":"5b1a6093492f8dd820ccb8c800a812ad3462e0c1","modified":1587274601667},{"_id":"public/2017-09-10-wang-yangming.html","hash":"953d85bf955587e1dbd99662f13c26622aba9ffb","modified":1587274601667},{"_id":"public/2017-03-11-powerset-algorithms.html","hash":"a1c1169f267c334c21c61e135fbc4a2f87a95a1b","modified":1587274601667},{"_id":"public/2017-02-20-php-advance-3-good-practice.html","hash":"3dde5bfafec6e82224f70cd0a203451b793526e4","modified":1587274601667},{"_id":"public/2017-01-04-vim-configuration.html","hash":"0cec80a6479d567a9694e9db5ed44be403b394cb","modified":1587274601667},{"_id":"public/2014-12-18-linux-notes.html","hash":"bed8de68b5e1cbbe3cf7c9bf251eb8c66f47ef04","modified":1587274601667},{"_id":"public/apple-touch-icon-precomposed.png","hash":"6ad676a2df760d823510d5ddb9a6b367247bd9c2","modified":1587272760402},{"_id":"public/favicon.ico","hash":"8f78f11cc434f3ba65061490d2b7179c295e8559","modified":1587272760402},{"_id":"public/fonts/iconfont/iconfont.eot","hash":"d18736f7885569e497698d17f49b9167add67dc6","modified":1587274601667},{"_id":"public/image/gavatar.jpg","hash":"974547c384669846ee47989cb3b9c3f80002f010","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.woff","hash":"a57593c49b56c16ac1def0e1f3dbca3f658b3579","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.svg","hash":"5c9c4e44179a7435d0f91df4ce1154dd677ad8c2","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.woff2","hash":"39d97a0f72417487f5c1e0a0abf8e27dd6ebda31","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.ttf","hash":"41c4f4dc82e42452dcfd19caed6c7dc333ee769e","modified":1587274601667},{"_id":"public/css/layout.css","hash":"c81e2e01ff5e95a3e613064b8490045ff936c305","modified":1587274601667},{"_id":"public/css/media.css","hash":"5023ee404900a47d61ca0591b2d4e9eace0fe88e","modified":1587274601667},{"_id":"public/css/custom.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1587274601667},{"_id":"public/css/base.css","hash":"ea2d491ce6242c6b7087a2652a1135694c292137","modified":1587274601667},{"_id":"public/css/font.css","hash":"87059edd1f2bfc4296f5599e73208893f2b06458","modified":1587274601667},{"_id":"public/css/normalize.css","hash":"2d4b663b6a4c68295b6ba240fa2dd9fb3863093c","modified":1587274601667},{"_id":"public/css/variable.css","hash":"cb4180b3bbad471e30cf52ebb40e998d58a30d7d","modified":1587274601667},{"_id":"public/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.css","hash":"1e5540dca41dc53879226750f936e72daf616662","modified":1587274601667},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1587274601667},{"_id":"public/js/script.js","hash":"93694e4e16893f83611daa5ba3723b14ecc80abb","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.json","hash":"3123aa840109e385d58a75d34e88a2d621e1ada8","modified":1587274601667},{"_id":"public/css/style.css","hash":"534ca54902458408412998bd6254ecfb3c50ad35","modified":1587274601667},{"_id":"public/fonts/iconfont/iconfont.js","hash":"87bfdaae31251f4d605646c5ae9c67196f6cc4e2","modified":1587274601667},{"_id":"public/fonts/iconfont/demo_index.html","hash":"e3e0eebb0479ff293da9ccf30c8f65821e3db803","modified":1587274601667},{"_id":"public/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1587274601667},{"_id":"public/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1587274601667},{"_id":"public/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1587274601667},{"_id":"public/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1587274601667},{"_id":"public/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1587274601667},{"_id":"themes/chic/source/favicon.png","hash":"6ad676a2df760d823510d5ddb9a6b367247bd9c2","modified":1587273012944},{"_id":"public/favicon.png","hash":"6ad676a2df760d823510d5ddb9a6b367247bd9c2","modified":1587274601667}],"Category":[{"name":"读书","_id":"ck96ffj9t0005rmp96h0adtto"},{"name":"技术","parent":"ck96ffj9t0005rmp96h0adtto","_id":"ck96ffj9w0009rmp9efkndmo5"},{"name":"配置","parent":"ck96ffj9w0009rmp9efkndmo5","_id":"ck96ffj9x000drmp91sbnexr3"},{"name":"工具","parent":"ck96ffj9x000drmp91sbnexr3","_id":"ck96ffj9x000ermp99od38af4"},{"name":"配置","_id":"ck96ffja8000nrmp982549tc7"},{"name":"工具","_id":"ck96ffjad000urmp9hh2q77yn"},{"name":"技术","_id":"ck96ffjan001grmp979hi36p2"},{"name":"生活随想","_id":"ck96fw2p6004yrmp910v1ewaf"},{"name":"阅读笔记","_id":"ck96fzgti0058rmp904qubxdd"},{"name":"编程学习","_id":"ck96g4y05005mrmp9gpfaad1v"}],"Data":[],"Page":[{"title":"标签","layout":"tag","date":"2020-04-19T02:20:18.000Z","_content":"","source":"tag/index.md","raw":"---\ntitle: 标签\nlayout: tag\ndate: 2020-04-18 22:20:18\n---\n","updated":"2020-04-19T03:01:44.019Z","path":"tag/index.html","_id":"ck96fbnve0000rmp93cgs4o98","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","layout":"category","date":"2020-04-19T02:20:23.000Z","_content":"","source":"category/index.md","raw":"---\ntitle: 分类\nlayout: category\ndate: 2020-04-18 22:20:23\n---\n","updated":"2020-04-19T03:01:31.610Z","path":"category/index.html","_id":"ck96fbnvn0002rmp94ndy8up0","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于","layout":"page","date":"2020-04-19T02:20:23.000Z","_content":"\n记录学习、生活和工作。\n","source":"about/index.md","raw":"---\ntitle: 关于\nlayout: page\ndate: 2020-04-18 22:20:23\n---\n\n记录学习、生活和工作。\n","updated":"2020-04-19T03:36:54.222Z","path":"about/index.html","_id":"ck96h43sj0000dfp9ge1zfeqp","comments":1,"content":"<p>记录学习、生活和工作。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>记录学习、生活和工作。</p>\n"}],"Post":[{"layout":"post","title":"名词解释","date":"2014-11-13T05:00:00.000Z","description":"一些自己对名词的理解","keywords":"成熟,融入,名词","_content":"\n#### 成熟\n一种自觉。让你可以轻车熟路地以简单世故的方式应对身边的事物，并拿捏到最佳程度。而在这样的世界里，你是自由的。你可以随心所欲而不逾矩。\n\n#### 融入\n去掉自己的独特个性，接受主流的价值观。\n\n---\n以前总会努力去了解人性，理解这个世界，但还是做不到。然后远离了很多人和事，把自己关在屋子里。一天，一个月，一年。慢慢发现，时间真的是这世上唯一存在的东西，而人只不过证明其存在罢了。\n\n\n","source":"_posts/2014-11-13-my-dict.md","raw":"---\nlayout: post\ntitle: 名词解释\ncategory: 阅读笔记\ntags: [笔记]\ndate: 2014-11-13\ndescription: 一些自己对名词的理解\nkeywords: 成熟,融入,名词\n---\n\n#### 成熟\n一种自觉。让你可以轻车熟路地以简单世故的方式应对身边的事物，并拿捏到最佳程度。而在这样的世界里，你是自由的。你可以随心所欲而不逾矩。\n\n#### 融入\n去掉自己的独特个性，接受主流的价值观。\n\n---\n以前总会努力去了解人性，理解这个世界，但还是做不到。然后远离了很多人和事，把自己关在屋子里。一天，一个月，一年。慢慢发现，时间真的是这世上唯一存在的东西，而人只不过证明其存在罢了。\n\n\n","slug":"2014-11-13-my-dict","published":1,"updated":"2020-04-19T02:43:07.990Z","_id":"ck96ffj9r0004rmp934o1fceh","comments":1,"photos":[],"link":"","content":"<h4 id=\"成熟\"><a href=\"#成熟\" class=\"headerlink\" title=\"成熟\"></a>成熟</h4><p>一种自觉。让你可以轻车熟路地以简单世故的方式应对身边的事物，并拿捏到最佳程度。而在这样的世界里，你是自由的。你可以随心所欲而不逾矩。</p>\n<h4 id=\"融入\"><a href=\"#融入\" class=\"headerlink\" title=\"融入\"></a>融入</h4><p>去掉自己的独特个性，接受主流的价值观。</p>\n<hr>\n<p>以前总会努力去了解人性，理解这个世界，但还是做不到。然后远离了很多人和事，把自己关在屋子里。一天，一个月，一年。慢慢发现，时间真的是这世上唯一存在的东西，而人只不过证明其存在罢了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"成熟\"><a href=\"#成熟\" class=\"headerlink\" title=\"成熟\"></a>成熟</h4><p>一种自觉。让你可以轻车熟路地以简单世故的方式应对身边的事物，并拿捏到最佳程度。而在这样的世界里，你是自由的。你可以随心所欲而不逾矩。</p>\n<h4 id=\"融入\"><a href=\"#融入\" class=\"headerlink\" title=\"融入\"></a>融入</h4><p>去掉自己的独特个性，接受主流的价值观。</p>\n<hr>\n<p>以前总会努力去了解人性，理解这个世界，但还是做不到。然后远离了很多人和事，把自己关在屋子里。一天，一个月，一年。慢慢发现，时间真的是这世上唯一存在的东西，而人只不过证明其存在罢了。</p>\n"},{"layout":"post","title":"读书摘录","date":"2014-11-14T05:00:00.000Z","description":"收录自己喜欢的句子","keywords":"哲学,生活,见解","_content":"\nUpdated at 2014.11.18\n\n在极限的媚俗之王国，总是先有答案并排除一切新问题。所以极权的媚俗的真正对手就是爱发问的人。 人们总想以自己的生活制造媚俗，要摆脱它，得付出多少艰辛，令人绝望。\n-- 米兰昆德拉《生命中不能承受之轻》\n\n一个呆板的人只能理解呆板事物，一个庸俗的人只会欣赏平庸和俗套，头脑混乱者喜欢模糊不清的东西，没有思想的人则和胡言昏话气味相投。\n-- 叔本华\n\n一个习惯于处理钱财的有钱女人，会小心翼翼地花钱。但一个在结婚以后才首次获得支配金钱权利的女人，会再用钱的时候大胆妄为，她简直就是大肆挥霍。\n-- 博斯维尔《约翰逊的一生》\n\n在独处的时候，每个人都只能反求于自身，这个人的自身拥有就会暴露无遗。\n-- 叔本华\n\n----\nUpdated at 2014.11.14\n\n不乱于心，不困于情。不畏将来，不念过往。如此，安好。\n-- 丰子恺\n\nDon’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition.\n-- Steve Jobs\n\nAs a teenager I was so insecure. I was the type of guy that never fitted in because he never dared to choose. I was convinced I had absolutely no talent at all. For nothing. And that thought took away all my ambition too.\n-- Johnny Depp\n\n人们最终所真正能够理解和欣赏的事物，只不过是一些在本质上和他自身相同的事物罢了。\n-- 叔本华\n\n奈何一个人随着年龄增长，梦想便不复轻盈。他开始用双手掂量生活，更看重果实而非花朵。\n-- 叶芝《凯尔特的薄暮》\n\n派：“人生就是不断地放下，遗憾的是，我都没能好好地与他们告别。”\n-- 李安  《少年派的奇幻漂流》\n\n最美丽的女人不是她自身，而是她营造的美丽氛围。\n-- 严歌苓《无出路咖啡馆》\n\n老师问我长大想做什么，我说“快乐的人”。老师说我不懂问题，我告诉老师，是他不懂人生。\n-- 约翰·列侬\n\n麦兜系列的很大一部分是在试图回答一个问题: 人怎样才可以不扭曲自己, 同时还能面对这个比较扭曲的世界\n-- \"麦兜之父\"谢立文\n\n白岩松有天安慰我：“人们声称的最美好的岁月其实都是最痛苦的，只是事后回忆起来的时候才那么幸福。”\n-- 柴静《看见》\n\n好莱坞的想象力，它代表着人类的技术和制作的顶峰，但是，以技术和制作为代表的想象不是人类想象的全部。好莱坞的想象，是头脑的想象，而还有一种想象则属于心灵。科学和技术的探索也许有穷尽的一天，而心灵的想象却永无止境。\n-- 蒋韵\n\n漂亮和美丽是两回事。一双眼睛可以不漂亮，但眼神可以美丽。一副不够标志的面容可以有可爱的神态，一副不完美的身材可以有好看的仪态和举止。这都在于一个灵魂的丰富和坦荡。或许美化灵魂有不少途径，但我想，阅读是其中易走的，不昂贵的，不须求助他人的捷径。\n-- @严歌苓\n\n我们花了两年学会说话，却要花上六十年来学会闭嘴。大多数时候，我们说得越多，彼此的距离却越远，矛盾也越多。在沟通中，大多数人总是急于表达自己，一吐为快，却一点也不懂对方。两年学说话，一生学闭嘴。懂与不懂，不多说。心乱心静，慢慢说。若真没话，就别说。\n-- 海明威\n\n有些人在普通人里算出类拔萃，非常努力又不甘平庸。这种人但凡有了了一点年龄或阅历，就总忍不住想表现得深刻一点。在伪装深刻和真心肤浅中间，选择哪个更容易看见自己？\n-- 柴静《看见》\n\n他现在穷了，原因并非别人剥夺了他的一切，而是他抛弃了一切。缘何如此？---他惯于寻觅。所谓穷人，正是那些对他甘愿受穷做了错误理解的人。\n-- 尼采\n\n有时，答案和问题并不在一条直线上。\n-- 刘墉\n\n友情和爱情一样，也是有保鲜期的，想一想，有多少已经不联系的朋友，默默地存在于你的通讯录中。不是不想联系，实在是人生残酷，时空变幻，你我再无交集，与其相见，不如怀念，与其攀缘，不如随缘。人生不过是一场旅行，你路过我，我路过你，然后，各自修行，各自向前。\n--  伊北《半生素衣:陆小曼传》\n\n两种人爱做梦：弱者和智者。弱者梦想现实中有但他无力得到的东西，他以之抚慰生存的失败。智者梦想现实中没有也不可能有的东西，他以之解说生存的意义。\n-- 周国平\n\nLife's altered you, as it's altered me. And what would be the point of living if we didn't let life change us? 生活改变了你，也改变了我，如果我们拒绝被生活改变，那生活又有什么意义？\n-- 《唐顿庄园》\n\n指间的戒指不再闪亮，婚纱在衣柜早就尘封，我们的容颜都已慢慢地苍老。但那份心情，却依旧没有改变。感谢你带给我的每一天。正是因为你，我才有勇气说，“永远，永远”。\n-- 高铭《天才在左 疯子在右》\n\nYou don't need anybody to tell you who you are or what you are. You are what you are!\n-- John Lennon\n\n","source":"_posts/2014-11-14-aphorism.md","raw":"---\nlayout: post\ntitle: 读书摘录\ncategory: 阅读笔记\ntags: [哲学, 笔记]\ndate: 2014-11-14\ndescription: 收录自己喜欢的句子\nkeywords: 哲学,生活,见解\n---\n\nUpdated at 2014.11.18\n\n在极限的媚俗之王国，总是先有答案并排除一切新问题。所以极权的媚俗的真正对手就是爱发问的人。 人们总想以自己的生活制造媚俗，要摆脱它，得付出多少艰辛，令人绝望。\n-- 米兰昆德拉《生命中不能承受之轻》\n\n一个呆板的人只能理解呆板事物，一个庸俗的人只会欣赏平庸和俗套，头脑混乱者喜欢模糊不清的东西，没有思想的人则和胡言昏话气味相投。\n-- 叔本华\n\n一个习惯于处理钱财的有钱女人，会小心翼翼地花钱。但一个在结婚以后才首次获得支配金钱权利的女人，会再用钱的时候大胆妄为，她简直就是大肆挥霍。\n-- 博斯维尔《约翰逊的一生》\n\n在独处的时候，每个人都只能反求于自身，这个人的自身拥有就会暴露无遗。\n-- 叔本华\n\n----\nUpdated at 2014.11.14\n\n不乱于心，不困于情。不畏将来，不念过往。如此，安好。\n-- 丰子恺\n\nDon’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition.\n-- Steve Jobs\n\nAs a teenager I was so insecure. I was the type of guy that never fitted in because he never dared to choose. I was convinced I had absolutely no talent at all. For nothing. And that thought took away all my ambition too.\n-- Johnny Depp\n\n人们最终所真正能够理解和欣赏的事物，只不过是一些在本质上和他自身相同的事物罢了。\n-- 叔本华\n\n奈何一个人随着年龄增长，梦想便不复轻盈。他开始用双手掂量生活，更看重果实而非花朵。\n-- 叶芝《凯尔特的薄暮》\n\n派：“人生就是不断地放下，遗憾的是，我都没能好好地与他们告别。”\n-- 李安  《少年派的奇幻漂流》\n\n最美丽的女人不是她自身，而是她营造的美丽氛围。\n-- 严歌苓《无出路咖啡馆》\n\n老师问我长大想做什么，我说“快乐的人”。老师说我不懂问题，我告诉老师，是他不懂人生。\n-- 约翰·列侬\n\n麦兜系列的很大一部分是在试图回答一个问题: 人怎样才可以不扭曲自己, 同时还能面对这个比较扭曲的世界\n-- \"麦兜之父\"谢立文\n\n白岩松有天安慰我：“人们声称的最美好的岁月其实都是最痛苦的，只是事后回忆起来的时候才那么幸福。”\n-- 柴静《看见》\n\n好莱坞的想象力，它代表着人类的技术和制作的顶峰，但是，以技术和制作为代表的想象不是人类想象的全部。好莱坞的想象，是头脑的想象，而还有一种想象则属于心灵。科学和技术的探索也许有穷尽的一天，而心灵的想象却永无止境。\n-- 蒋韵\n\n漂亮和美丽是两回事。一双眼睛可以不漂亮，但眼神可以美丽。一副不够标志的面容可以有可爱的神态，一副不完美的身材可以有好看的仪态和举止。这都在于一个灵魂的丰富和坦荡。或许美化灵魂有不少途径，但我想，阅读是其中易走的，不昂贵的，不须求助他人的捷径。\n-- @严歌苓\n\n我们花了两年学会说话，却要花上六十年来学会闭嘴。大多数时候，我们说得越多，彼此的距离却越远，矛盾也越多。在沟通中，大多数人总是急于表达自己，一吐为快，却一点也不懂对方。两年学说话，一生学闭嘴。懂与不懂，不多说。心乱心静，慢慢说。若真没话，就别说。\n-- 海明威\n\n有些人在普通人里算出类拔萃，非常努力又不甘平庸。这种人但凡有了了一点年龄或阅历，就总忍不住想表现得深刻一点。在伪装深刻和真心肤浅中间，选择哪个更容易看见自己？\n-- 柴静《看见》\n\n他现在穷了，原因并非别人剥夺了他的一切，而是他抛弃了一切。缘何如此？---他惯于寻觅。所谓穷人，正是那些对他甘愿受穷做了错误理解的人。\n-- 尼采\n\n有时，答案和问题并不在一条直线上。\n-- 刘墉\n\n友情和爱情一样，也是有保鲜期的，想一想，有多少已经不联系的朋友，默默地存在于你的通讯录中。不是不想联系，实在是人生残酷，时空变幻，你我再无交集，与其相见，不如怀念，与其攀缘，不如随缘。人生不过是一场旅行，你路过我，我路过你，然后，各自修行，各自向前。\n--  伊北《半生素衣:陆小曼传》\n\n两种人爱做梦：弱者和智者。弱者梦想现实中有但他无力得到的东西，他以之抚慰生存的失败。智者梦想现实中没有也不可能有的东西，他以之解说生存的意义。\n-- 周国平\n\nLife's altered you, as it's altered me. And what would be the point of living if we didn't let life change us? 生活改变了你，也改变了我，如果我们拒绝被生活改变，那生活又有什么意义？\n-- 《唐顿庄园》\n\n指间的戒指不再闪亮，婚纱在衣柜早就尘封，我们的容颜都已慢慢地苍老。但那份心情，却依旧没有改变。感谢你带给我的每一天。正是因为你，我才有勇气说，“永远，永远”。\n-- 高铭《天才在左 疯子在右》\n\nYou don't need anybody to tell you who you are or what you are. You are what you are!\n-- John Lennon\n\n","slug":"2014-11-14-aphorism","published":1,"updated":"2020-04-19T02:42:58.714Z","_id":"ck96ffja6000jrmp9147u4x8z","comments":1,"photos":[],"link":"","content":"<p>Updated at 2014.11.18</p>\n<p>在极限的媚俗之王国，总是先有答案并排除一切新问题。所以极权的媚俗的真正对手就是爱发问的人。 人们总想以自己的生活制造媚俗，要摆脱它，得付出多少艰辛，令人绝望。<br>– 米兰昆德拉《生命中不能承受之轻》</p>\n<p>一个呆板的人只能理解呆板事物，一个庸俗的人只会欣赏平庸和俗套，头脑混乱者喜欢模糊不清的东西，没有思想的人则和胡言昏话气味相投。<br>– 叔本华</p>\n<p>一个习惯于处理钱财的有钱女人，会小心翼翼地花钱。但一个在结婚以后才首次获得支配金钱权利的女人，会再用钱的时候大胆妄为，她简直就是大肆挥霍。<br>– 博斯维尔《约翰逊的一生》</p>\n<p>在独处的时候，每个人都只能反求于自身，这个人的自身拥有就会暴露无遗。<br>– 叔本华</p>\n<hr>\n<p>Updated at 2014.11.14</p>\n<p>不乱于心，不困于情。不畏将来，不念过往。如此，安好。<br>– 丰子恺</p>\n<p>Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition.<br>– Steve Jobs</p>\n<p>As a teenager I was so insecure. I was the type of guy that never fitted in because he never dared to choose. I was convinced I had absolutely no talent at all. For nothing. And that thought took away all my ambition too.<br>– Johnny Depp</p>\n<p>人们最终所真正能够理解和欣赏的事物，只不过是一些在本质上和他自身相同的事物罢了。<br>– 叔本华</p>\n<p>奈何一个人随着年龄增长，梦想便不复轻盈。他开始用双手掂量生活，更看重果实而非花朵。<br>– 叶芝《凯尔特的薄暮》</p>\n<p>派：“人生就是不断地放下，遗憾的是，我都没能好好地与他们告别。”<br>– 李安  《少年派的奇幻漂流》</p>\n<p>最美丽的女人不是她自身，而是她营造的美丽氛围。<br>– 严歌苓《无出路咖啡馆》</p>\n<p>老师问我长大想做什么，我说“快乐的人”。老师说我不懂问题，我告诉老师，是他不懂人生。<br>– 约翰·列侬</p>\n<p>麦兜系列的很大一部分是在试图回答一个问题: 人怎样才可以不扭曲自己, 同时还能面对这个比较扭曲的世界<br>– “麦兜之父”谢立文</p>\n<p>白岩松有天安慰我：“人们声称的最美好的岁月其实都是最痛苦的，只是事后回忆起来的时候才那么幸福。”<br>– 柴静《看见》</p>\n<p>好莱坞的想象力，它代表着人类的技术和制作的顶峰，但是，以技术和制作为代表的想象不是人类想象的全部。好莱坞的想象，是头脑的想象，而还有一种想象则属于心灵。科学和技术的探索也许有穷尽的一天，而心灵的想象却永无止境。<br>– 蒋韵</p>\n<p>漂亮和美丽是两回事。一双眼睛可以不漂亮，但眼神可以美丽。一副不够标志的面容可以有可爱的神态，一副不完美的身材可以有好看的仪态和举止。这都在于一个灵魂的丰富和坦荡。或许美化灵魂有不少途径，但我想，阅读是其中易走的，不昂贵的，不须求助他人的捷径。<br>– @严歌苓</p>\n<p>我们花了两年学会说话，却要花上六十年来学会闭嘴。大多数时候，我们说得越多，彼此的距离却越远，矛盾也越多。在沟通中，大多数人总是急于表达自己，一吐为快，却一点也不懂对方。两年学说话，一生学闭嘴。懂与不懂，不多说。心乱心静，慢慢说。若真没话，就别说。<br>– 海明威</p>\n<p>有些人在普通人里算出类拔萃，非常努力又不甘平庸。这种人但凡有了了一点年龄或阅历，就总忍不住想表现得深刻一点。在伪装深刻和真心肤浅中间，选择哪个更容易看见自己？<br>– 柴静《看见》</p>\n<p>他现在穷了，原因并非别人剥夺了他的一切，而是他抛弃了一切。缘何如此？—他惯于寻觅。所谓穷人，正是那些对他甘愿受穷做了错误理解的人。<br>– 尼采</p>\n<p>有时，答案和问题并不在一条直线上。<br>– 刘墉</p>\n<p>友情和爱情一样，也是有保鲜期的，想一想，有多少已经不联系的朋友，默默地存在于你的通讯录中。不是不想联系，实在是人生残酷，时空变幻，你我再无交集，与其相见，不如怀念，与其攀缘，不如随缘。人生不过是一场旅行，你路过我，我路过你，然后，各自修行，各自向前。<br>–  伊北《半生素衣:陆小曼传》</p>\n<p>两种人爱做梦：弱者和智者。弱者梦想现实中有但他无力得到的东西，他以之抚慰生存的失败。智者梦想现实中没有也不可能有的东西，他以之解说生存的意义。<br>– 周国平</p>\n<p>Life’s altered you, as it’s altered me. And what would be the point of living if we didn’t let life change us? 生活改变了你，也改变了我，如果我们拒绝被生活改变，那生活又有什么意义？<br>– 《唐顿庄园》</p>\n<p>指间的戒指不再闪亮，婚纱在衣柜早就尘封，我们的容颜都已慢慢地苍老。但那份心情，却依旧没有改变。感谢你带给我的每一天。正是因为你，我才有勇气说，“永远，永远”。<br>– 高铭《天才在左 疯子在右》</p>\n<p>You don’t need anybody to tell you who you are or what you are. You are what you are!<br>– John Lennon</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Updated at 2014.11.18</p>\n<p>在极限的媚俗之王国，总是先有答案并排除一切新问题。所以极权的媚俗的真正对手就是爱发问的人。 人们总想以自己的生活制造媚俗，要摆脱它，得付出多少艰辛，令人绝望。<br>– 米兰昆德拉《生命中不能承受之轻》</p>\n<p>一个呆板的人只能理解呆板事物，一个庸俗的人只会欣赏平庸和俗套，头脑混乱者喜欢模糊不清的东西，没有思想的人则和胡言昏话气味相投。<br>– 叔本华</p>\n<p>一个习惯于处理钱财的有钱女人，会小心翼翼地花钱。但一个在结婚以后才首次获得支配金钱权利的女人，会再用钱的时候大胆妄为，她简直就是大肆挥霍。<br>– 博斯维尔《约翰逊的一生》</p>\n<p>在独处的时候，每个人都只能反求于自身，这个人的自身拥有就会暴露无遗。<br>– 叔本华</p>\n<hr>\n<p>Updated at 2014.11.14</p>\n<p>不乱于心，不困于情。不畏将来，不念过往。如此，安好。<br>– 丰子恺</p>\n<p>Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition.<br>– Steve Jobs</p>\n<p>As a teenager I was so insecure. I was the type of guy that never fitted in because he never dared to choose. I was convinced I had absolutely no talent at all. For nothing. And that thought took away all my ambition too.<br>– Johnny Depp</p>\n<p>人们最终所真正能够理解和欣赏的事物，只不过是一些在本质上和他自身相同的事物罢了。<br>– 叔本华</p>\n<p>奈何一个人随着年龄增长，梦想便不复轻盈。他开始用双手掂量生活，更看重果实而非花朵。<br>– 叶芝《凯尔特的薄暮》</p>\n<p>派：“人生就是不断地放下，遗憾的是，我都没能好好地与他们告别。”<br>– 李安  《少年派的奇幻漂流》</p>\n<p>最美丽的女人不是她自身，而是她营造的美丽氛围。<br>– 严歌苓《无出路咖啡馆》</p>\n<p>老师问我长大想做什么，我说“快乐的人”。老师说我不懂问题，我告诉老师，是他不懂人生。<br>– 约翰·列侬</p>\n<p>麦兜系列的很大一部分是在试图回答一个问题: 人怎样才可以不扭曲自己, 同时还能面对这个比较扭曲的世界<br>– “麦兜之父”谢立文</p>\n<p>白岩松有天安慰我：“人们声称的最美好的岁月其实都是最痛苦的，只是事后回忆起来的时候才那么幸福。”<br>– 柴静《看见》</p>\n<p>好莱坞的想象力，它代表着人类的技术和制作的顶峰，但是，以技术和制作为代表的想象不是人类想象的全部。好莱坞的想象，是头脑的想象，而还有一种想象则属于心灵。科学和技术的探索也许有穷尽的一天，而心灵的想象却永无止境。<br>– 蒋韵</p>\n<p>漂亮和美丽是两回事。一双眼睛可以不漂亮，但眼神可以美丽。一副不够标志的面容可以有可爱的神态，一副不完美的身材可以有好看的仪态和举止。这都在于一个灵魂的丰富和坦荡。或许美化灵魂有不少途径，但我想，阅读是其中易走的，不昂贵的，不须求助他人的捷径。<br>– @严歌苓</p>\n<p>我们花了两年学会说话，却要花上六十年来学会闭嘴。大多数时候，我们说得越多，彼此的距离却越远，矛盾也越多。在沟通中，大多数人总是急于表达自己，一吐为快，却一点也不懂对方。两年学说话，一生学闭嘴。懂与不懂，不多说。心乱心静，慢慢说。若真没话，就别说。<br>– 海明威</p>\n<p>有些人在普通人里算出类拔萃，非常努力又不甘平庸。这种人但凡有了了一点年龄或阅历，就总忍不住想表现得深刻一点。在伪装深刻和真心肤浅中间，选择哪个更容易看见自己？<br>– 柴静《看见》</p>\n<p>他现在穷了，原因并非别人剥夺了他的一切，而是他抛弃了一切。缘何如此？—他惯于寻觅。所谓穷人，正是那些对他甘愿受穷做了错误理解的人。<br>– 尼采</p>\n<p>有时，答案和问题并不在一条直线上。<br>– 刘墉</p>\n<p>友情和爱情一样，也是有保鲜期的，想一想，有多少已经不联系的朋友，默默地存在于你的通讯录中。不是不想联系，实在是人生残酷，时空变幻，你我再无交集，与其相见，不如怀念，与其攀缘，不如随缘。人生不过是一场旅行，你路过我，我路过你，然后，各自修行，各自向前。<br>–  伊北《半生素衣:陆小曼传》</p>\n<p>两种人爱做梦：弱者和智者。弱者梦想现实中有但他无力得到的东西，他以之抚慰生存的失败。智者梦想现实中没有也不可能有的东西，他以之解说生存的意义。<br>– 周国平</p>\n<p>Life’s altered you, as it’s altered me. And what would be the point of living if we didn’t let life change us? 生活改变了你，也改变了我，如果我们拒绝被生活改变，那生活又有什么意义？<br>– 《唐顿庄园》</p>\n<p>指间的戒指不再闪亮，婚纱在衣柜早就尘封，我们的容颜都已慢慢地苍老。但那份心情，却依旧没有改变。感谢你带给我的每一天。正是因为你，我才有勇气说，“永远，永远”。<br>– 高铭《天才在左 疯子在右》</p>\n<p>You don’t need anybody to tell you who you are or what you are. You are what you are!<br>– John Lennon</p>\n"},{"layout":"post","title":"使用mongohub在vagrant里连接mongodb","date":"2014-12-12T05:00:00.000Z","description":"使用 Mongohub 在 Vagrant 里连接 MongoDB","keywords":"MongoDB, Mongohub, Vagrant","_content":"\n重要: 注释掉mongodb配置 `# bind_ip = 127.0.0.1`\n\n1. forword 端口27017到宿主机\n\n2. 使用ssh tunnel方式连接\n  \n    SSH Host = 127.0.0.1\n\n    SSH Port = 2222\n\n    Username = vagrant\n\n    Password = vagrant\n\n    key = ~/.vagrant.d/insecure_private_key\n\n","source":"_posts/2014-12-12-connect-mongodb-in-vagrant-with-mongohub.md","raw":"---\nlayout: post\ntitle: 使用mongohub在vagrant里连接mongodb\ncategory: 编程学习\ntags: [MongoDB]\ndate: 2014-12-12\ndescription: 使用 Mongohub 在 Vagrant 里连接 MongoDB\nkeywords: MongoDB, Mongohub, Vagrant\n---\n\n重要: 注释掉mongodb配置 `# bind_ip = 127.0.0.1`\n\n1. forword 端口27017到宿主机\n\n2. 使用ssh tunnel方式连接\n  \n    SSH Host = 127.0.0.1\n\n    SSH Port = 2222\n\n    Username = vagrant\n\n    Password = vagrant\n\n    key = ~/.vagrant.d/insecure_private_key\n\n","slug":"2014-12-12-connect-mongodb-in-vagrant-with-mongohub","published":1,"updated":"2020-04-19T02:44:43.714Z","_id":"ck96ffja7000krmp9hg901a4r","comments":1,"photos":[],"link":"","content":"<p>重要: 注释掉mongodb配置 <code># bind_ip = 127.0.0.1</code></p>\n<ol>\n<li><p>forword 端口27017到宿主机</p>\n</li>\n<li><p>使用ssh tunnel方式连接</p>\n<p> SSH Host = 127.0.0.1</p>\n<p> SSH Port = 2222</p>\n<p> Username = vagrant</p>\n<p> Password = vagrant</p>\n<p> key = ~/.vagrant.d/insecure_private_key</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>重要: 注释掉mongodb配置 <code># bind_ip = 127.0.0.1</code></p>\n<ol>\n<li><p>forword 端口27017到宿主机</p>\n</li>\n<li><p>使用ssh tunnel方式连接</p>\n<p> SSH Host = 127.0.0.1</p>\n<p> SSH Port = 2222</p>\n<p> Username = vagrant</p>\n<p> Password = vagrant</p>\n<p> key = ~/.vagrant.d/insecure_private_key</p>\n</li>\n</ol>\n"},{"layout":"post","title":"Linux 常用命令笔记","date":"2014-12-18T05:00:00.000Z","description":"收录Linux中常用命令","keywords":"Linux","_content":"\n## [Manage User](#manage-user)\n\n* /etc/shadow : Secure user account information\n* /etc/passwd : User account information\n* /etc/gshadow : Contains the shadowed information for group accounts\n* /etc/group : Defines the groups to which users belong\n* /etc/sudoers : List of who can run what by sudo\n* /home/* : Home directories\n\n### Add new Group\n\n* `groupadd [group]`\n\n###  Add new User\n\n* `useradd -m -g [initial_group] -G [additional_groups] -s [login_shell] [username]`\n* `-m` creates the user home directory as /home/username. Within their home directory, a non-root user can write files, delete them, install programs, and so on.\n* `-g` defines the group name or number of the user's initial login group. If specified, the group name must exist; if a group number is provided, it must refer to an already existing group. If not specified, the behaviour of useradd will depend on the USERGROUPS_ENAB variable contained in /etc/login.defs. The default behaviour (USERGROUPS_ENAB yes) is to create a group with the same name as the username, with GID equal to UID.\n* `-G` introduces a list of supplementary groups which the user is also a member of. Each group is separated from the next by a comma, with no intervening spaces. The default is for the user to belong only to the initial group.\n* `-s` defines the path and file name of the user's default login shell. After the boot process is complete, the default login shell is the one specified here. Ensure the chosen shell package is installed if choosing something other than Bash.\n\n###  Set user to sudoers\n\n* Add user to sudo group: `sudo usermod -aG sudo <username>`\n* Remove user from sudo group: `gpasswd -d user sudo`\n\n###  SSH login without password\n\n* `ssh-copy-id user@server`\n* `cat .ssh/id_rsa.pub | ssh user@server 'cat >> .ssh/authorized_keys'`\n    * Avoid entering passphrase (just once):\n        * `eval \"$(ssh-agent -s)\"`\n        * `ssh-add ~/.ssh/id_rsa`\n    * [Auto-launching ssh-agent on msysgit] (https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit)\n\n###  Generating SSH keys\n\n* `ssh-keygen -t rsa -C \"your_email@example.com\"`\n\n### Change hostname\n\n* `vi /etc/hostname`\n* don't forget to add `127.0.0.1 <hostname>` to /etc/hosts\n\n### Accept ssh host keys automatically on Linux\n\n* `ssh -oStrictHostKeyChecking=no user@remote_host`\n* Disable strict host key checking permanently in ssh\n\n    * Add the following to either ~/.ssh/config or /etc/ssh/ssh_config.\n\n        * Sample 1(disable host key checking for a particular host):\n\n                Host remote_host.com\n                StrictHostKeyChecking no\n\n        * Sample 2(turn off host key checking for all hosts you connect to):\n\n                Host *\n                StrictHostKeyChecking no\n\n        * Sample 3(avoid host key verification, and not use known_hosts file for 192.168.1.* subnet):\n\n                Host 192.168.0.*\n                StrictHostKeyChecking no\n                UserKnownHostsFile=/dev/null\n\n* Add the fingerprint for a server to your known_hosts manually.\n\n    `ssh-keyscan -H <ip-address> >> ~/.ssh/known_hosts`\n\n    `ssh-keyscan -H <hostname> >> ~/.ssh/known_hosts`\n\n    Remove them:\n\n    `ssh-keygen -R <ip-address>`\n\n    `ssh-keygen -R <hostname>`\n\n## Netstat Command\n\n* Find out on which port a program is running\n\n    * `netstat -ap | grep ssh`\n    * `netstat -an | grep ':80'`\n\n## Service Management\n\n* Check service automatically start or not.\n    * `ls /etc/rc2.d` // Just need to check the runlevel 2 on Ubuntu\n* Add service `apache2`\n    * `update-rc.d apache2 defaults`\n*  Remove service `apache2`\n    * `update-rc.d -f  apache2 remove`\n* Check the status of service `apache2`\n    * `service apache2 status`\n* Check Server `hhvm` autoload level\n    * `sudo initctl show-config hhvm`\n\n## Remove executable bit recursively from files (not directories)\n\n* `chmod -R -x+X *`\n\n    * `-R` - operate recursively\n    * `-x` - remove executable flags for all users\n    * `+X` - set executable flags for all users if it is a directory\n    * Note: On OS X, have to do it separately in two commands: `sudo chmod -R -x * && sudo chmod -R +X *`\n\n* `find . -type f -exec chmod -x {} \\;`\n* `chmod -x $(find . -type f)`\n\n## Batch replace text inside text file\n\n* `find . -type f -name \\*.txt -exec sed -i.bak 's|http://|rtmp://|g' {} +`\n\n    * This will create backups of each file. I suggest you check a few to make sure it did what you want, then you can delete them using `find . -name \\*.bak -delete`\n\n## Find and remove files\n\n* `find . -type f -name \"FILE-TO-FIND\" -exec rm -f {} \\;`\n\n    * `-name \"FILE-TO-FIND\"` : File pattern.\n    * `-exec rm -rf {} \\;` : Delete all files matched by file pattern.\n    * `-type f` : Only match files and do not include directory names.\n\n## Bug Collection\n\n* [Ubuntu 14.04] Nodejs ERROR : /usr/bin/env: node: No such file or directory\n    * `ln -s /usr/bin/nodejs /usr/bin/node`\n\n## Checking Hardware\n\n* Mainboard: `dmidecode | grep -i 'serial number'`\n* CPU: `cat /proc/cpuinfo`\n* Hard Drive:\n    * partition `fdisk -l`\n    * size `df -h`\n    * usage `du -h`\n* Memory: `cat /proc/meminfo`\n\n## Kill all the process\n* `ps aux | grep procname | awk '{print $2}' | xargs kill -9`\n\n## Git Related\n\n* Delete remote tags.\n    * `git tag -l | xargs -n 1 git push --delete origin`\n* Delete local tasg.\n    * `git tag -l | xargs git tag -d`\n\n","source":"_posts/2014-12-18-linux-notes.md","raw":"---\nlayout: post\ntitle: Linux 常用命令笔记\ncategory: 编程学习\ndate: 2014-12-18\ntags: [Linux]\ndescription: 收录Linux中常用命令\nkeywords: Linux\n---\n\n## [Manage User](#manage-user)\n\n* /etc/shadow : Secure user account information\n* /etc/passwd : User account information\n* /etc/gshadow : Contains the shadowed information for group accounts\n* /etc/group : Defines the groups to which users belong\n* /etc/sudoers : List of who can run what by sudo\n* /home/* : Home directories\n\n### Add new Group\n\n* `groupadd [group]`\n\n###  Add new User\n\n* `useradd -m -g [initial_group] -G [additional_groups] -s [login_shell] [username]`\n* `-m` creates the user home directory as /home/username. Within their home directory, a non-root user can write files, delete them, install programs, and so on.\n* `-g` defines the group name or number of the user's initial login group. If specified, the group name must exist; if a group number is provided, it must refer to an already existing group. If not specified, the behaviour of useradd will depend on the USERGROUPS_ENAB variable contained in /etc/login.defs. The default behaviour (USERGROUPS_ENAB yes) is to create a group with the same name as the username, with GID equal to UID.\n* `-G` introduces a list of supplementary groups which the user is also a member of. Each group is separated from the next by a comma, with no intervening spaces. The default is for the user to belong only to the initial group.\n* `-s` defines the path and file name of the user's default login shell. After the boot process is complete, the default login shell is the one specified here. Ensure the chosen shell package is installed if choosing something other than Bash.\n\n###  Set user to sudoers\n\n* Add user to sudo group: `sudo usermod -aG sudo <username>`\n* Remove user from sudo group: `gpasswd -d user sudo`\n\n###  SSH login without password\n\n* `ssh-copy-id user@server`\n* `cat .ssh/id_rsa.pub | ssh user@server 'cat >> .ssh/authorized_keys'`\n    * Avoid entering passphrase (just once):\n        * `eval \"$(ssh-agent -s)\"`\n        * `ssh-add ~/.ssh/id_rsa`\n    * [Auto-launching ssh-agent on msysgit] (https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit)\n\n###  Generating SSH keys\n\n* `ssh-keygen -t rsa -C \"your_email@example.com\"`\n\n### Change hostname\n\n* `vi /etc/hostname`\n* don't forget to add `127.0.0.1 <hostname>` to /etc/hosts\n\n### Accept ssh host keys automatically on Linux\n\n* `ssh -oStrictHostKeyChecking=no user@remote_host`\n* Disable strict host key checking permanently in ssh\n\n    * Add the following to either ~/.ssh/config or /etc/ssh/ssh_config.\n\n        * Sample 1(disable host key checking for a particular host):\n\n                Host remote_host.com\n                StrictHostKeyChecking no\n\n        * Sample 2(turn off host key checking for all hosts you connect to):\n\n                Host *\n                StrictHostKeyChecking no\n\n        * Sample 3(avoid host key verification, and not use known_hosts file for 192.168.1.* subnet):\n\n                Host 192.168.0.*\n                StrictHostKeyChecking no\n                UserKnownHostsFile=/dev/null\n\n* Add the fingerprint for a server to your known_hosts manually.\n\n    `ssh-keyscan -H <ip-address> >> ~/.ssh/known_hosts`\n\n    `ssh-keyscan -H <hostname> >> ~/.ssh/known_hosts`\n\n    Remove them:\n\n    `ssh-keygen -R <ip-address>`\n\n    `ssh-keygen -R <hostname>`\n\n## Netstat Command\n\n* Find out on which port a program is running\n\n    * `netstat -ap | grep ssh`\n    * `netstat -an | grep ':80'`\n\n## Service Management\n\n* Check service automatically start or not.\n    * `ls /etc/rc2.d` // Just need to check the runlevel 2 on Ubuntu\n* Add service `apache2`\n    * `update-rc.d apache2 defaults`\n*  Remove service `apache2`\n    * `update-rc.d -f  apache2 remove`\n* Check the status of service `apache2`\n    * `service apache2 status`\n* Check Server `hhvm` autoload level\n    * `sudo initctl show-config hhvm`\n\n## Remove executable bit recursively from files (not directories)\n\n* `chmod -R -x+X *`\n\n    * `-R` - operate recursively\n    * `-x` - remove executable flags for all users\n    * `+X` - set executable flags for all users if it is a directory\n    * Note: On OS X, have to do it separately in two commands: `sudo chmod -R -x * && sudo chmod -R +X *`\n\n* `find . -type f -exec chmod -x {} \\;`\n* `chmod -x $(find . -type f)`\n\n## Batch replace text inside text file\n\n* `find . -type f -name \\*.txt -exec sed -i.bak 's|http://|rtmp://|g' {} +`\n\n    * This will create backups of each file. I suggest you check a few to make sure it did what you want, then you can delete them using `find . -name \\*.bak -delete`\n\n## Find and remove files\n\n* `find . -type f -name \"FILE-TO-FIND\" -exec rm -f {} \\;`\n\n    * `-name \"FILE-TO-FIND\"` : File pattern.\n    * `-exec rm -rf {} \\;` : Delete all files matched by file pattern.\n    * `-type f` : Only match files and do not include directory names.\n\n## Bug Collection\n\n* [Ubuntu 14.04] Nodejs ERROR : /usr/bin/env: node: No such file or directory\n    * `ln -s /usr/bin/nodejs /usr/bin/node`\n\n## Checking Hardware\n\n* Mainboard: `dmidecode | grep -i 'serial number'`\n* CPU: `cat /proc/cpuinfo`\n* Hard Drive:\n    * partition `fdisk -l`\n    * size `df -h`\n    * usage `du -h`\n* Memory: `cat /proc/meminfo`\n\n## Kill all the process\n* `ps aux | grep procname | awk '{print $2}' | xargs kill -9`\n\n## Git Related\n\n* Delete remote tags.\n    * `git tag -l | xargs -n 1 git push --delete origin`\n* Delete local tasg.\n    * `git tag -l | xargs git tag -d`\n\n","slug":"2014-12-18-linux-notes","published":1,"updated":"2020-04-19T02:57:03.850Z","_id":"ck96ffja8000mrmp9anxje29e","comments":1,"photos":[],"link":"","content":"<h2 id=\"Manage-User\"><a href=\"#Manage-User\" class=\"headerlink\" title=\"Manage User\"></a><a href=\"#manage-user\">Manage User</a></h2><ul>\n<li>/etc/shadow : Secure user account information</li>\n<li>/etc/passwd : User account information</li>\n<li>/etc/gshadow : Contains the shadowed information for group accounts</li>\n<li>/etc/group : Defines the groups to which users belong</li>\n<li>/etc/sudoers : List of who can run what by sudo</li>\n<li>/home/* : Home directories</li>\n</ul>\n<h3 id=\"Add-new-Group\"><a href=\"#Add-new-Group\" class=\"headerlink\" title=\"Add new Group\"></a>Add new Group</h3><ul>\n<li><code>groupadd [group]</code></li>\n</ul>\n<h3 id=\"Add-new-User\"><a href=\"#Add-new-User\" class=\"headerlink\" title=\"Add new User\"></a>Add new User</h3><ul>\n<li><code>useradd -m -g [initial_group] -G [additional_groups] -s [login_shell] [username]</code></li>\n<li><code>-m</code> creates the user home directory as /home/username. Within their home directory, a non-root user can write files, delete them, install programs, and so on.</li>\n<li><code>-g</code> defines the group name or number of the user’s initial login group. If specified, the group name must exist; if a group number is provided, it must refer to an already existing group. If not specified, the behaviour of useradd will depend on the USERGROUPS_ENAB variable contained in /etc/login.defs. The default behaviour (USERGROUPS_ENAB yes) is to create a group with the same name as the username, with GID equal to UID.</li>\n<li><code>-G</code> introduces a list of supplementary groups which the user is also a member of. Each group is separated from the next by a comma, with no intervening spaces. The default is for the user to belong only to the initial group.</li>\n<li><code>-s</code> defines the path and file name of the user’s default login shell. After the boot process is complete, the default login shell is the one specified here. Ensure the chosen shell package is installed if choosing something other than Bash.</li>\n</ul>\n<h3 id=\"Set-user-to-sudoers\"><a href=\"#Set-user-to-sudoers\" class=\"headerlink\" title=\"Set user to sudoers\"></a>Set user to sudoers</h3><ul>\n<li>Add user to sudo group: <code>sudo usermod -aG sudo &lt;username&gt;</code></li>\n<li>Remove user from sudo group: <code>gpasswd -d user sudo</code></li>\n</ul>\n<h3 id=\"SSH-login-without-password\"><a href=\"#SSH-login-without-password\" class=\"headerlink\" title=\"SSH login without password\"></a>SSH login without password</h3><ul>\n<li><code>ssh-copy-id user@server</code></li>\n<li><code>cat .ssh/id_rsa.pub | ssh user@server &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code><ul>\n<li>Avoid entering passphrase (just once):<ul>\n<li><code>eval &quot;$(ssh-agent -s)&quot;</code></li>\n<li><code>ssh-add ~/.ssh/id_rsa</code></li>\n</ul>\n</li>\n<li>[Auto-launching ssh-agent on msysgit] (<a href=\"https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit</a>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Generating-SSH-keys\"><a href=\"#Generating-SSH-keys\" class=\"headerlink\" title=\"Generating SSH keys\"></a>Generating SSH keys</h3><ul>\n<li><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></li>\n</ul>\n<h3 id=\"Change-hostname\"><a href=\"#Change-hostname\" class=\"headerlink\" title=\"Change hostname\"></a>Change hostname</h3><ul>\n<li><code>vi /etc/hostname</code></li>\n<li>don’t forget to add <code>127.0.0.1 &lt;hostname&gt;</code> to /etc/hosts</li>\n</ul>\n<h3 id=\"Accept-ssh-host-keys-automatically-on-Linux\"><a href=\"#Accept-ssh-host-keys-automatically-on-Linux\" class=\"headerlink\" title=\"Accept ssh host keys automatically on Linux\"></a>Accept ssh host keys automatically on Linux</h3><ul>\n<li><p><code>ssh -oStrictHostKeyChecking=no user@remote_host</code></p>\n</li>\n<li><p>Disable strict host key checking permanently in ssh</p>\n<ul>\n<li><p>Add the following to either ~/.ssh/config or /etc/ssh/ssh_config.</p>\n<ul>\n<li><p>Sample 1(disable host key checking for a particular host):</p>\n<pre><code>Host remote_host.com\nStrictHostKeyChecking no</code></pre></li>\n<li><p>Sample 2(turn off host key checking for all hosts you connect to):</p>\n<pre><code>Host *\nStrictHostKeyChecking no</code></pre></li>\n<li><p>Sample 3(avoid host key verification, and not use known_hosts file for 192.168.1.* subnet):</p>\n<pre><code>Host 192.168.0.*\nStrictHostKeyChecking no\nUserKnownHostsFile=/dev/null</code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Add the fingerprint for a server to your known_hosts manually.</p>\n<p>  <code>ssh-keyscan -H &lt;ip-address&gt; &gt;&gt; ~/.ssh/known_hosts</code></p>\n<p>  <code>ssh-keyscan -H &lt;hostname&gt; &gt;&gt; ~/.ssh/known_hosts</code></p>\n<p>  Remove them:</p>\n<p>  <code>ssh-keygen -R &lt;ip-address&gt;</code></p>\n<p>  <code>ssh-keygen -R &lt;hostname&gt;</code></p>\n</li>\n</ul>\n<h2 id=\"Netstat-Command\"><a href=\"#Netstat-Command\" class=\"headerlink\" title=\"Netstat Command\"></a>Netstat Command</h2><ul>\n<li><p>Find out on which port a program is running</p>\n<ul>\n<li><code>netstat -ap | grep ssh</code></li>\n<li><code>netstat -an | grep &#39;:80&#39;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Service-Management\"><a href=\"#Service-Management\" class=\"headerlink\" title=\"Service Management\"></a>Service Management</h2><ul>\n<li>Check service automatically start or not.<ul>\n<li><code>ls /etc/rc2.d</code> // Just need to check the runlevel 2 on Ubuntu</li>\n</ul>\n</li>\n<li>Add service <code>apache2</code><ul>\n<li><code>update-rc.d apache2 defaults</code></li>\n</ul>\n</li>\n<li>Remove service <code>apache2</code><ul>\n<li><code>update-rc.d -f  apache2 remove</code></li>\n</ul>\n</li>\n<li>Check the status of service <code>apache2</code><ul>\n<li><code>service apache2 status</code></li>\n</ul>\n</li>\n<li>Check Server <code>hhvm</code> autoload level<ul>\n<li><code>sudo initctl show-config hhvm</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Remove-executable-bit-recursively-from-files-not-directories\"><a href=\"#Remove-executable-bit-recursively-from-files-not-directories\" class=\"headerlink\" title=\"Remove executable bit recursively from files (not directories)\"></a>Remove executable bit recursively from files (not directories)</h2><ul>\n<li><p><code>chmod -R -x+X *</code></p>\n<ul>\n<li><code>-R</code> - operate recursively</li>\n<li><code>-x</code> - remove executable flags for all users</li>\n<li><code>+X</code> - set executable flags for all users if it is a directory</li>\n<li>Note: On OS X, have to do it separately in two commands: <code>sudo chmod -R -x * &amp;&amp; sudo chmod -R +X *</code></li>\n</ul>\n</li>\n<li><p><code>find . -type f -exec chmod -x {} \\;</code></p>\n</li>\n<li><p><code>chmod -x $(find . -type f)</code></p>\n</li>\n</ul>\n<h2 id=\"Batch-replace-text-inside-text-file\"><a href=\"#Batch-replace-text-inside-text-file\" class=\"headerlink\" title=\"Batch replace text inside text file\"></a>Batch replace text inside text file</h2><ul>\n<li><p><code>find . -type f -name \\*.txt -exec sed -i.bak &#39;s|http://|rtmp://|g&#39; {} +</code></p>\n<ul>\n<li>This will create backups of each file. I suggest you check a few to make sure it did what you want, then you can delete them using <code>find . -name \\*.bak -delete</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Find-and-remove-files\"><a href=\"#Find-and-remove-files\" class=\"headerlink\" title=\"Find and remove files\"></a>Find and remove files</h2><ul>\n<li><p><code>find . -type f -name &quot;FILE-TO-FIND&quot; -exec rm -f {} \\;</code></p>\n<ul>\n<li><code>-name &quot;FILE-TO-FIND&quot;</code> : File pattern.</li>\n<li><code>-exec rm -rf {} \\;</code> : Delete all files matched by file pattern.</li>\n<li><code>-type f</code> : Only match files and do not include directory names.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Bug-Collection\"><a href=\"#Bug-Collection\" class=\"headerlink\" title=\"Bug Collection\"></a>Bug Collection</h2><ul>\n<li>[Ubuntu 14.04] Nodejs ERROR : /usr/bin/env: node: No such file or directory<ul>\n<li><code>ln -s /usr/bin/nodejs /usr/bin/node</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Checking-Hardware\"><a href=\"#Checking-Hardware\" class=\"headerlink\" title=\"Checking Hardware\"></a>Checking Hardware</h2><ul>\n<li>Mainboard: <code>dmidecode | grep -i &#39;serial number&#39;</code></li>\n<li>CPU: <code>cat /proc/cpuinfo</code></li>\n<li>Hard Drive:<ul>\n<li>partition <code>fdisk -l</code></li>\n<li>size <code>df -h</code></li>\n<li>usage <code>du -h</code></li>\n</ul>\n</li>\n<li>Memory: <code>cat /proc/meminfo</code></li>\n</ul>\n<h2 id=\"Kill-all-the-process\"><a href=\"#Kill-all-the-process\" class=\"headerlink\" title=\"Kill all the process\"></a>Kill all the process</h2><ul>\n<li><code>ps aux | grep procname | awk &#39;{print $2}&#39; | xargs kill -9</code></li>\n</ul>\n<h2 id=\"Git-Related\"><a href=\"#Git-Related\" class=\"headerlink\" title=\"Git Related\"></a>Git Related</h2><ul>\n<li>Delete remote tags.<ul>\n<li><code>git tag -l | xargs -n 1 git push --delete origin</code></li>\n</ul>\n</li>\n<li>Delete local tasg.<ul>\n<li><code>git tag -l | xargs git tag -d</code></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Manage-User\"><a href=\"#Manage-User\" class=\"headerlink\" title=\"Manage User\"></a><a href=\"#manage-user\">Manage User</a></h2><ul>\n<li>/etc/shadow : Secure user account information</li>\n<li>/etc/passwd : User account information</li>\n<li>/etc/gshadow : Contains the shadowed information for group accounts</li>\n<li>/etc/group : Defines the groups to which users belong</li>\n<li>/etc/sudoers : List of who can run what by sudo</li>\n<li>/home/* : Home directories</li>\n</ul>\n<h3 id=\"Add-new-Group\"><a href=\"#Add-new-Group\" class=\"headerlink\" title=\"Add new Group\"></a>Add new Group</h3><ul>\n<li><code>groupadd [group]</code></li>\n</ul>\n<h3 id=\"Add-new-User\"><a href=\"#Add-new-User\" class=\"headerlink\" title=\"Add new User\"></a>Add new User</h3><ul>\n<li><code>useradd -m -g [initial_group] -G [additional_groups] -s [login_shell] [username]</code></li>\n<li><code>-m</code> creates the user home directory as /home/username. Within their home directory, a non-root user can write files, delete them, install programs, and so on.</li>\n<li><code>-g</code> defines the group name or number of the user’s initial login group. If specified, the group name must exist; if a group number is provided, it must refer to an already existing group. If not specified, the behaviour of useradd will depend on the USERGROUPS_ENAB variable contained in /etc/login.defs. The default behaviour (USERGROUPS_ENAB yes) is to create a group with the same name as the username, with GID equal to UID.</li>\n<li><code>-G</code> introduces a list of supplementary groups which the user is also a member of. Each group is separated from the next by a comma, with no intervening spaces. The default is for the user to belong only to the initial group.</li>\n<li><code>-s</code> defines the path and file name of the user’s default login shell. After the boot process is complete, the default login shell is the one specified here. Ensure the chosen shell package is installed if choosing something other than Bash.</li>\n</ul>\n<h3 id=\"Set-user-to-sudoers\"><a href=\"#Set-user-to-sudoers\" class=\"headerlink\" title=\"Set user to sudoers\"></a>Set user to sudoers</h3><ul>\n<li>Add user to sudo group: <code>sudo usermod -aG sudo &lt;username&gt;</code></li>\n<li>Remove user from sudo group: <code>gpasswd -d user sudo</code></li>\n</ul>\n<h3 id=\"SSH-login-without-password\"><a href=\"#SSH-login-without-password\" class=\"headerlink\" title=\"SSH login without password\"></a>SSH login without password</h3><ul>\n<li><code>ssh-copy-id user@server</code></li>\n<li><code>cat .ssh/id_rsa.pub | ssh user@server &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code><ul>\n<li>Avoid entering passphrase (just once):<ul>\n<li><code>eval &quot;$(ssh-agent -s)&quot;</code></li>\n<li><code>ssh-add ~/.ssh/id_rsa</code></li>\n</ul>\n</li>\n<li>[Auto-launching ssh-agent on msysgit] (<a href=\"https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit</a>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Generating-SSH-keys\"><a href=\"#Generating-SSH-keys\" class=\"headerlink\" title=\"Generating SSH keys\"></a>Generating SSH keys</h3><ul>\n<li><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></li>\n</ul>\n<h3 id=\"Change-hostname\"><a href=\"#Change-hostname\" class=\"headerlink\" title=\"Change hostname\"></a>Change hostname</h3><ul>\n<li><code>vi /etc/hostname</code></li>\n<li>don’t forget to add <code>127.0.0.1 &lt;hostname&gt;</code> to /etc/hosts</li>\n</ul>\n<h3 id=\"Accept-ssh-host-keys-automatically-on-Linux\"><a href=\"#Accept-ssh-host-keys-automatically-on-Linux\" class=\"headerlink\" title=\"Accept ssh host keys automatically on Linux\"></a>Accept ssh host keys automatically on Linux</h3><ul>\n<li><p><code>ssh -oStrictHostKeyChecking=no user@remote_host</code></p>\n</li>\n<li><p>Disable strict host key checking permanently in ssh</p>\n<ul>\n<li><p>Add the following to either ~/.ssh/config or /etc/ssh/ssh_config.</p>\n<ul>\n<li><p>Sample 1(disable host key checking for a particular host):</p>\n<pre><code>Host remote_host.com\nStrictHostKeyChecking no</code></pre></li>\n<li><p>Sample 2(turn off host key checking for all hosts you connect to):</p>\n<pre><code>Host *\nStrictHostKeyChecking no</code></pre></li>\n<li><p>Sample 3(avoid host key verification, and not use known_hosts file for 192.168.1.* subnet):</p>\n<pre><code>Host 192.168.0.*\nStrictHostKeyChecking no\nUserKnownHostsFile=/dev/null</code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Add the fingerprint for a server to your known_hosts manually.</p>\n<p>  <code>ssh-keyscan -H &lt;ip-address&gt; &gt;&gt; ~/.ssh/known_hosts</code></p>\n<p>  <code>ssh-keyscan -H &lt;hostname&gt; &gt;&gt; ~/.ssh/known_hosts</code></p>\n<p>  Remove them:</p>\n<p>  <code>ssh-keygen -R &lt;ip-address&gt;</code></p>\n<p>  <code>ssh-keygen -R &lt;hostname&gt;</code></p>\n</li>\n</ul>\n<h2 id=\"Netstat-Command\"><a href=\"#Netstat-Command\" class=\"headerlink\" title=\"Netstat Command\"></a>Netstat Command</h2><ul>\n<li><p>Find out on which port a program is running</p>\n<ul>\n<li><code>netstat -ap | grep ssh</code></li>\n<li><code>netstat -an | grep &#39;:80&#39;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Service-Management\"><a href=\"#Service-Management\" class=\"headerlink\" title=\"Service Management\"></a>Service Management</h2><ul>\n<li>Check service automatically start or not.<ul>\n<li><code>ls /etc/rc2.d</code> // Just need to check the runlevel 2 on Ubuntu</li>\n</ul>\n</li>\n<li>Add service <code>apache2</code><ul>\n<li><code>update-rc.d apache2 defaults</code></li>\n</ul>\n</li>\n<li>Remove service <code>apache2</code><ul>\n<li><code>update-rc.d -f  apache2 remove</code></li>\n</ul>\n</li>\n<li>Check the status of service <code>apache2</code><ul>\n<li><code>service apache2 status</code></li>\n</ul>\n</li>\n<li>Check Server <code>hhvm</code> autoload level<ul>\n<li><code>sudo initctl show-config hhvm</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Remove-executable-bit-recursively-from-files-not-directories\"><a href=\"#Remove-executable-bit-recursively-from-files-not-directories\" class=\"headerlink\" title=\"Remove executable bit recursively from files (not directories)\"></a>Remove executable bit recursively from files (not directories)</h2><ul>\n<li><p><code>chmod -R -x+X *</code></p>\n<ul>\n<li><code>-R</code> - operate recursively</li>\n<li><code>-x</code> - remove executable flags for all users</li>\n<li><code>+X</code> - set executable flags for all users if it is a directory</li>\n<li>Note: On OS X, have to do it separately in two commands: <code>sudo chmod -R -x * &amp;&amp; sudo chmod -R +X *</code></li>\n</ul>\n</li>\n<li><p><code>find . -type f -exec chmod -x {} \\;</code></p>\n</li>\n<li><p><code>chmod -x $(find . -type f)</code></p>\n</li>\n</ul>\n<h2 id=\"Batch-replace-text-inside-text-file\"><a href=\"#Batch-replace-text-inside-text-file\" class=\"headerlink\" title=\"Batch replace text inside text file\"></a>Batch replace text inside text file</h2><ul>\n<li><p><code>find . -type f -name \\*.txt -exec sed -i.bak &#39;s|http://|rtmp://|g&#39; {} +</code></p>\n<ul>\n<li>This will create backups of each file. I suggest you check a few to make sure it did what you want, then you can delete them using <code>find . -name \\*.bak -delete</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Find-and-remove-files\"><a href=\"#Find-and-remove-files\" class=\"headerlink\" title=\"Find and remove files\"></a>Find and remove files</h2><ul>\n<li><p><code>find . -type f -name &quot;FILE-TO-FIND&quot; -exec rm -f {} \\;</code></p>\n<ul>\n<li><code>-name &quot;FILE-TO-FIND&quot;</code> : File pattern.</li>\n<li><code>-exec rm -rf {} \\;</code> : Delete all files matched by file pattern.</li>\n<li><code>-type f</code> : Only match files and do not include directory names.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Bug-Collection\"><a href=\"#Bug-Collection\" class=\"headerlink\" title=\"Bug Collection\"></a>Bug Collection</h2><ul>\n<li>[Ubuntu 14.04] Nodejs ERROR : /usr/bin/env: node: No such file or directory<ul>\n<li><code>ln -s /usr/bin/nodejs /usr/bin/node</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Checking-Hardware\"><a href=\"#Checking-Hardware\" class=\"headerlink\" title=\"Checking Hardware\"></a>Checking Hardware</h2><ul>\n<li>Mainboard: <code>dmidecode | grep -i &#39;serial number&#39;</code></li>\n<li>CPU: <code>cat /proc/cpuinfo</code></li>\n<li>Hard Drive:<ul>\n<li>partition <code>fdisk -l</code></li>\n<li>size <code>df -h</code></li>\n<li>usage <code>du -h</code></li>\n</ul>\n</li>\n<li>Memory: <code>cat /proc/meminfo</code></li>\n</ul>\n<h2 id=\"Kill-all-the-process\"><a href=\"#Kill-all-the-process\" class=\"headerlink\" title=\"Kill all the process\"></a>Kill all the process</h2><ul>\n<li><code>ps aux | grep procname | awk &#39;{print $2}&#39; | xargs kill -9</code></li>\n</ul>\n<h2 id=\"Git-Related\"><a href=\"#Git-Related\" class=\"headerlink\" title=\"Git Related\"></a>Git Related</h2><ul>\n<li>Delete remote tags.<ul>\n<li><code>git tag -l | xargs -n 1 git push --delete origin</code></li>\n</ul>\n</li>\n<li>Delete local tasg.<ul>\n<li><code>git tag -l | xargs git tag -d</code></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"如何使用Linux的screen命令","date":"2014-12-22T05:00:00.000Z","description":"如何使用Linux的screen命令","keywords":"Linux, Command, Screen","_content":"\n摘录自: [http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/](http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/)\n\n## 功能\n\n* 多终端共享一个SSH会话\n* 能在网络状况不好的状况下保持可用\n* 从多个地址断开并重新连接终端会话\n* 在执行耗时任务时无需维持终端会话\n\n\n## 安装\n\n* CentOS: `yum install screen`\n* Ubuntu: `apt-get install screen`\n\n## 起始命令\n\n* `screen` 进入screen模式\n\n## 控制命令\n\n* `Ctrl+a` screen 使用Ctrl+a快捷键作为命令前缀来发送信号，例如`Ctrl+a+?`为打开screen帮助页面\n\n## 创建窗口\n\n* `Ctrl+a+c` 使用默认视窗创建新的窗口，旧视窗能然可用\n\n## 窗口之间切换\n\n使用screen 向前或向后切换窗口\n\n* `Ctrl+a+n` 下一个窗口\n* `Ctrl+a+p` 上一个窗口\n* 两次`Ctrl+a` 可以在最近的上一个或下一个窗口中来回切换\n\n## 挂起会话\n\n与当前的screen分离并跳出到原有的shell会话中，并可以使用`screen -r`重新连上\n\n对于需要在服务器执行长时间消耗的任务是个非常不错的选择\n\nPS: 如果当前网络连接中断，screen会自动挂起会话\n\n* `Ctrl+a+d`\n\n## 恢复会话\n\n如果你的会话连接由于某种原因中端，可以使用此命令恢复\n\n* `screen -r`\n\n## 记录screen的输出\n\n* `Ctrl+a+H` 为当前会话创建日志进行追踪\n\nscreen 会跨多个会话进行日志追踪。对于在服务器操作较多的情况，可以有捕捉自己的操作\n\n## 获取警告提醒\n\nscreen可以监听会话活动。在下载或者编译等耗时操作时，可用于提醒警告\n\n当你在等待一个耗时进程的输出时，可使用`Ctrl+a+M`来监听活动。screen会等输出完成后，在页面底部闪出一条提醒。此时可切换至其他screen进行其他操作，而不需要时而切换回来查看任务是否完成\n\n或者你在编译程序或下载文件，等待会话无内容输出的情况。可使用`Ctrl+a+_`来监听当前会话是否已无内容输出\n\n## 锁定screen会话\n\n当你要离开电脑一会儿，可使用`Ctrl+a+x`加入密码来锁定screen\n\n## 停止screen\n\n当完成任务后，推荐停止screen会话，而非挂起会话\n\n* 输入`exit`\n* `Ctrl+a+k`\n\n","source":"_posts/2014-12-22-how-to-use-linux-screen.md","raw":"---\nlayout: post\ntitle: 如何使用Linux的screen命令\ncategory: 编程学习\ndate: 2014-12-22\ntags: [Linux]\ndescription: 如何使用Linux的screen命令\nkeywords: Linux, Command, Screen\n---\n\n摘录自: [http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/](http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/)\n\n## 功能\n\n* 多终端共享一个SSH会话\n* 能在网络状况不好的状况下保持可用\n* 从多个地址断开并重新连接终端会话\n* 在执行耗时任务时无需维持终端会话\n\n\n## 安装\n\n* CentOS: `yum install screen`\n* Ubuntu: `apt-get install screen`\n\n## 起始命令\n\n* `screen` 进入screen模式\n\n## 控制命令\n\n* `Ctrl+a` screen 使用Ctrl+a快捷键作为命令前缀来发送信号，例如`Ctrl+a+?`为打开screen帮助页面\n\n## 创建窗口\n\n* `Ctrl+a+c` 使用默认视窗创建新的窗口，旧视窗能然可用\n\n## 窗口之间切换\n\n使用screen 向前或向后切换窗口\n\n* `Ctrl+a+n` 下一个窗口\n* `Ctrl+a+p` 上一个窗口\n* 两次`Ctrl+a` 可以在最近的上一个或下一个窗口中来回切换\n\n## 挂起会话\n\n与当前的screen分离并跳出到原有的shell会话中，并可以使用`screen -r`重新连上\n\n对于需要在服务器执行长时间消耗的任务是个非常不错的选择\n\nPS: 如果当前网络连接中断，screen会自动挂起会话\n\n* `Ctrl+a+d`\n\n## 恢复会话\n\n如果你的会话连接由于某种原因中端，可以使用此命令恢复\n\n* `screen -r`\n\n## 记录screen的输出\n\n* `Ctrl+a+H` 为当前会话创建日志进行追踪\n\nscreen 会跨多个会话进行日志追踪。对于在服务器操作较多的情况，可以有捕捉自己的操作\n\n## 获取警告提醒\n\nscreen可以监听会话活动。在下载或者编译等耗时操作时，可用于提醒警告\n\n当你在等待一个耗时进程的输出时，可使用`Ctrl+a+M`来监听活动。screen会等输出完成后，在页面底部闪出一条提醒。此时可切换至其他screen进行其他操作，而不需要时而切换回来查看任务是否完成\n\n或者你在编译程序或下载文件，等待会话无内容输出的情况。可使用`Ctrl+a+_`来监听当前会话是否已无内容输出\n\n## 锁定screen会话\n\n当你要离开电脑一会儿，可使用`Ctrl+a+x`加入密码来锁定screen\n\n## 停止screen\n\n当完成任务后，推荐停止screen会话，而非挂起会话\n\n* 输入`exit`\n* `Ctrl+a+k`\n\n","slug":"2014-12-22-how-to-use-linux-screen","published":1,"updated":"2020-04-19T02:56:59.501Z","_id":"ck96ffja9000qrmp95ck59gfg","comments":1,"photos":[],"link":"","content":"<p>摘录自: <a href=\"http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/\" target=\"_blank\" rel=\"noopener\">http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/</a></p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><ul>\n<li>多终端共享一个SSH会话</li>\n<li>能在网络状况不好的状况下保持可用</li>\n<li>从多个地址断开并重新连接终端会话</li>\n<li>在执行耗时任务时无需维持终端会话</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>CentOS: <code>yum install screen</code></li>\n<li>Ubuntu: <code>apt-get install screen</code></li>\n</ul>\n<h2 id=\"起始命令\"><a href=\"#起始命令\" class=\"headerlink\" title=\"起始命令\"></a>起始命令</h2><ul>\n<li><code>screen</code> 进入screen模式</li>\n</ul>\n<h2 id=\"控制命令\"><a href=\"#控制命令\" class=\"headerlink\" title=\"控制命令\"></a>控制命令</h2><ul>\n<li><code>Ctrl+a</code> screen 使用Ctrl+a快捷键作为命令前缀来发送信号，例如<code>Ctrl+a+?</code>为打开screen帮助页面</li>\n</ul>\n<h2 id=\"创建窗口\"><a href=\"#创建窗口\" class=\"headerlink\" title=\"创建窗口\"></a>创建窗口</h2><ul>\n<li><code>Ctrl+a+c</code> 使用默认视窗创建新的窗口，旧视窗能然可用</li>\n</ul>\n<h2 id=\"窗口之间切换\"><a href=\"#窗口之间切换\" class=\"headerlink\" title=\"窗口之间切换\"></a>窗口之间切换</h2><p>使用screen 向前或向后切换窗口</p>\n<ul>\n<li><code>Ctrl+a+n</code> 下一个窗口</li>\n<li><code>Ctrl+a+p</code> 上一个窗口</li>\n<li>两次<code>Ctrl+a</code> 可以在最近的上一个或下一个窗口中来回切换</li>\n</ul>\n<h2 id=\"挂起会话\"><a href=\"#挂起会话\" class=\"headerlink\" title=\"挂起会话\"></a>挂起会话</h2><p>与当前的screen分离并跳出到原有的shell会话中，并可以使用<code>screen -r</code>重新连上</p>\n<p>对于需要在服务器执行长时间消耗的任务是个非常不错的选择</p>\n<p>PS: 如果当前网络连接中断，screen会自动挂起会话</p>\n<ul>\n<li><code>Ctrl+a+d</code></li>\n</ul>\n<h2 id=\"恢复会话\"><a href=\"#恢复会话\" class=\"headerlink\" title=\"恢复会话\"></a>恢复会话</h2><p>如果你的会话连接由于某种原因中端，可以使用此命令恢复</p>\n<ul>\n<li><code>screen -r</code></li>\n</ul>\n<h2 id=\"记录screen的输出\"><a href=\"#记录screen的输出\" class=\"headerlink\" title=\"记录screen的输出\"></a>记录screen的输出</h2><ul>\n<li><code>Ctrl+a+H</code> 为当前会话创建日志进行追踪</li>\n</ul>\n<p>screen 会跨多个会话进行日志追踪。对于在服务器操作较多的情况，可以有捕捉自己的操作</p>\n<h2 id=\"获取警告提醒\"><a href=\"#获取警告提醒\" class=\"headerlink\" title=\"获取警告提醒\"></a>获取警告提醒</h2><p>screen可以监听会话活动。在下载或者编译等耗时操作时，可用于提醒警告</p>\n<p>当你在等待一个耗时进程的输出时，可使用<code>Ctrl+a+M</code>来监听活动。screen会等输出完成后，在页面底部闪出一条提醒。此时可切换至其他screen进行其他操作，而不需要时而切换回来查看任务是否完成</p>\n<p>或者你在编译程序或下载文件，等待会话无内容输出的情况。可使用<code>Ctrl+a+_</code>来监听当前会话是否已无内容输出</p>\n<h2 id=\"锁定screen会话\"><a href=\"#锁定screen会话\" class=\"headerlink\" title=\"锁定screen会话\"></a>锁定screen会话</h2><p>当你要离开电脑一会儿，可使用<code>Ctrl+a+x</code>加入密码来锁定screen</p>\n<h2 id=\"停止screen\"><a href=\"#停止screen\" class=\"headerlink\" title=\"停止screen\"></a>停止screen</h2><p>当完成任务后，推荐停止screen会话，而非挂起会话</p>\n<ul>\n<li>输入<code>exit</code></li>\n<li><code>Ctrl+a+k</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>摘录自: <a href=\"http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/\" target=\"_blank\" rel=\"noopener\">http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/</a></p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><ul>\n<li>多终端共享一个SSH会话</li>\n<li>能在网络状况不好的状况下保持可用</li>\n<li>从多个地址断开并重新连接终端会话</li>\n<li>在执行耗时任务时无需维持终端会话</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>CentOS: <code>yum install screen</code></li>\n<li>Ubuntu: <code>apt-get install screen</code></li>\n</ul>\n<h2 id=\"起始命令\"><a href=\"#起始命令\" class=\"headerlink\" title=\"起始命令\"></a>起始命令</h2><ul>\n<li><code>screen</code> 进入screen模式</li>\n</ul>\n<h2 id=\"控制命令\"><a href=\"#控制命令\" class=\"headerlink\" title=\"控制命令\"></a>控制命令</h2><ul>\n<li><code>Ctrl+a</code> screen 使用Ctrl+a快捷键作为命令前缀来发送信号，例如<code>Ctrl+a+?</code>为打开screen帮助页面</li>\n</ul>\n<h2 id=\"创建窗口\"><a href=\"#创建窗口\" class=\"headerlink\" title=\"创建窗口\"></a>创建窗口</h2><ul>\n<li><code>Ctrl+a+c</code> 使用默认视窗创建新的窗口，旧视窗能然可用</li>\n</ul>\n<h2 id=\"窗口之间切换\"><a href=\"#窗口之间切换\" class=\"headerlink\" title=\"窗口之间切换\"></a>窗口之间切换</h2><p>使用screen 向前或向后切换窗口</p>\n<ul>\n<li><code>Ctrl+a+n</code> 下一个窗口</li>\n<li><code>Ctrl+a+p</code> 上一个窗口</li>\n<li>两次<code>Ctrl+a</code> 可以在最近的上一个或下一个窗口中来回切换</li>\n</ul>\n<h2 id=\"挂起会话\"><a href=\"#挂起会话\" class=\"headerlink\" title=\"挂起会话\"></a>挂起会话</h2><p>与当前的screen分离并跳出到原有的shell会话中，并可以使用<code>screen -r</code>重新连上</p>\n<p>对于需要在服务器执行长时间消耗的任务是个非常不错的选择</p>\n<p>PS: 如果当前网络连接中断，screen会自动挂起会话</p>\n<ul>\n<li><code>Ctrl+a+d</code></li>\n</ul>\n<h2 id=\"恢复会话\"><a href=\"#恢复会话\" class=\"headerlink\" title=\"恢复会话\"></a>恢复会话</h2><p>如果你的会话连接由于某种原因中端，可以使用此命令恢复</p>\n<ul>\n<li><code>screen -r</code></li>\n</ul>\n<h2 id=\"记录screen的输出\"><a href=\"#记录screen的输出\" class=\"headerlink\" title=\"记录screen的输出\"></a>记录screen的输出</h2><ul>\n<li><code>Ctrl+a+H</code> 为当前会话创建日志进行追踪</li>\n</ul>\n<p>screen 会跨多个会话进行日志追踪。对于在服务器操作较多的情况，可以有捕捉自己的操作</p>\n<h2 id=\"获取警告提醒\"><a href=\"#获取警告提醒\" class=\"headerlink\" title=\"获取警告提醒\"></a>获取警告提醒</h2><p>screen可以监听会话活动。在下载或者编译等耗时操作时，可用于提醒警告</p>\n<p>当你在等待一个耗时进程的输出时，可使用<code>Ctrl+a+M</code>来监听活动。screen会等输出完成后，在页面底部闪出一条提醒。此时可切换至其他screen进行其他操作，而不需要时而切换回来查看任务是否完成</p>\n<p>或者你在编译程序或下载文件，等待会话无内容输出的情况。可使用<code>Ctrl+a+_</code>来监听当前会话是否已无内容输出</p>\n<h2 id=\"锁定screen会话\"><a href=\"#锁定screen会话\" class=\"headerlink\" title=\"锁定screen会话\"></a>锁定screen会话</h2><p>当你要离开电脑一会儿，可使用<code>Ctrl+a+x</code>加入密码来锁定screen</p>\n<h2 id=\"停止screen\"><a href=\"#停止screen\" class=\"headerlink\" title=\"停止screen\"></a>停止screen</h2><p>当完成任务后，推荐停止screen会话，而非挂起会话</p>\n<ul>\n<li>输入<code>exit</code></li>\n<li><code>Ctrl+a+k</code></li>\n</ul>\n"},{"layout":"post","title":"Linux服务器安全设置","date":"2014-12-26T05:00:00.000Z","description":"Linux服务器安全设置，常用配置包括iptable，使用SSH Key认证登录，禁用root密码登录，防火墙设置等","keywords":"Linux,Note","_content":"\n翻译自[Linode: Securing Your Server](https://www.linode.com/docs/security/securing-your-server)\n\n以下配置环境为:\n\n* 本地: Mac OS X\n* 服务器: Ubuntu 14.04\n\n## 添加用户，并将其加入sudo组\n\n例如增加webapps用户，并将其加入webapps用户组：\n\n* `ssh root@<your-service-ip>` // 使用root登录服务器\n* `groupadd webapps` // 创建webapps用户组\n* `useradd -m -g webapps -s /bin/bash webapps`\n    * `-m` 创建home根目录\n    * `-g` 指定用户组\n    * `-s` 指定使用的bash\n* `sudo usermod -aG sudo webapps`\n    * `-G` 附加用户组\n\n## 在本地创建并使用SSH key认证登录服务器\n\n### 生成密钥\n\n* `ssh-keygen -t rsa -C \"your_email@example.com\"`\n* 避免在每次登录的时候每次都需要输入passphrase\n    * `eval \"$(ssh-agent -s)\"`\n    * `ssh-add ~/.ssh/id_rsa`\n\n### 上传至服务器\n\n* 使用webapps登录服务器，并执行`mkdir ~/.ssh && touch ~/.ssh/authorized_keys`创建空文件authorized_keys用于存放公钥\n* 在本地执行`cat ~/.ssh/id_rsa.pub | ssh webapps@<your-server-ip> 'cat >> .ssh/authorized_keys'`\n\n### 禁止root用户密码登录\n\n* `sudo vi /etc/ssh/sshd_config`\n    * 修改 `PermitRootLogin yes` 为 `PermitRootLogin without-password`\n* `sudo service ssh restart` 重启ssh服务\n\n## 创建防火墙\n\n### 创建文件 `/etc/iptables.firewall.rules` 用于存放防火墙规则，内容如下：\n\n* 以下规则仅开放HTTP (80), HTTPS (443), SSH (22)三个端口\n\n        *filter\n\n        #  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0\n        -A INPUT -i lo -j ACCEPT\n        -A INPUT -d 127.0.0.0/8 -j REJECT\n\n        #  Accept all established inbound connections\n        -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n        #  Allow all outbound traffic - you can modify this to only allow certain traffic\n        -A OUTPUT -j ACCEPT\n\n        #  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).\n        -A INPUT -p tcp --dport 80 -j ACCEPT\n        -A INPUT -p tcp --dport 443 -j ACCEPT\n\n        #  Allow SSH connections\n        #\n        #  The -dport number should be the same port number you set in sshd_config\n        #\n        -A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT\n\n        #  Allow ping\n        -A INPUT -p icmp --icmp-type echo-request -j ACCEPT\n\n        #  Log iptables denied calls\n        -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7\n\n        #  Drop all other inbound - default deny unless explicitly allowed policy\n        -A INPUT -j DROP\n        -A FORWARD -j DROP\n\n        COMMIT\n\n### 激活防火墙配置\n\n* `sudo iptables-restore < /etc/iptables.firewall.rules`\n\n### 查看防火墙配置信息\n\n* `sudo iptables -L`\n\n### 配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\n\n* `sudo vi /etc/network/if-pre-up.d/firewall` 编辑文件，内容如下：\n\n        #!/bin/sh\n        /sbin/iptables-restore < /etc/iptables.firewall.rules\n\n* `sudo chmod +x /etc/network/if-pre-up.d/firewall` 修改文件权限为可执行\n\n## 安装配置Fail2Ban\n\nFail2Ban可以有效防止同一IP多次失败登录。它会临时创建防火墙规则来阻止攻击。\n\n### 安装\n\n* `sudo apt-get install fail2ban`\n\n### 设置\n\n* `bantime` 指定阻止保持时长\n* `maxretry` 设置IP可以尝试连接的次数\n\n### 重启fail2ban服务\n\n* `sudo service fail2ban restart`\n\n\n","source":"_posts/2014-12-26-secure-linux-server.md","raw":"---\nlayout: post\ntitle: Linux服务器安全设置\ncategory: 编程学习\ntags: [Linux]\ndate: 2014-12-26\ndescription: Linux服务器安全设置，常用配置包括iptable，使用SSH Key认证登录，禁用root密码登录，防火墙设置等\nkeywords: Linux,Note\n---\n\n翻译自[Linode: Securing Your Server](https://www.linode.com/docs/security/securing-your-server)\n\n以下配置环境为:\n\n* 本地: Mac OS X\n* 服务器: Ubuntu 14.04\n\n## 添加用户，并将其加入sudo组\n\n例如增加webapps用户，并将其加入webapps用户组：\n\n* `ssh root@<your-service-ip>` // 使用root登录服务器\n* `groupadd webapps` // 创建webapps用户组\n* `useradd -m -g webapps -s /bin/bash webapps`\n    * `-m` 创建home根目录\n    * `-g` 指定用户组\n    * `-s` 指定使用的bash\n* `sudo usermod -aG sudo webapps`\n    * `-G` 附加用户组\n\n## 在本地创建并使用SSH key认证登录服务器\n\n### 生成密钥\n\n* `ssh-keygen -t rsa -C \"your_email@example.com\"`\n* 避免在每次登录的时候每次都需要输入passphrase\n    * `eval \"$(ssh-agent -s)\"`\n    * `ssh-add ~/.ssh/id_rsa`\n\n### 上传至服务器\n\n* 使用webapps登录服务器，并执行`mkdir ~/.ssh && touch ~/.ssh/authorized_keys`创建空文件authorized_keys用于存放公钥\n* 在本地执行`cat ~/.ssh/id_rsa.pub | ssh webapps@<your-server-ip> 'cat >> .ssh/authorized_keys'`\n\n### 禁止root用户密码登录\n\n* `sudo vi /etc/ssh/sshd_config`\n    * 修改 `PermitRootLogin yes` 为 `PermitRootLogin without-password`\n* `sudo service ssh restart` 重启ssh服务\n\n## 创建防火墙\n\n### 创建文件 `/etc/iptables.firewall.rules` 用于存放防火墙规则，内容如下：\n\n* 以下规则仅开放HTTP (80), HTTPS (443), SSH (22)三个端口\n\n        *filter\n\n        #  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0\n        -A INPUT -i lo -j ACCEPT\n        -A INPUT -d 127.0.0.0/8 -j REJECT\n\n        #  Accept all established inbound connections\n        -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n        #  Allow all outbound traffic - you can modify this to only allow certain traffic\n        -A OUTPUT -j ACCEPT\n\n        #  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).\n        -A INPUT -p tcp --dport 80 -j ACCEPT\n        -A INPUT -p tcp --dport 443 -j ACCEPT\n\n        #  Allow SSH connections\n        #\n        #  The -dport number should be the same port number you set in sshd_config\n        #\n        -A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT\n\n        #  Allow ping\n        -A INPUT -p icmp --icmp-type echo-request -j ACCEPT\n\n        #  Log iptables denied calls\n        -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7\n\n        #  Drop all other inbound - default deny unless explicitly allowed policy\n        -A INPUT -j DROP\n        -A FORWARD -j DROP\n\n        COMMIT\n\n### 激活防火墙配置\n\n* `sudo iptables-restore < /etc/iptables.firewall.rules`\n\n### 查看防火墙配置信息\n\n* `sudo iptables -L`\n\n### 配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\n\n* `sudo vi /etc/network/if-pre-up.d/firewall` 编辑文件，内容如下：\n\n        #!/bin/sh\n        /sbin/iptables-restore < /etc/iptables.firewall.rules\n\n* `sudo chmod +x /etc/network/if-pre-up.d/firewall` 修改文件权限为可执行\n\n## 安装配置Fail2Ban\n\nFail2Ban可以有效防止同一IP多次失败登录。它会临时创建防火墙规则来阻止攻击。\n\n### 安装\n\n* `sudo apt-get install fail2ban`\n\n### 设置\n\n* `bantime` 指定阻止保持时长\n* `maxretry` 设置IP可以尝试连接的次数\n\n### 重启fail2ban服务\n\n* `sudo service fail2ban restart`\n\n\n","slug":"2014-12-26-secure-linux-server","published":1,"updated":"2020-04-19T02:56:55.236Z","_id":"ck96ffjaa000srmp92vba8stg","comments":1,"photos":[],"link":"","content":"<p>翻译自<a href=\"https://www.linode.com/docs/security/securing-your-server\" target=\"_blank\" rel=\"noopener\">Linode: Securing Your Server</a></p>\n<p>以下配置环境为:</p>\n<ul>\n<li>本地: Mac OS X</li>\n<li>服务器: Ubuntu 14.04</li>\n</ul>\n<h2 id=\"添加用户，并将其加入sudo组\"><a href=\"#添加用户，并将其加入sudo组\" class=\"headerlink\" title=\"添加用户，并将其加入sudo组\"></a>添加用户，并将其加入sudo组</h2><p>例如增加webapps用户，并将其加入webapps用户组：</p>\n<ul>\n<li><code>ssh root@&lt;your-service-ip&gt;</code> // 使用root登录服务器</li>\n<li><code>groupadd webapps</code> // 创建webapps用户组</li>\n<li><code>useradd -m -g webapps -s /bin/bash webapps</code><ul>\n<li><code>-m</code> 创建home根目录</li>\n<li><code>-g</code> 指定用户组</li>\n<li><code>-s</code> 指定使用的bash</li>\n</ul>\n</li>\n<li><code>sudo usermod -aG sudo webapps</code><ul>\n<li><code>-G</code> 附加用户组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在本地创建并使用SSH-key认证登录服务器\"><a href=\"#在本地创建并使用SSH-key认证登录服务器\" class=\"headerlink\" title=\"在本地创建并使用SSH key认证登录服务器\"></a>在本地创建并使用SSH key认证登录服务器</h2><h3 id=\"生成密钥\"><a href=\"#生成密钥\" class=\"headerlink\" title=\"生成密钥\"></a>生成密钥</h3><ul>\n<li><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></li>\n<li>避免在每次登录的时候每次都需要输入passphrase<ul>\n<li><code>eval &quot;$(ssh-agent -s)&quot;</code></li>\n<li><code>ssh-add ~/.ssh/id_rsa</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"上传至服务器\"><a href=\"#上传至服务器\" class=\"headerlink\" title=\"上传至服务器\"></a>上传至服务器</h3><ul>\n<li>使用webapps登录服务器，并执行<code>mkdir ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys</code>创建空文件authorized_keys用于存放公钥</li>\n<li>在本地执行<code>cat ~/.ssh/id_rsa.pub | ssh webapps@&lt;your-server-ip&gt; &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code></li>\n</ul>\n<h3 id=\"禁止root用户密码登录\"><a href=\"#禁止root用户密码登录\" class=\"headerlink\" title=\"禁止root用户密码登录\"></a>禁止root用户密码登录</h3><ul>\n<li><code>sudo vi /etc/ssh/sshd_config</code><ul>\n<li>修改 <code>PermitRootLogin yes</code> 为 <code>PermitRootLogin without-password</code></li>\n</ul>\n</li>\n<li><code>sudo service ssh restart</code> 重启ssh服务</li>\n</ul>\n<h2 id=\"创建防火墙\"><a href=\"#创建防火墙\" class=\"headerlink\" title=\"创建防火墙\"></a>创建防火墙</h2><h3 id=\"创建文件-etc-iptables-firewall-rules-用于存放防火墙规则，内容如下：\"><a href=\"#创建文件-etc-iptables-firewall-rules-用于存放防火墙规则，内容如下：\" class=\"headerlink\" title=\"创建文件 /etc/iptables.firewall.rules 用于存放防火墙规则，内容如下：\"></a>创建文件 <code>/etc/iptables.firewall.rules</code> 用于存放防火墙规则，内容如下：</h3><ul>\n<li><p>以下规则仅开放HTTP (80), HTTPS (443), SSH (22)三个端口</p>\n<pre><code>*filter\n\n#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&apos;t use lo0\n-A INPUT -i lo -j ACCEPT\n-A INPUT -d 127.0.0.0/8 -j REJECT\n\n#  Accept all established inbound connections\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n#  Allow all outbound traffic - you can modify this to only allow certain traffic\n-A OUTPUT -j ACCEPT\n\n#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).\n-A INPUT -p tcp --dport 80 -j ACCEPT\n-A INPUT -p tcp --dport 443 -j ACCEPT\n\n#  Allow SSH connections\n#\n#  The -dport number should be the same port number you set in sshd_config\n#\n-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT\n\n#  Allow ping\n-A INPUT -p icmp --icmp-type echo-request -j ACCEPT\n\n#  Log iptables denied calls\n-A INPUT -m limit --limit 5/min -j LOG --log-prefix &quot;iptables denied: &quot; --log-level 7\n\n#  Drop all other inbound - default deny unless explicitly allowed policy\n-A INPUT -j DROP\n-A FORWARD -j DROP\n\nCOMMIT</code></pre></li>\n</ul>\n<h3 id=\"激活防火墙配置\"><a href=\"#激活防火墙配置\" class=\"headerlink\" title=\"激活防火墙配置\"></a>激活防火墙配置</h3><ul>\n<li><code>sudo iptables-restore &lt; /etc/iptables.firewall.rules</code></li>\n</ul>\n<h3 id=\"查看防火墙配置信息\"><a href=\"#查看防火墙配置信息\" class=\"headerlink\" title=\"查看防火墙配置信息\"></a>查看防火墙配置信息</h3><ul>\n<li><code>sudo iptables -L</code></li>\n</ul>\n<h3 id=\"配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\"><a href=\"#配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\" class=\"headerlink\" title=\"配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\"></a>配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效</h3><ul>\n<li><p><code>sudo vi /etc/network/if-pre-up.d/firewall</code> 编辑文件，内容如下：</p>\n<pre><code>#!/bin/sh\n/sbin/iptables-restore &lt; /etc/iptables.firewall.rules</code></pre></li>\n<li><p><code>sudo chmod +x /etc/network/if-pre-up.d/firewall</code> 修改文件权限为可执行</p>\n</li>\n</ul>\n<h2 id=\"安装配置Fail2Ban\"><a href=\"#安装配置Fail2Ban\" class=\"headerlink\" title=\"安装配置Fail2Ban\"></a>安装配置Fail2Ban</h2><p>Fail2Ban可以有效防止同一IP多次失败登录。它会临时创建防火墙规则来阻止攻击。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ul>\n<li><code>sudo apt-get install fail2ban</code></li>\n</ul>\n<h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><ul>\n<li><code>bantime</code> 指定阻止保持时长</li>\n<li><code>maxretry</code> 设置IP可以尝试连接的次数</li>\n</ul>\n<h3 id=\"重启fail2ban服务\"><a href=\"#重启fail2ban服务\" class=\"headerlink\" title=\"重启fail2ban服务\"></a>重启fail2ban服务</h3><ul>\n<li><code>sudo service fail2ban restart</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>翻译自<a href=\"https://www.linode.com/docs/security/securing-your-server\" target=\"_blank\" rel=\"noopener\">Linode: Securing Your Server</a></p>\n<p>以下配置环境为:</p>\n<ul>\n<li>本地: Mac OS X</li>\n<li>服务器: Ubuntu 14.04</li>\n</ul>\n<h2 id=\"添加用户，并将其加入sudo组\"><a href=\"#添加用户，并将其加入sudo组\" class=\"headerlink\" title=\"添加用户，并将其加入sudo组\"></a>添加用户，并将其加入sudo组</h2><p>例如增加webapps用户，并将其加入webapps用户组：</p>\n<ul>\n<li><code>ssh root@&lt;your-service-ip&gt;</code> // 使用root登录服务器</li>\n<li><code>groupadd webapps</code> // 创建webapps用户组</li>\n<li><code>useradd -m -g webapps -s /bin/bash webapps</code><ul>\n<li><code>-m</code> 创建home根目录</li>\n<li><code>-g</code> 指定用户组</li>\n<li><code>-s</code> 指定使用的bash</li>\n</ul>\n</li>\n<li><code>sudo usermod -aG sudo webapps</code><ul>\n<li><code>-G</code> 附加用户组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在本地创建并使用SSH-key认证登录服务器\"><a href=\"#在本地创建并使用SSH-key认证登录服务器\" class=\"headerlink\" title=\"在本地创建并使用SSH key认证登录服务器\"></a>在本地创建并使用SSH key认证登录服务器</h2><h3 id=\"生成密钥\"><a href=\"#生成密钥\" class=\"headerlink\" title=\"生成密钥\"></a>生成密钥</h3><ul>\n<li><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></li>\n<li>避免在每次登录的时候每次都需要输入passphrase<ul>\n<li><code>eval &quot;$(ssh-agent -s)&quot;</code></li>\n<li><code>ssh-add ~/.ssh/id_rsa</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"上传至服务器\"><a href=\"#上传至服务器\" class=\"headerlink\" title=\"上传至服务器\"></a>上传至服务器</h3><ul>\n<li>使用webapps登录服务器，并执行<code>mkdir ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys</code>创建空文件authorized_keys用于存放公钥</li>\n<li>在本地执行<code>cat ~/.ssh/id_rsa.pub | ssh webapps@&lt;your-server-ip&gt; &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code></li>\n</ul>\n<h3 id=\"禁止root用户密码登录\"><a href=\"#禁止root用户密码登录\" class=\"headerlink\" title=\"禁止root用户密码登录\"></a>禁止root用户密码登录</h3><ul>\n<li><code>sudo vi /etc/ssh/sshd_config</code><ul>\n<li>修改 <code>PermitRootLogin yes</code> 为 <code>PermitRootLogin without-password</code></li>\n</ul>\n</li>\n<li><code>sudo service ssh restart</code> 重启ssh服务</li>\n</ul>\n<h2 id=\"创建防火墙\"><a href=\"#创建防火墙\" class=\"headerlink\" title=\"创建防火墙\"></a>创建防火墙</h2><h3 id=\"创建文件-etc-iptables-firewall-rules-用于存放防火墙规则，内容如下：\"><a href=\"#创建文件-etc-iptables-firewall-rules-用于存放防火墙规则，内容如下：\" class=\"headerlink\" title=\"创建文件 /etc/iptables.firewall.rules 用于存放防火墙规则，内容如下：\"></a>创建文件 <code>/etc/iptables.firewall.rules</code> 用于存放防火墙规则，内容如下：</h3><ul>\n<li><p>以下规则仅开放HTTP (80), HTTPS (443), SSH (22)三个端口</p>\n<pre><code>*filter\n\n#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&apos;t use lo0\n-A INPUT -i lo -j ACCEPT\n-A INPUT -d 127.0.0.0/8 -j REJECT\n\n#  Accept all established inbound connections\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n#  Allow all outbound traffic - you can modify this to only allow certain traffic\n-A OUTPUT -j ACCEPT\n\n#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).\n-A INPUT -p tcp --dport 80 -j ACCEPT\n-A INPUT -p tcp --dport 443 -j ACCEPT\n\n#  Allow SSH connections\n#\n#  The -dport number should be the same port number you set in sshd_config\n#\n-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT\n\n#  Allow ping\n-A INPUT -p icmp --icmp-type echo-request -j ACCEPT\n\n#  Log iptables denied calls\n-A INPUT -m limit --limit 5/min -j LOG --log-prefix &quot;iptables denied: &quot; --log-level 7\n\n#  Drop all other inbound - default deny unless explicitly allowed policy\n-A INPUT -j DROP\n-A FORWARD -j DROP\n\nCOMMIT</code></pre></li>\n</ul>\n<h3 id=\"激活防火墙配置\"><a href=\"#激活防火墙配置\" class=\"headerlink\" title=\"激活防火墙配置\"></a>激活防火墙配置</h3><ul>\n<li><code>sudo iptables-restore &lt; /etc/iptables.firewall.rules</code></li>\n</ul>\n<h3 id=\"查看防火墙配置信息\"><a href=\"#查看防火墙配置信息\" class=\"headerlink\" title=\"查看防火墙配置信息\"></a>查看防火墙配置信息</h3><ul>\n<li><code>sudo iptables -L</code></li>\n</ul>\n<h3 id=\"配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\"><a href=\"#配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\" class=\"headerlink\" title=\"配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效\"></a>配置启动执行脚本，保证防火墙配置在服务器每次重启后即时生效</h3><ul>\n<li><p><code>sudo vi /etc/network/if-pre-up.d/firewall</code> 编辑文件，内容如下：</p>\n<pre><code>#!/bin/sh\n/sbin/iptables-restore &lt; /etc/iptables.firewall.rules</code></pre></li>\n<li><p><code>sudo chmod +x /etc/network/if-pre-up.d/firewall</code> 修改文件权限为可执行</p>\n</li>\n</ul>\n<h2 id=\"安装配置Fail2Ban\"><a href=\"#安装配置Fail2Ban\" class=\"headerlink\" title=\"安装配置Fail2Ban\"></a>安装配置Fail2Ban</h2><p>Fail2Ban可以有效防止同一IP多次失败登录。它会临时创建防火墙规则来阻止攻击。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ul>\n<li><code>sudo apt-get install fail2ban</code></li>\n</ul>\n<h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><ul>\n<li><code>bantime</code> 指定阻止保持时长</li>\n<li><code>maxretry</code> 设置IP可以尝试连接的次数</li>\n</ul>\n<h3 id=\"重启fail2ban服务\"><a href=\"#重启fail2ban服务\" class=\"headerlink\" title=\"重启fail2ban服务\"></a>重启fail2ban服务</h3><ul>\n<li><code>sudo service fail2ban restart</code></li>\n</ul>\n"},{"layout":"post","title":"创建GIT服务器","date":"2015-01-13T05:00:00.000Z","description":null,"keywords":"Linux, Git, Repository","_content":"\n## 添加git 用户\n\n* `sudo adduser git`\n\n## 创建authorized_keys,用于认证用户\n\n* `su git`\n* `cd`\n* `mkdir .ssh && chmod 700 .ssh`\n* `touch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys`\n\n## 添加认证用户公钥\n\n* 在本地执行 `cat .ssh/id_rsa.pub | ssh git@git-server 'cat >> .ssh/authorized_keys'`\n\n## 创建git repo\n\n* `cd /opt/git`\n* `mkdir project.git`\n* `cd project.git`\n* `git init --bare`\n    * 输出信息: Initialized empty Git repository in /opt/git/project.git/\n\n## 远程repo地址\n\n* `git@git-server:/opt/git/project.git`\n\n\n","source":"_posts/2015-01-13-create-git-server.md","raw":"---\nlayout: post\ntitle: 创建GIT服务器\ncategory: 编程学习\ntags: [Linux, Git]\ndate: 2015-01-13\ndescription:\nkeywords: Linux, Git, Repository\n---\n\n## 添加git 用户\n\n* `sudo adduser git`\n\n## 创建authorized_keys,用于认证用户\n\n* `su git`\n* `cd`\n* `mkdir .ssh && chmod 700 .ssh`\n* `touch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys`\n\n## 添加认证用户公钥\n\n* 在本地执行 `cat .ssh/id_rsa.pub | ssh git@git-server 'cat >> .ssh/authorized_keys'`\n\n## 创建git repo\n\n* `cd /opt/git`\n* `mkdir project.git`\n* `cd project.git`\n* `git init --bare`\n    * 输出信息: Initialized empty Git repository in /opt/git/project.git/\n\n## 远程repo地址\n\n* `git@git-server:/opt/git/project.git`\n\n\n","slug":"2015-01-13-create-git-server","published":1,"updated":"2020-04-19T02:45:23.171Z","_id":"ck96ffjac000trmp93w0tche7","comments":1,"photos":[],"link":"","content":"<h2 id=\"添加git-用户\"><a href=\"#添加git-用户\" class=\"headerlink\" title=\"添加git 用户\"></a>添加git 用户</h2><ul>\n<li><code>sudo adduser git</code></li>\n</ul>\n<h2 id=\"创建authorized-keys-用于认证用户\"><a href=\"#创建authorized-keys-用于认证用户\" class=\"headerlink\" title=\"创建authorized_keys,用于认证用户\"></a>创建authorized_keys,用于认证用户</h2><ul>\n<li><code>su git</code></li>\n<li><code>cd</code></li>\n<li><code>mkdir .ssh &amp;&amp; chmod 700 .ssh</code></li>\n<li><code>touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</code></li>\n</ul>\n<h2 id=\"添加认证用户公钥\"><a href=\"#添加认证用户公钥\" class=\"headerlink\" title=\"添加认证用户公钥\"></a>添加认证用户公钥</h2><ul>\n<li>在本地执行 <code>cat .ssh/id_rsa.pub | ssh git@git-server &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code></li>\n</ul>\n<h2 id=\"创建git-repo\"><a href=\"#创建git-repo\" class=\"headerlink\" title=\"创建git repo\"></a>创建git repo</h2><ul>\n<li><code>cd /opt/git</code></li>\n<li><code>mkdir project.git</code></li>\n<li><code>cd project.git</code></li>\n<li><code>git init --bare</code><ul>\n<li>输出信息: Initialized empty Git repository in /opt/git/project.git/</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"远程repo地址\"><a href=\"#远程repo地址\" class=\"headerlink\" title=\"远程repo地址\"></a>远程repo地址</h2><ul>\n<li><code>git@git-server:/opt/git/project.git</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"添加git-用户\"><a href=\"#添加git-用户\" class=\"headerlink\" title=\"添加git 用户\"></a>添加git 用户</h2><ul>\n<li><code>sudo adduser git</code></li>\n</ul>\n<h2 id=\"创建authorized-keys-用于认证用户\"><a href=\"#创建authorized-keys-用于认证用户\" class=\"headerlink\" title=\"创建authorized_keys,用于认证用户\"></a>创建authorized_keys,用于认证用户</h2><ul>\n<li><code>su git</code></li>\n<li><code>cd</code></li>\n<li><code>mkdir .ssh &amp;&amp; chmod 700 .ssh</code></li>\n<li><code>touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</code></li>\n</ul>\n<h2 id=\"添加认证用户公钥\"><a href=\"#添加认证用户公钥\" class=\"headerlink\" title=\"添加认证用户公钥\"></a>添加认证用户公钥</h2><ul>\n<li>在本地执行 <code>cat .ssh/id_rsa.pub | ssh git@git-server &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code></li>\n</ul>\n<h2 id=\"创建git-repo\"><a href=\"#创建git-repo\" class=\"headerlink\" title=\"创建git repo\"></a>创建git repo</h2><ul>\n<li><code>cd /opt/git</code></li>\n<li><code>mkdir project.git</code></li>\n<li><code>cd project.git</code></li>\n<li><code>git init --bare</code><ul>\n<li>输出信息: Initialized empty Git repository in /opt/git/project.git/</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"远程repo地址\"><a href=\"#远程repo地址\" class=\"headerlink\" title=\"远程repo地址\"></a>远程repo地址</h2><ul>\n<li><code>git@git-server:/opt/git/project.git</code></li>\n</ul>\n"},{"layout":"post","title":"使用Supervisor来守护Laravel Queue进程","date":"2015-01-14T05:00:00.000Z","description":null,"keywords":"Linux, Laravel, Queue, Supervisor","_content":"\n## 安装Supervisor\n\n* `sudo apt-get install supervisor`\n\n## 编辑Queue守护进程\n\n* `sudo vi /etc/supervisor/conf.d/myqueue.conf`\n\n        [program:myqueue]\n        command                 = php artisan queue:work  --env=production --queue=queue1,queue2\n        user                    = www-data\n        directory               = /path/to/app/\n        process_name            = %(program_name)s_%(process_num)s\n        numprocs                = 6\n        autostart               = true\n        autorestart             = true\n        stdout_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\n        stdout_logfile_maxbytes = 10MB\n        stderr_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\n        stderr_logfile_maxbytes = 10MB\n\n## 启动进程\n\n* `$ sudo supervisorctl`\n* `> reread` # Tell supervisord to check for new items in /etc/supervisor/conf.d/\n* `> add myqueue`       # Add this process to Supervisord\n* `> start myqueue`     # May say \"already started\"\n\n## 查看进程是否启动\n\n* `$ ps aux | grep php`\n\n\n","source":"_posts/2015-01-14-use-supervisor-for-laravel-queue.md","raw":"---\nlayout: post\ntitle: 使用Supervisor来守护Laravel Queue进程\ncategory: 编程学习\ntags: [Linux, PHP, Laravel]\ndate: 2015-01-14\ndescription:\nkeywords: Linux, Laravel, Queue, Supervisor\n---\n\n## 安装Supervisor\n\n* `sudo apt-get install supervisor`\n\n## 编辑Queue守护进程\n\n* `sudo vi /etc/supervisor/conf.d/myqueue.conf`\n\n        [program:myqueue]\n        command                 = php artisan queue:work  --env=production --queue=queue1,queue2\n        user                    = www-data\n        directory               = /path/to/app/\n        process_name            = %(program_name)s_%(process_num)s\n        numprocs                = 6\n        autostart               = true\n        autorestart             = true\n        stdout_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\n        stdout_logfile_maxbytes = 10MB\n        stderr_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\n        stderr_logfile_maxbytes = 10MB\n\n## 启动进程\n\n* `$ sudo supervisorctl`\n* `> reread` # Tell supervisord to check for new items in /etc/supervisor/conf.d/\n* `> add myqueue`       # Add this process to Supervisord\n* `> start myqueue`     # May say \"already started\"\n\n## 查看进程是否启动\n\n* `$ ps aux | grep php`\n\n\n","slug":"2015-01-14-use-supervisor-for-laravel-queue","published":1,"updated":"2020-04-19T02:45:35.871Z","_id":"ck96ffjae000wrmp90dfd6kcs","comments":1,"photos":[],"link":"","content":"<h2 id=\"安装Supervisor\"><a href=\"#安装Supervisor\" class=\"headerlink\" title=\"安装Supervisor\"></a>安装Supervisor</h2><ul>\n<li><code>sudo apt-get install supervisor</code></li>\n</ul>\n<h2 id=\"编辑Queue守护进程\"><a href=\"#编辑Queue守护进程\" class=\"headerlink\" title=\"编辑Queue守护进程\"></a>编辑Queue守护进程</h2><ul>\n<li><p><code>sudo vi /etc/supervisor/conf.d/myqueue.conf</code></p>\n<pre><code>[program:myqueue]\ncommand                 = php artisan queue:work  --env=production --queue=queue1,queue2\nuser                    = www-data\ndirectory               = /path/to/app/\nprocess_name            = %(program_name)s_%(process_num)s\nnumprocs                = 6\nautostart               = true\nautorestart             = true\nstdout_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\nstdout_logfile_maxbytes = 10MB\nstderr_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\nstderr_logfile_maxbytes = 10MB</code></pre></li>\n</ul>\n<h2 id=\"启动进程\"><a href=\"#启动进程\" class=\"headerlink\" title=\"启动进程\"></a>启动进程</h2><ul>\n<li><code>$ sudo supervisorctl</code></li>\n<li><code>&gt; reread</code> # Tell supervisord to check for new items in /etc/supervisor/conf.d/</li>\n<li><code>&gt; add myqueue</code>       # Add this process to Supervisord</li>\n<li><code>&gt; start myqueue</code>     # May say “already started”</li>\n</ul>\n<h2 id=\"查看进程是否启动\"><a href=\"#查看进程是否启动\" class=\"headerlink\" title=\"查看进程是否启动\"></a>查看进程是否启动</h2><ul>\n<li><code>$ ps aux | grep php</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装Supervisor\"><a href=\"#安装Supervisor\" class=\"headerlink\" title=\"安装Supervisor\"></a>安装Supervisor</h2><ul>\n<li><code>sudo apt-get install supervisor</code></li>\n</ul>\n<h2 id=\"编辑Queue守护进程\"><a href=\"#编辑Queue守护进程\" class=\"headerlink\" title=\"编辑Queue守护进程\"></a>编辑Queue守护进程</h2><ul>\n<li><p><code>sudo vi /etc/supervisor/conf.d/myqueue.conf</code></p>\n<pre><code>[program:myqueue]\ncommand                 = php artisan queue:work  --env=production --queue=queue1,queue2\nuser                    = www-data\ndirectory               = /path/to/app/\nprocess_name            = %(program_name)s_%(process_num)s\nnumprocs                = 6\nautostart               = true\nautorestart             = true\nstdout_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\nstdout_logfile_maxbytes = 10MB\nstderr_logfile          = /path/to/app/app/storage/logs/supervisor-pd-queue.log\nstderr_logfile_maxbytes = 10MB</code></pre></li>\n</ul>\n<h2 id=\"启动进程\"><a href=\"#启动进程\" class=\"headerlink\" title=\"启动进程\"></a>启动进程</h2><ul>\n<li><code>$ sudo supervisorctl</code></li>\n<li><code>&gt; reread</code> # Tell supervisord to check for new items in /etc/supervisor/conf.d/</li>\n<li><code>&gt; add myqueue</code>       # Add this process to Supervisord</li>\n<li><code>&gt; start myqueue</code>     # May say “already started”</li>\n</ul>\n<h2 id=\"查看进程是否启动\"><a href=\"#查看进程是否启动\" class=\"headerlink\" title=\"查看进程是否启动\"></a>查看进程是否启动</h2><ul>\n<li><code>$ ps aux | grep php</code></li>\n</ul>\n"},{"layout":"post","title":"《金刚经说什么》读书笔记","date":"2016-07-01T04:00:00.000Z","description":null,"keywords":"金刚经,读书笔记","_content":"\n先把做人的道理完成，再来搞这个学佛的事。但是既然要学佛了，千万要注意不住于相四个字；一住相，什么都学不成了。\n福慧双修。智慧具足，福德具足。《金刚经》告诉你，真正的福德要怎样修呢？就是不住相布施。\n-- 第五品\n\n\n","source":"_posts/2016-07-01-jin-gang-jing-note.md","raw":"---\nlayout: post\ntitle: 《金刚经说什么》读书笔记\ncategory: 阅读笔记\ntags: [笔记]\ndate: 2016-07-01\ndescription:\nkeywords: 金刚经,读书笔记\n---\n\n先把做人的道理完成，再来搞这个学佛的事。但是既然要学佛了，千万要注意不住于相四个字；一住相，什么都学不成了。\n福慧双修。智慧具足，福德具足。《金刚经》告诉你，真正的福德要怎样修呢？就是不住相布施。\n-- 第五品\n\n\n","slug":"2016-07-01-jin-gang-jing-note","published":1,"updated":"2020-04-19T02:42:41.316Z","_id":"ck96ffjaf000xrmp99redaz1u","comments":1,"photos":[],"link":"","content":"<p>先把做人的道理完成，再来搞这个学佛的事。但是既然要学佛了，千万要注意不住于相四个字；一住相，什么都学不成了。<br>福慧双修。智慧具足，福德具足。《金刚经》告诉你，真正的福德要怎样修呢？就是不住相布施。<br>– 第五品</p>\n","site":{"data":{}},"excerpt":"","more":"<p>先把做人的道理完成，再来搞这个学佛的事。但是既然要学佛了，千万要注意不住于相四个字；一住相，什么都学不成了。<br>福慧双修。智慧具足，福德具足。《金刚经》告诉你，真正的福德要怎样修呢？就是不住相布施。<br>– 第五品</p>\n"},{"layout":"post","title":"收集一些常用的 JS 和 CSS 库","date":"2015-02-02T05:00:00.000Z","description":null,"keywords":"CSS,Javascript","_content":"\n### [Shape of CSS](http://css-tricks.com/examples/ShapesOfCSS/)\n\n* Shapes includes : Circle, Rectangle, Star(5-points), etc.\n\n### [facebook/flux](https://github.com/facebook/flux)\n\n* Application Architecture for Building User Interfaces\n\n### [hapijs/boom](https://github.com/hapijs/boom)\n\n* HTTP-friendly error objects\n\n\n### [koajs/koa](https://github.com/koajs/koa)\n\n* Expressive middleware for node.js using generators\n\n### [josdejong/jsoneditor](https://github.com/josdejong/jsoneditor)\n\n* A web-based tool to view, edit, format, and validate JSON\n\n\n### [No9/harmon](https://github.com/No9/harmon)\n\n* middleware for node-http-proxy to modify the remote website response with trumpet\n\n### [nodejitsu/node-http-proxy](https://github.com/nodejitsu/node-http-proxy)\n\n* A full-featured http proxy for node.js\n\n### [faisalman/ua-parser-js](https://github.com/faisalman/ua-parser-js)\n\n* UAParser.js - Lightweight JavaScript-based User-Agent string parser. Supports browser & node.js environment. Also available as jQuery/Zepto plugin, Component/Bower/Meteor package, & RequireJS/AMD module\n\n\n","source":"_posts/2015-02-02-popular-js-css-collection.md","raw":"---\nlayout: post\ntitle: 收集一些常用的 JS 和 CSS 库\ncategory: 编程学习\ntags: [CSS, Javascript]\ndate: 2015-02-02\ndescription:\nkeywords: CSS,Javascript\n---\n\n### [Shape of CSS](http://css-tricks.com/examples/ShapesOfCSS/)\n\n* Shapes includes : Circle, Rectangle, Star(5-points), etc.\n\n### [facebook/flux](https://github.com/facebook/flux)\n\n* Application Architecture for Building User Interfaces\n\n### [hapijs/boom](https://github.com/hapijs/boom)\n\n* HTTP-friendly error objects\n\n\n### [koajs/koa](https://github.com/koajs/koa)\n\n* Expressive middleware for node.js using generators\n\n### [josdejong/jsoneditor](https://github.com/josdejong/jsoneditor)\n\n* A web-based tool to view, edit, format, and validate JSON\n\n\n### [No9/harmon](https://github.com/No9/harmon)\n\n* middleware for node-http-proxy to modify the remote website response with trumpet\n\n### [nodejitsu/node-http-proxy](https://github.com/nodejitsu/node-http-proxy)\n\n* A full-featured http proxy for node.js\n\n### [faisalman/ua-parser-js](https://github.com/faisalman/ua-parser-js)\n\n* UAParser.js - Lightweight JavaScript-based User-Agent string parser. Supports browser & node.js environment. Also available as jQuery/Zepto plugin, Component/Bower/Meteor package, & RequireJS/AMD module\n\n\n","slug":"2015-02-02-popular-js-css-collection","published":1,"updated":"2020-04-19T02:45:47.481Z","_id":"ck96ffjah0011rmp9ecbfel4a","comments":1,"photos":[],"link":"","content":"<h3 id=\"Shape-of-CSS\"><a href=\"#Shape-of-CSS\" class=\"headerlink\" title=\"Shape of CSS\"></a><a href=\"http://css-tricks.com/examples/ShapesOfCSS/\" target=\"_blank\" rel=\"noopener\">Shape of CSS</a></h3><ul>\n<li>Shapes includes : Circle, Rectangle, Star(5-points), etc.</li>\n</ul>\n<h3 id=\"facebook-flux\"><a href=\"#facebook-flux\" class=\"headerlink\" title=\"facebook/flux\"></a><a href=\"https://github.com/facebook/flux\" target=\"_blank\" rel=\"noopener\">facebook/flux</a></h3><ul>\n<li>Application Architecture for Building User Interfaces</li>\n</ul>\n<h3 id=\"hapijs-boom\"><a href=\"#hapijs-boom\" class=\"headerlink\" title=\"hapijs/boom\"></a><a href=\"https://github.com/hapijs/boom\" target=\"_blank\" rel=\"noopener\">hapijs/boom</a></h3><ul>\n<li>HTTP-friendly error objects</li>\n</ul>\n<h3 id=\"koajs-koa\"><a href=\"#koajs-koa\" class=\"headerlink\" title=\"koajs/koa\"></a><a href=\"https://github.com/koajs/koa\" target=\"_blank\" rel=\"noopener\">koajs/koa</a></h3><ul>\n<li>Expressive middleware for node.js using generators</li>\n</ul>\n<h3 id=\"josdejong-jsoneditor\"><a href=\"#josdejong-jsoneditor\" class=\"headerlink\" title=\"josdejong/jsoneditor\"></a><a href=\"https://github.com/josdejong/jsoneditor\" target=\"_blank\" rel=\"noopener\">josdejong/jsoneditor</a></h3><ul>\n<li>A web-based tool to view, edit, format, and validate JSON</li>\n</ul>\n<h3 id=\"No9-harmon\"><a href=\"#No9-harmon\" class=\"headerlink\" title=\"No9/harmon\"></a><a href=\"https://github.com/No9/harmon\" target=\"_blank\" rel=\"noopener\">No9/harmon</a></h3><ul>\n<li>middleware for node-http-proxy to modify the remote website response with trumpet</li>\n</ul>\n<h3 id=\"nodejitsu-node-http-proxy\"><a href=\"#nodejitsu-node-http-proxy\" class=\"headerlink\" title=\"nodejitsu/node-http-proxy\"></a><a href=\"https://github.com/nodejitsu/node-http-proxy\" target=\"_blank\" rel=\"noopener\">nodejitsu/node-http-proxy</a></h3><ul>\n<li>A full-featured http proxy for node.js</li>\n</ul>\n<h3 id=\"faisalman-ua-parser-js\"><a href=\"#faisalman-ua-parser-js\" class=\"headerlink\" title=\"faisalman/ua-parser-js\"></a><a href=\"https://github.com/faisalman/ua-parser-js\" target=\"_blank\" rel=\"noopener\">faisalman/ua-parser-js</a></h3><ul>\n<li>UAParser.js - Lightweight JavaScript-based User-Agent string parser. Supports browser &amp; node.js environment. Also available as jQuery/Zepto plugin, Component/Bower/Meteor package, &amp; RequireJS/AMD module</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Shape-of-CSS\"><a href=\"#Shape-of-CSS\" class=\"headerlink\" title=\"Shape of CSS\"></a><a href=\"http://css-tricks.com/examples/ShapesOfCSS/\" target=\"_blank\" rel=\"noopener\">Shape of CSS</a></h3><ul>\n<li>Shapes includes : Circle, Rectangle, Star(5-points), etc.</li>\n</ul>\n<h3 id=\"facebook-flux\"><a href=\"#facebook-flux\" class=\"headerlink\" title=\"facebook/flux\"></a><a href=\"https://github.com/facebook/flux\" target=\"_blank\" rel=\"noopener\">facebook/flux</a></h3><ul>\n<li>Application Architecture for Building User Interfaces</li>\n</ul>\n<h3 id=\"hapijs-boom\"><a href=\"#hapijs-boom\" class=\"headerlink\" title=\"hapijs/boom\"></a><a href=\"https://github.com/hapijs/boom\" target=\"_blank\" rel=\"noopener\">hapijs/boom</a></h3><ul>\n<li>HTTP-friendly error objects</li>\n</ul>\n<h3 id=\"koajs-koa\"><a href=\"#koajs-koa\" class=\"headerlink\" title=\"koajs/koa\"></a><a href=\"https://github.com/koajs/koa\" target=\"_blank\" rel=\"noopener\">koajs/koa</a></h3><ul>\n<li>Expressive middleware for node.js using generators</li>\n</ul>\n<h3 id=\"josdejong-jsoneditor\"><a href=\"#josdejong-jsoneditor\" class=\"headerlink\" title=\"josdejong/jsoneditor\"></a><a href=\"https://github.com/josdejong/jsoneditor\" target=\"_blank\" rel=\"noopener\">josdejong/jsoneditor</a></h3><ul>\n<li>A web-based tool to view, edit, format, and validate JSON</li>\n</ul>\n<h3 id=\"No9-harmon\"><a href=\"#No9-harmon\" class=\"headerlink\" title=\"No9/harmon\"></a><a href=\"https://github.com/No9/harmon\" target=\"_blank\" rel=\"noopener\">No9/harmon</a></h3><ul>\n<li>middleware for node-http-proxy to modify the remote website response with trumpet</li>\n</ul>\n<h3 id=\"nodejitsu-node-http-proxy\"><a href=\"#nodejitsu-node-http-proxy\" class=\"headerlink\" title=\"nodejitsu/node-http-proxy\"></a><a href=\"https://github.com/nodejitsu/node-http-proxy\" target=\"_blank\" rel=\"noopener\">nodejitsu/node-http-proxy</a></h3><ul>\n<li>A full-featured http proxy for node.js</li>\n</ul>\n<h3 id=\"faisalman-ua-parser-js\"><a href=\"#faisalman-ua-parser-js\" class=\"headerlink\" title=\"faisalman/ua-parser-js\"></a><a href=\"https://github.com/faisalman/ua-parser-js\" target=\"_blank\" rel=\"noopener\">faisalman/ua-parser-js</a></h3><ul>\n<li>UAParser.js - Lightweight JavaScript-based User-Agent string parser. Supports browser &amp; node.js environment. Also available as jQuery/Zepto plugin, Component/Bower/Meteor package, &amp; RequireJS/AMD module</li>\n</ul>\n"},{"layout":"post","title":"《沙郡年记》读书笔记","date":"2016-08-05T04:00:00.000Z","description":null,"keywords":"沙郡年记, A Sand County Almanac, Aldo Leopold","_content":"\n只有那些不会抬头仰望天空，不会侧耳倾听雁鸣的人，才会认为三月的早晨是如此单调乏味。\n-- 三月大雁归来\n\n贫瘠的沙土和微弱的阳光无法让它绽放出更大更好的花朵来，然而对于葶苈来说已经足够。毕竟。葶苈算不上春之花，而仅仅是对希望的一种补充。\n-- 四月 潮水来临\n\n空中之舞的戏剧每晚都在数百个农场上演，农场的主人却叹息说缺乏娱乐，他们错误地认为：可供消遣的文娱活动只有在剧院里才能找到。这些人生活在土地上，却不懂如何依靠土地快乐地生活。\n-- 四月 潮水来临\n\n我思索起鳟鱼和人的行为方式。我们是多么像鱼，时刻准备着，热切渴望着，想要抓住周遭环境之风吹落到事件之流殇到所有新东西。当我们发现那看似美妙的诱饵内藏着钓钩时，又是多么懊悔自己的仓促和草率！尽管如此，我仍认为渴望本身有一定的价值，不论渴望的对象时真实还是虚幻。\n-- 六月 钓鱼田园诗\n\n创造通常仅限于神与诗人，但是如果知道方法，即或是身价卑微的普通百姓也可以绕开这一规章的限制。例如，要种植一棵松树，既不需要成为神灵也不需要成为诗人，需要的仅仅是拥有一把铲子，有了这样奇妙的规章漏洞，任何一个庄稼汉都可以说：要有个棵树，于是就有了一棵树。\n-- 十二月 家园的范围\n\n为了找到所爱，它们（旅鸽）只需要自由的天空，以及用力挥动翅膀的意愿。\n-- 威斯康星州\n\n良好的嗜好可能是对于庸常事物的孤独反抗，也可能是志趣相投的一群人共同进行的合谋。\n-- 闲暇时间\n\n人类乘坐着顺环河而下的原木，明智审慎地去除一些树节，从而控制原木的方向和速度。这一技艺使我们获得了“智者”这种特别的称谓。去除树节的技巧被称为经济学，对于古老路途的记忆被称为历史，对于新路线的选择被称为治国才能，关于即将到来的浅滩或急流的交谈被称为政治。一些人不仅想除掉所有原木的树节，而且想改造整条河流中的原木船队。这种集体进行的与自然的对话被称为国家计划。\n-- 环河\n\n能否看出荒野的文化价值，归根结底在于人类思想上的谦卑态度。肤浅无知、不再植根于土地的现代人，自以为已经发现了重要的东西，空谈着自认可以延续千年的政治或经济帝国。而只有真正的学者才明白，历史是由单一起点展开的连续旅程构成的，人类一次次回到这出发点，由此再次上路，寻求另一套永恒的价值观。\n-- 荒野\n\n","source":"_posts/2016-08-05-a-sand-county-almanac.md","raw":"---\nlayout: post\ntitle: 《沙郡年记》读书笔记\ncategory: 阅读笔记\ntags: [笔记]\ndate: 2016-08-05\ndescription:\nkeywords: 沙郡年记, A Sand County Almanac, Aldo Leopold\n---\n\n只有那些不会抬头仰望天空，不会侧耳倾听雁鸣的人，才会认为三月的早晨是如此单调乏味。\n-- 三月大雁归来\n\n贫瘠的沙土和微弱的阳光无法让它绽放出更大更好的花朵来，然而对于葶苈来说已经足够。毕竟。葶苈算不上春之花，而仅仅是对希望的一种补充。\n-- 四月 潮水来临\n\n空中之舞的戏剧每晚都在数百个农场上演，农场的主人却叹息说缺乏娱乐，他们错误地认为：可供消遣的文娱活动只有在剧院里才能找到。这些人生活在土地上，却不懂如何依靠土地快乐地生活。\n-- 四月 潮水来临\n\n我思索起鳟鱼和人的行为方式。我们是多么像鱼，时刻准备着，热切渴望着，想要抓住周遭环境之风吹落到事件之流殇到所有新东西。当我们发现那看似美妙的诱饵内藏着钓钩时，又是多么懊悔自己的仓促和草率！尽管如此，我仍认为渴望本身有一定的价值，不论渴望的对象时真实还是虚幻。\n-- 六月 钓鱼田园诗\n\n创造通常仅限于神与诗人，但是如果知道方法，即或是身价卑微的普通百姓也可以绕开这一规章的限制。例如，要种植一棵松树，既不需要成为神灵也不需要成为诗人，需要的仅仅是拥有一把铲子，有了这样奇妙的规章漏洞，任何一个庄稼汉都可以说：要有个棵树，于是就有了一棵树。\n-- 十二月 家园的范围\n\n为了找到所爱，它们（旅鸽）只需要自由的天空，以及用力挥动翅膀的意愿。\n-- 威斯康星州\n\n良好的嗜好可能是对于庸常事物的孤独反抗，也可能是志趣相投的一群人共同进行的合谋。\n-- 闲暇时间\n\n人类乘坐着顺环河而下的原木，明智审慎地去除一些树节，从而控制原木的方向和速度。这一技艺使我们获得了“智者”这种特别的称谓。去除树节的技巧被称为经济学，对于古老路途的记忆被称为历史，对于新路线的选择被称为治国才能，关于即将到来的浅滩或急流的交谈被称为政治。一些人不仅想除掉所有原木的树节，而且想改造整条河流中的原木船队。这种集体进行的与自然的对话被称为国家计划。\n-- 环河\n\n能否看出荒野的文化价值，归根结底在于人类思想上的谦卑态度。肤浅无知、不再植根于土地的现代人，自以为已经发现了重要的东西，空谈着自认可以延续千年的政治或经济帝国。而只有真正的学者才明白，历史是由单一起点展开的连续旅程构成的，人类一次次回到这出发点，由此再次上路，寻求另一套永恒的价值观。\n-- 荒野\n\n","slug":"2016-08-05-a-sand-county-almanac","published":1,"updated":"2020-04-19T02:41:53.496Z","_id":"ck96ffjai0014rmp9f9m4hiiv","comments":1,"photos":[],"link":"","content":"<p>只有那些不会抬头仰望天空，不会侧耳倾听雁鸣的人，才会认为三月的早晨是如此单调乏味。<br>– 三月大雁归来</p>\n<p>贫瘠的沙土和微弱的阳光无法让它绽放出更大更好的花朵来，然而对于葶苈来说已经足够。毕竟。葶苈算不上春之花，而仅仅是对希望的一种补充。<br>– 四月 潮水来临</p>\n<p>空中之舞的戏剧每晚都在数百个农场上演，农场的主人却叹息说缺乏娱乐，他们错误地认为：可供消遣的文娱活动只有在剧院里才能找到。这些人生活在土地上，却不懂如何依靠土地快乐地生活。<br>– 四月 潮水来临</p>\n<p>我思索起鳟鱼和人的行为方式。我们是多么像鱼，时刻准备着，热切渴望着，想要抓住周遭环境之风吹落到事件之流殇到所有新东西。当我们发现那看似美妙的诱饵内藏着钓钩时，又是多么懊悔自己的仓促和草率！尽管如此，我仍认为渴望本身有一定的价值，不论渴望的对象时真实还是虚幻。<br>– 六月 钓鱼田园诗</p>\n<p>创造通常仅限于神与诗人，但是如果知道方法，即或是身价卑微的普通百姓也可以绕开这一规章的限制。例如，要种植一棵松树，既不需要成为神灵也不需要成为诗人，需要的仅仅是拥有一把铲子，有了这样奇妙的规章漏洞，任何一个庄稼汉都可以说：要有个棵树，于是就有了一棵树。<br>– 十二月 家园的范围</p>\n<p>为了找到所爱，它们（旅鸽）只需要自由的天空，以及用力挥动翅膀的意愿。<br>– 威斯康星州</p>\n<p>良好的嗜好可能是对于庸常事物的孤独反抗，也可能是志趣相投的一群人共同进行的合谋。<br>– 闲暇时间</p>\n<p>人类乘坐着顺环河而下的原木，明智审慎地去除一些树节，从而控制原木的方向和速度。这一技艺使我们获得了“智者”这种特别的称谓。去除树节的技巧被称为经济学，对于古老路途的记忆被称为历史，对于新路线的选择被称为治国才能，关于即将到来的浅滩或急流的交谈被称为政治。一些人不仅想除掉所有原木的树节，而且想改造整条河流中的原木船队。这种集体进行的与自然的对话被称为国家计划。<br>– 环河</p>\n<p>能否看出荒野的文化价值，归根结底在于人类思想上的谦卑态度。肤浅无知、不再植根于土地的现代人，自以为已经发现了重要的东西，空谈着自认可以延续千年的政治或经济帝国。而只有真正的学者才明白，历史是由单一起点展开的连续旅程构成的，人类一次次回到这出发点，由此再次上路，寻求另一套永恒的价值观。<br>– 荒野</p>\n","site":{"data":{}},"excerpt":"","more":"<p>只有那些不会抬头仰望天空，不会侧耳倾听雁鸣的人，才会认为三月的早晨是如此单调乏味。<br>– 三月大雁归来</p>\n<p>贫瘠的沙土和微弱的阳光无法让它绽放出更大更好的花朵来，然而对于葶苈来说已经足够。毕竟。葶苈算不上春之花，而仅仅是对希望的一种补充。<br>– 四月 潮水来临</p>\n<p>空中之舞的戏剧每晚都在数百个农场上演，农场的主人却叹息说缺乏娱乐，他们错误地认为：可供消遣的文娱活动只有在剧院里才能找到。这些人生活在土地上，却不懂如何依靠土地快乐地生活。<br>– 四月 潮水来临</p>\n<p>我思索起鳟鱼和人的行为方式。我们是多么像鱼，时刻准备着，热切渴望着，想要抓住周遭环境之风吹落到事件之流殇到所有新东西。当我们发现那看似美妙的诱饵内藏着钓钩时，又是多么懊悔自己的仓促和草率！尽管如此，我仍认为渴望本身有一定的价值，不论渴望的对象时真实还是虚幻。<br>– 六月 钓鱼田园诗</p>\n<p>创造通常仅限于神与诗人，但是如果知道方法，即或是身价卑微的普通百姓也可以绕开这一规章的限制。例如，要种植一棵松树，既不需要成为神灵也不需要成为诗人，需要的仅仅是拥有一把铲子，有了这样奇妙的规章漏洞，任何一个庄稼汉都可以说：要有个棵树，于是就有了一棵树。<br>– 十二月 家园的范围</p>\n<p>为了找到所爱，它们（旅鸽）只需要自由的天空，以及用力挥动翅膀的意愿。<br>– 威斯康星州</p>\n<p>良好的嗜好可能是对于庸常事物的孤独反抗，也可能是志趣相投的一群人共同进行的合谋。<br>– 闲暇时间</p>\n<p>人类乘坐着顺环河而下的原木，明智审慎地去除一些树节，从而控制原木的方向和速度。这一技艺使我们获得了“智者”这种特别的称谓。去除树节的技巧被称为经济学，对于古老路途的记忆被称为历史，对于新路线的选择被称为治国才能，关于即将到来的浅滩或急流的交谈被称为政治。一些人不仅想除掉所有原木的树节，而且想改造整条河流中的原木船队。这种集体进行的与自然的对话被称为国家计划。<br>– 环河</p>\n<p>能否看出荒野的文化价值，归根结底在于人类思想上的谦卑态度。肤浅无知、不再植根于土地的现代人，自以为已经发现了重要的东西，空谈着自认可以延续千年的政治或经济帝国。而只有真正的学者才明白，历史是由单一起点展开的连续旅程构成的，人类一次次回到这出发点，由此再次上路，寻求另一套永恒的价值观。<br>– 荒野</p>\n"},{"layout":"post","title":"优化配置 Nginx 和 PHP-FPM","date":"2015-09-10T04:00:00.000Z","description":null,"keywords":"nginx,php-fpm,optimize","_content":"\n## nginx\n\n* `server_tokens off;`\n\n    hide nginx server tokens\n\n* `access_log off;`\n\n    reduce nginx write to disk times\n\n* `worker_processes 1;`\n\n    always equals `grep processor /proc/cpuinfo | wc -l`\n\n* `worker_connections 4096;`\n\n    `ulimit -n` will echo the max connection of server.\n\n* `client_body_buffer_size 32K;`\n\n    This handles the client buffer size, meaning any POST actions sent to Nginx.\n\n* `client_header_buffer_size 10k;`\n* `large_client_header_buffers 4 32k;`\n* `client_max_body_size 50m;`\n\n* Gzip Compression\n\n    Gzip can help reduce the amount of network transfer Nginx deals with. However, be careful increasing the gzip_comp_level too high as the server will begin wasting cpu cycles.\n\n        gzip             on;\n        gzip_comp_level  2;\n        gzip_min_length  1000;\n        gzip_proxied     expired no-cache no-store private auth;\n        gzip_types       text/plain application/x-javascript text/xml text/css application/xml;\n\n* Timeouts\n\n    Timeouts can also drastically improve performance.\n\n    The `client_body_timeout` and `client_header_timeout` directives are responsible for the time a server will wait for a client body or client header to be sent after request. If neither a body or header is sent, the server will issue a 408 error or Request time out.\n\n    The keepalive_timeout assigns the timeout for keep-alive connections with the client. Simply put, Nginx will close connections with the client after this period of time.\n\n    Finally, the send_timeout is established not on the entire transfer of answer, but only between two operations of reading; if after this time client will take nothing, then Nginx is shutting down the connection.\n\n        client_body_timeout 12;\n        client_header_timeout 12;\n        keepalive_timeout 15;\n        send_timeout 10;\n\n## php-fpm\n\n* `pm.max_spare_servers = 30;`\n\n    The desired maximum number of idle server processes.\n\n* `pm.max_children = 1024;`\n\n    On an average each PHP-FPM process took ~75MB of RAM on my machine.\n\n    Appropriate value for pm.max_children can be calculated as:\n\n    pm.max_children = Total RAM dedicated to the web server / Max child process size - in my case it was 85MB\n\n    The server has 8GB of RAM, so:\n\n    pm.max_children = 6144MB / 85MB = 72\n\n    assuming you are devoting 80% of available memory to PHP-FPM, the command below will suggest an approx pm.max_children value for all pools:\n\n    `echo \"pm.max_children = $(( $(awk '/MemTotal:/ { printf \"%d\\n\", ($2*0.80) }' /proc/meminfo) / $(ps --no-headers -o \"rss,cmd\" -C php-fpm | awk '{ sum+=$1 } END { printf (\"%d\\n\", sum/NR) }') ))\"`\n\n* `pm.max_requests = 800;`\n\n    The number of requests each child process should execute before respawning.\n\nRefers:\n\n[http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/](http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/)\n\n[https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration](https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration)\n\n[http://www.hjue.me/post/php-fpm-nginx](http://www.hjue.me/post/php-fpm-nginx)\n\n","source":"_posts/2015-09-10-optimize-nginx-and-php-fpm-configuration.md","raw":"---\nlayout: post\ntitle: 优化配置 Nginx 和 PHP-FPM\ncategory: 编程学习\ntags: [Nginx, PHP]\ndate: 2015-09-10\ndescription:\nkeywords: nginx,php-fpm,optimize\n---\n\n## nginx\n\n* `server_tokens off;`\n\n    hide nginx server tokens\n\n* `access_log off;`\n\n    reduce nginx write to disk times\n\n* `worker_processes 1;`\n\n    always equals `grep processor /proc/cpuinfo | wc -l`\n\n* `worker_connections 4096;`\n\n    `ulimit -n` will echo the max connection of server.\n\n* `client_body_buffer_size 32K;`\n\n    This handles the client buffer size, meaning any POST actions sent to Nginx.\n\n* `client_header_buffer_size 10k;`\n* `large_client_header_buffers 4 32k;`\n* `client_max_body_size 50m;`\n\n* Gzip Compression\n\n    Gzip can help reduce the amount of network transfer Nginx deals with. However, be careful increasing the gzip_comp_level too high as the server will begin wasting cpu cycles.\n\n        gzip             on;\n        gzip_comp_level  2;\n        gzip_min_length  1000;\n        gzip_proxied     expired no-cache no-store private auth;\n        gzip_types       text/plain application/x-javascript text/xml text/css application/xml;\n\n* Timeouts\n\n    Timeouts can also drastically improve performance.\n\n    The `client_body_timeout` and `client_header_timeout` directives are responsible for the time a server will wait for a client body or client header to be sent after request. If neither a body or header is sent, the server will issue a 408 error or Request time out.\n\n    The keepalive_timeout assigns the timeout for keep-alive connections with the client. Simply put, Nginx will close connections with the client after this period of time.\n\n    Finally, the send_timeout is established not on the entire transfer of answer, but only between two operations of reading; if after this time client will take nothing, then Nginx is shutting down the connection.\n\n        client_body_timeout 12;\n        client_header_timeout 12;\n        keepalive_timeout 15;\n        send_timeout 10;\n\n## php-fpm\n\n* `pm.max_spare_servers = 30;`\n\n    The desired maximum number of idle server processes.\n\n* `pm.max_children = 1024;`\n\n    On an average each PHP-FPM process took ~75MB of RAM on my machine.\n\n    Appropriate value for pm.max_children can be calculated as:\n\n    pm.max_children = Total RAM dedicated to the web server / Max child process size - in my case it was 85MB\n\n    The server has 8GB of RAM, so:\n\n    pm.max_children = 6144MB / 85MB = 72\n\n    assuming you are devoting 80% of available memory to PHP-FPM, the command below will suggest an approx pm.max_children value for all pools:\n\n    `echo \"pm.max_children = $(( $(awk '/MemTotal:/ { printf \"%d\\n\", ($2*0.80) }' /proc/meminfo) / $(ps --no-headers -o \"rss,cmd\" -C php-fpm | awk '{ sum+=$1 } END { printf (\"%d\\n\", sum/NR) }') ))\"`\n\n* `pm.max_requests = 800;`\n\n    The number of requests each child process should execute before respawning.\n\nRefers:\n\n[http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/](http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/)\n\n[https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration](https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration)\n\n[http://www.hjue.me/post/php-fpm-nginx](http://www.hjue.me/post/php-fpm-nginx)\n\n","slug":"2015-09-10-optimize-nginx-and-php-fpm-configuration","published":1,"updated":"2020-04-19T02:45:59.962Z","_id":"ck96ffjaj0018rmp9hoi59bxv","comments":1,"photos":[],"link":"","content":"<h2 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h2><ul>\n<li><p><code>server_tokens off;</code></p>\n<p>  hide nginx server tokens</p>\n</li>\n<li><p><code>access_log off;</code></p>\n<p>  reduce nginx write to disk times</p>\n</li>\n<li><p><code>worker_processes 1;</code></p>\n<p>  always equals <code>grep processor /proc/cpuinfo | wc -l</code></p>\n</li>\n<li><p><code>worker_connections 4096;</code></p>\n<p>  <code>ulimit -n</code> will echo the max connection of server.</p>\n</li>\n<li><p><code>client_body_buffer_size 32K;</code></p>\n<p>  This handles the client buffer size, meaning any POST actions sent to Nginx.</p>\n</li>\n<li><p><code>client_header_buffer_size 10k;</code></p>\n</li>\n<li><p><code>large_client_header_buffers 4 32k;</code></p>\n</li>\n<li><p><code>client_max_body_size 50m;</code></p>\n</li>\n<li><p>Gzip Compression</p>\n<p>  Gzip can help reduce the amount of network transfer Nginx deals with. However, be careful increasing the gzip_comp_level too high as the server will begin wasting cpu cycles.</p>\n<pre><code>gzip             on;\ngzip_comp_level  2;\ngzip_min_length  1000;\ngzip_proxied     expired no-cache no-store private auth;\ngzip_types       text/plain application/x-javascript text/xml text/css application/xml;</code></pre></li>\n<li><p>Timeouts</p>\n<p>  Timeouts can also drastically improve performance.</p>\n<p>  The <code>client_body_timeout</code> and <code>client_header_timeout</code> directives are responsible for the time a server will wait for a client body or client header to be sent after request. If neither a body or header is sent, the server will issue a 408 error or Request time out.</p>\n<p>  The keepalive_timeout assigns the timeout for keep-alive connections with the client. Simply put, Nginx will close connections with the client after this period of time.</p>\n<p>  Finally, the send_timeout is established not on the entire transfer of answer, but only between two operations of reading; if after this time client will take nothing, then Nginx is shutting down the connection.</p>\n<pre><code>client_body_timeout 12;\nclient_header_timeout 12;\nkeepalive_timeout 15;\nsend_timeout 10;</code></pre></li>\n</ul>\n<h2 id=\"php-fpm\"><a href=\"#php-fpm\" class=\"headerlink\" title=\"php-fpm\"></a>php-fpm</h2><ul>\n<li><p><code>pm.max_spare_servers = 30;</code></p>\n<p>  The desired maximum number of idle server processes.</p>\n</li>\n<li><p><code>pm.max_children = 1024;</code></p>\n<p>  On an average each PHP-FPM process took ~75MB of RAM on my machine.</p>\n<p>  Appropriate value for pm.max_children can be calculated as:</p>\n<p>  pm.max_children = Total RAM dedicated to the web server / Max child process size - in my case it was 85MB</p>\n<p>  The server has 8GB of RAM, so:</p>\n<p>  pm.max_children = 6144MB / 85MB = 72</p>\n<p>  assuming you are devoting 80% of available memory to PHP-FPM, the command below will suggest an approx pm.max_children value for all pools:</p>\n<p>  <code>echo &quot;pm.max_children = $(( $(awk &#39;/MemTotal:/ { printf &quot;%d\\n&quot;, ($2*0.80) }&#39; /proc/meminfo) / $(ps --no-headers -o &quot;rss,cmd&quot; -C php-fpm | awk &#39;{ sum+=$1 } END { printf (&quot;%d\\n&quot;, sum/NR) }&#39;) ))&quot;</code></p>\n</li>\n<li><p><code>pm.max_requests = 800;</code></p>\n<p>  The number of requests each child process should execute before respawning.</p>\n</li>\n</ul>\n<p>Refers:</p>\n<p><a href=\"http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/\" target=\"_blank\" rel=\"noopener\">http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/</a></p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration\" target=\"_blank\" rel=\"noopener\">https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration</a></p>\n<p><a href=\"http://www.hjue.me/post/php-fpm-nginx\" target=\"_blank\" rel=\"noopener\">http://www.hjue.me/post/php-fpm-nginx</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h2><ul>\n<li><p><code>server_tokens off;</code></p>\n<p>  hide nginx server tokens</p>\n</li>\n<li><p><code>access_log off;</code></p>\n<p>  reduce nginx write to disk times</p>\n</li>\n<li><p><code>worker_processes 1;</code></p>\n<p>  always equals <code>grep processor /proc/cpuinfo | wc -l</code></p>\n</li>\n<li><p><code>worker_connections 4096;</code></p>\n<p>  <code>ulimit -n</code> will echo the max connection of server.</p>\n</li>\n<li><p><code>client_body_buffer_size 32K;</code></p>\n<p>  This handles the client buffer size, meaning any POST actions sent to Nginx.</p>\n</li>\n<li><p><code>client_header_buffer_size 10k;</code></p>\n</li>\n<li><p><code>large_client_header_buffers 4 32k;</code></p>\n</li>\n<li><p><code>client_max_body_size 50m;</code></p>\n</li>\n<li><p>Gzip Compression</p>\n<p>  Gzip can help reduce the amount of network transfer Nginx deals with. However, be careful increasing the gzip_comp_level too high as the server will begin wasting cpu cycles.</p>\n<pre><code>gzip             on;\ngzip_comp_level  2;\ngzip_min_length  1000;\ngzip_proxied     expired no-cache no-store private auth;\ngzip_types       text/plain application/x-javascript text/xml text/css application/xml;</code></pre></li>\n<li><p>Timeouts</p>\n<p>  Timeouts can also drastically improve performance.</p>\n<p>  The <code>client_body_timeout</code> and <code>client_header_timeout</code> directives are responsible for the time a server will wait for a client body or client header to be sent after request. If neither a body or header is sent, the server will issue a 408 error or Request time out.</p>\n<p>  The keepalive_timeout assigns the timeout for keep-alive connections with the client. Simply put, Nginx will close connections with the client after this period of time.</p>\n<p>  Finally, the send_timeout is established not on the entire transfer of answer, but only between two operations of reading; if after this time client will take nothing, then Nginx is shutting down the connection.</p>\n<pre><code>client_body_timeout 12;\nclient_header_timeout 12;\nkeepalive_timeout 15;\nsend_timeout 10;</code></pre></li>\n</ul>\n<h2 id=\"php-fpm\"><a href=\"#php-fpm\" class=\"headerlink\" title=\"php-fpm\"></a>php-fpm</h2><ul>\n<li><p><code>pm.max_spare_servers = 30;</code></p>\n<p>  The desired maximum number of idle server processes.</p>\n</li>\n<li><p><code>pm.max_children = 1024;</code></p>\n<p>  On an average each PHP-FPM process took ~75MB of RAM on my machine.</p>\n<p>  Appropriate value for pm.max_children can be calculated as:</p>\n<p>  pm.max_children = Total RAM dedicated to the web server / Max child process size - in my case it was 85MB</p>\n<p>  The server has 8GB of RAM, so:</p>\n<p>  pm.max_children = 6144MB / 85MB = 72</p>\n<p>  assuming you are devoting 80% of available memory to PHP-FPM, the command below will suggest an approx pm.max_children value for all pools:</p>\n<p>  <code>echo &quot;pm.max_children = $(( $(awk &#39;/MemTotal:/ { printf &quot;%d\\n&quot;, ($2*0.80) }&#39; /proc/meminfo) / $(ps --no-headers -o &quot;rss,cmd&quot; -C php-fpm | awk &#39;{ sum+=$1 } END { printf (&quot;%d\\n&quot;, sum/NR) }&#39;) ))&quot;</code></p>\n</li>\n<li><p><code>pm.max_requests = 800;</code></p>\n<p>  The number of requests each child process should execute before respawning.</p>\n</li>\n</ul>\n<p>Refers:</p>\n<p><a href=\"http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/\" target=\"_blank\" rel=\"noopener\">http://myshell.co.uk/blog/2012/07/adjusting-child-processes-for-php-fpm-nginx/</a></p>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration\" target=\"_blank\" rel=\"noopener\">https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration</a></p>\n<p><a href=\"http://www.hjue.me/post/php-fpm-nginx\" target=\"_blank\" rel=\"noopener\">http://www.hjue.me/post/php-fpm-nginx</a></p>\n"},{"layout":"post","title":"PSR标准解读 - PHP进阶 (2)","date":"2016-10-03T04:00:00.000Z","description":"PSR标准解读","keywords":"Modern PHP, PHP, Note, PSR, PHP-FIG","_content":"\n### _PSR-0 自动加载的标准结构 (虽然已不被推荐使用，但composer还在支持)_\n\n#### 要点：\n\n* 结构： `\\<Vendor Name>\\(<Namespace>\\)*<Class Name>`\n* 第一层级的命名为开发人员的标识\n* 完整的命名空间可包含多个层级\n* 在加载文件的时候，命名空间的分隔符`\\`会被`DIRECTORY_SEPARATOR`替换\n* 类名中的`_`会被`DIRECTORY_SEPARATOR`替换，所以`_`无任何意义\n* 在加载文件的时候，命名空间会补全`.php`后缀\n* 命名空间及类命名可以大小写随意\n* 示例：\n\n\t\t\\Symfony\\Core\\Request => /path/to/project/lib/vendor/Symfony/Core/Request.php\n\n\t\t\\namespace\\package_name\\Class_Name => /path/to/project/lib/vendor/namespace/package_name/Class/Name.php\n\t* 需要注意的是，层级目录会重复vendor和namespace。\n\n#### 加载器的实现示例：\n\n\t<?php\n\n\tfunction autoload($className)\n\t{\n\t    $className = ltrim($className, '\\\\');\n\t    $fileName  = '';\n\t    $namespace = '';\n\t    if ($lastNsPos = strrpos($className, '\\\\')) {\n\t        $namespace = substr($className, 0, $lastNsPos);\n\t        $className = substr($className, $lastNsPos + 1);\n\t        $fileName  = str_replace('\\\\', DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;\n\t    }\n\t    $fileName .= str_replace('_', DIRECTORY_SEPARATOR, $className) . '.php';\n\n\t    require $fileName;\n\t}\n\tspl_autoload_register('autoload');\n\n\n\n### PSR-1 基本代码样式\n* 标签 (PHP tags)\n\t\n\t代码必须包含在<?php ?> 或者 <?= ?>中\n\n* 编码 (Encoding)\n\n\t必须使用带BOM的UTF-8\n\n* 对象化 (Objective)\n\n\t单个PHP文件只负责一件事。定义类、trait、function、常量或者执行一系列的动作。不应该同时包含定义和执行代码。\n\n* 自动加载 (Autoloading)\n\n\t命名空间和类必须支持PSR-4标准。\n\n* 类名 (Class names)\n\n\t使用驼峰格式，首字母大写。例：CoffeeBean、TitleCase。\n\n* 常量名 (Constant names)\n\n\t必须全大写，并以下划线切分单词。例：PROJECT_NAME。\n\n* 方法命名 (Method names)\n\n\t使用驼峰格式，首字母小写。例：testCode。\n\n### PSR-2 严格代码样式\n\n* 包含PSR-1中的所有要求\n\n* 首行缩进 (Indentation)\n\n\t使用4个空格 (鄙人也是这个阵营的)\n\n* 文件和行 (Files and lines)\n\n\tPHP文件必须使用Unix格式的换行结尾，最后必须多一个空行。必须省略\"?>\"结尾标签。\n\n\t单行字符最好不超过80，最多不能大于120.\n\n\t每行最后不能有多余的空格。\n\n* PHP关键词 (Keywords)\n\n\t所有PHP的关键词使用小写。`true`、 `false`、 `null`等。\n\n* 命名空间 (Namespaces)\n\n\t每个命名空间的声明必须跟着一空行。同理在使用`use`关键词的时候后边也需要跟一空行。\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tuse Symfony\\Components\\HttpFoundation\\Request;\n\t\tuse Symfony\\Components\\HttpFoundation\\Response;\n\n\t\tclass App\n\t\t{\n\t\t\t// Class defination body\n\t\t}\n\t\n* 类 (Classes)\n\n\t定义类时使用的大括号必须在新的一行。在使用`extends`或`implements`时保证在同一行\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tclass App extends YourApp\n\t\t{\n\t\t\t// Class defination body\n\t\t}\n\n* 方法 (Methods)\n\n\t大括号同样另起一行。参数以一个逗号加空格隔开，结尾不能有多余的空格。\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tclass App extends YourApp\n\t\t{\n\t\t\tpublic function doSomething($firstParam = true, $secondParam = 2)\n\t\t\t{\n\t\t\t\t// Method defination body\n\t\t\t}\n\t\t}\n\n* 方法的可见行 (Visibility)\n\n\t使用关键词`public`、`protected`、`private`代替之前经常使用的`var`，或者变量以下划线开始来表示私有的方式。\n\n\t在定义方法为`abstract`或者`final`时，可见行关键词必须在前。\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tclass App extends YourApp\n\t\t{\n\t\t\t// Static property with visibility\n\t\t\tpublic static $numberOfBirds = 0;\n\n\t\t\t// Method with visibility\t\n\t\t\tpublic function __construct()\n\t\t\t{\n\t\t\t\tstatic::$numberOfBirds++;\n\t\t\t}\n\t\t}\n\n* 控制结构 (Control structures)\n\t\n\t所有的控制结构类关键词必须跟一个空格。例：`if`、`elseif`、`else`、`while`、`case`、`switch`、`do`、`for`、`foreach`、`try`、`catch`。\n\n\t\t<?php\n\t\t$gorilla = new \\Animal\\Gorilla;\n\t\t$ibis = new \\Animal\\StawNeckedIbis;\n\n\t\tif ($gorilla->isAwake() === true) {\n\t\t\tdo {\n\t\t\t\t$gorilla->beatChest();\n\t\t\t} while($ibis->isAsleep() === true);\n\n\t\t\t$ibis->flyAway();\n\t\t}\n\n### PSR-3 日志接口\n\n* PSR-1和PSR-2是编码规范， PSR-3是接口定义，它定义了PHP的日志组件的一系列接口信息。\n\n* 一个PHP的日志组件应该实现了`Psr\\Log\\LoggerInterface`接口的所有方法。该接口的定义参照了系统日志协议RFC5424。具体内容可参照： [LoggerInterface.php](https://github.com/php-fig/log/blob/master/Psr/Log/LoggerInterface.php)定义。\n\n### PSR-4 自动加载器\n\n* 同PSR-0，该标准描述了如何在运行时定位及加载PHP的类、接口以及traits。可以成为PSR-0的简化升级版。移除了对`_`转换成`DIRECTORY_SEPARATOR`的支持，目录结构也不需要再在`src/`下重复vendor和namespace。\n* 比如`\\Oreilly\\ModernPHP`这个命名空间对应的物理地址`src/`。PHP就知道所有使用了这个命名空间的类、接口以及traits都在`src/`目录下边。而命名空间`\\Oreilly\\ModernPHP\\Chapter1\\`对应的物理文件应该是`src/Chapter1/`。\n\n_本文档参考了《O'Reilly Modern PHP》以及PHP官方文档_\n\n","source":"_posts/2016-10-03-php-advance-2-psr.md","raw":"---\nlayout: post\ntitle: PSR标准解读 - PHP进阶 (2)\ncategory: 编程学习\ntags: [PHP, 编程规范]\ndate: 2016-10-03\ndescription: PSR标准解读\nkeywords: Modern PHP, PHP, Note, PSR, PHP-FIG\n---\n\n### _PSR-0 自动加载的标准结构 (虽然已不被推荐使用，但composer还在支持)_\n\n#### 要点：\n\n* 结构： `\\<Vendor Name>\\(<Namespace>\\)*<Class Name>`\n* 第一层级的命名为开发人员的标识\n* 完整的命名空间可包含多个层级\n* 在加载文件的时候，命名空间的分隔符`\\`会被`DIRECTORY_SEPARATOR`替换\n* 类名中的`_`会被`DIRECTORY_SEPARATOR`替换，所以`_`无任何意义\n* 在加载文件的时候，命名空间会补全`.php`后缀\n* 命名空间及类命名可以大小写随意\n* 示例：\n\n\t\t\\Symfony\\Core\\Request => /path/to/project/lib/vendor/Symfony/Core/Request.php\n\n\t\t\\namespace\\package_name\\Class_Name => /path/to/project/lib/vendor/namespace/package_name/Class/Name.php\n\t* 需要注意的是，层级目录会重复vendor和namespace。\n\n#### 加载器的实现示例：\n\n\t<?php\n\n\tfunction autoload($className)\n\t{\n\t    $className = ltrim($className, '\\\\');\n\t    $fileName  = '';\n\t    $namespace = '';\n\t    if ($lastNsPos = strrpos($className, '\\\\')) {\n\t        $namespace = substr($className, 0, $lastNsPos);\n\t        $className = substr($className, $lastNsPos + 1);\n\t        $fileName  = str_replace('\\\\', DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;\n\t    }\n\t    $fileName .= str_replace('_', DIRECTORY_SEPARATOR, $className) . '.php';\n\n\t    require $fileName;\n\t}\n\tspl_autoload_register('autoload');\n\n\n\n### PSR-1 基本代码样式\n* 标签 (PHP tags)\n\t\n\t代码必须包含在<?php ?> 或者 <?= ?>中\n\n* 编码 (Encoding)\n\n\t必须使用带BOM的UTF-8\n\n* 对象化 (Objective)\n\n\t单个PHP文件只负责一件事。定义类、trait、function、常量或者执行一系列的动作。不应该同时包含定义和执行代码。\n\n* 自动加载 (Autoloading)\n\n\t命名空间和类必须支持PSR-4标准。\n\n* 类名 (Class names)\n\n\t使用驼峰格式，首字母大写。例：CoffeeBean、TitleCase。\n\n* 常量名 (Constant names)\n\n\t必须全大写，并以下划线切分单词。例：PROJECT_NAME。\n\n* 方法命名 (Method names)\n\n\t使用驼峰格式，首字母小写。例：testCode。\n\n### PSR-2 严格代码样式\n\n* 包含PSR-1中的所有要求\n\n* 首行缩进 (Indentation)\n\n\t使用4个空格 (鄙人也是这个阵营的)\n\n* 文件和行 (Files and lines)\n\n\tPHP文件必须使用Unix格式的换行结尾，最后必须多一个空行。必须省略\"?>\"结尾标签。\n\n\t单行字符最好不超过80，最多不能大于120.\n\n\t每行最后不能有多余的空格。\n\n* PHP关键词 (Keywords)\n\n\t所有PHP的关键词使用小写。`true`、 `false`、 `null`等。\n\n* 命名空间 (Namespaces)\n\n\t每个命名空间的声明必须跟着一空行。同理在使用`use`关键词的时候后边也需要跟一空行。\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tuse Symfony\\Components\\HttpFoundation\\Request;\n\t\tuse Symfony\\Components\\HttpFoundation\\Response;\n\n\t\tclass App\n\t\t{\n\t\t\t// Class defination body\n\t\t}\n\t\n* 类 (Classes)\n\n\t定义类时使用的大括号必须在新的一行。在使用`extends`或`implements`时保证在同一行\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tclass App extends YourApp\n\t\t{\n\t\t\t// Class defination body\n\t\t}\n\n* 方法 (Methods)\n\n\t大括号同样另起一行。参数以一个逗号加空格隔开，结尾不能有多余的空格。\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tclass App extends YourApp\n\t\t{\n\t\t\tpublic function doSomething($firstParam = true, $secondParam = 2)\n\t\t\t{\n\t\t\t\t// Method defination body\n\t\t\t}\n\t\t}\n\n* 方法的可见行 (Visibility)\n\n\t使用关键词`public`、`protected`、`private`代替之前经常使用的`var`，或者变量以下划线开始来表示私有的方式。\n\n\t在定义方法为`abstract`或者`final`时，可见行关键词必须在前。\n\n\t\t<?php\n\t\tnamespace MY\\Component;\n\n\t\tclass App extends YourApp\n\t\t{\n\t\t\t// Static property with visibility\n\t\t\tpublic static $numberOfBirds = 0;\n\n\t\t\t// Method with visibility\t\n\t\t\tpublic function __construct()\n\t\t\t{\n\t\t\t\tstatic::$numberOfBirds++;\n\t\t\t}\n\t\t}\n\n* 控制结构 (Control structures)\n\t\n\t所有的控制结构类关键词必须跟一个空格。例：`if`、`elseif`、`else`、`while`、`case`、`switch`、`do`、`for`、`foreach`、`try`、`catch`。\n\n\t\t<?php\n\t\t$gorilla = new \\Animal\\Gorilla;\n\t\t$ibis = new \\Animal\\StawNeckedIbis;\n\n\t\tif ($gorilla->isAwake() === true) {\n\t\t\tdo {\n\t\t\t\t$gorilla->beatChest();\n\t\t\t} while($ibis->isAsleep() === true);\n\n\t\t\t$ibis->flyAway();\n\t\t}\n\n### PSR-3 日志接口\n\n* PSR-1和PSR-2是编码规范， PSR-3是接口定义，它定义了PHP的日志组件的一系列接口信息。\n\n* 一个PHP的日志组件应该实现了`Psr\\Log\\LoggerInterface`接口的所有方法。该接口的定义参照了系统日志协议RFC5424。具体内容可参照： [LoggerInterface.php](https://github.com/php-fig/log/blob/master/Psr/Log/LoggerInterface.php)定义。\n\n### PSR-4 自动加载器\n\n* 同PSR-0，该标准描述了如何在运行时定位及加载PHP的类、接口以及traits。可以成为PSR-0的简化升级版。移除了对`_`转换成`DIRECTORY_SEPARATOR`的支持，目录结构也不需要再在`src/`下重复vendor和namespace。\n* 比如`\\Oreilly\\ModernPHP`这个命名空间对应的物理地址`src/`。PHP就知道所有使用了这个命名空间的类、接口以及traits都在`src/`目录下边。而命名空间`\\Oreilly\\ModernPHP\\Chapter1\\`对应的物理文件应该是`src/Chapter1/`。\n\n_本文档参考了《O'Reilly Modern PHP》以及PHP官方文档_\n\n","slug":"2016-10-03-php-advance-2-psr","published":1,"updated":"2020-04-19T02:56:34.813Z","_id":"ck96ffjak001armp9dpg26orb","comments":1,"photos":[],"link":"","content":"<h3 id=\"PSR-0-自动加载的标准结构-虽然已不被推荐使用，但composer还在支持\"><a href=\"#PSR-0-自动加载的标准结构-虽然已不被推荐使用，但composer还在支持\" class=\"headerlink\" title=\"PSR-0 自动加载的标准结构 (虽然已不被推荐使用，但composer还在支持)\"></a><em>PSR-0 自动加载的标准结构 (虽然已不被推荐使用，但composer还在支持)</em></h3><h4 id=\"要点：\"><a href=\"#要点：\" class=\"headerlink\" title=\"要点：\"></a>要点：</h4><ul>\n<li><p>结构： <code>\\&lt;Vendor Name&gt;\\(&lt;Namespace&gt;\\)*&lt;Class Name&gt;</code></p>\n</li>\n<li><p>第一层级的命名为开发人员的标识</p>\n</li>\n<li><p>完整的命名空间可包含多个层级</p>\n</li>\n<li><p>在加载文件的时候，命名空间的分隔符<code>\\</code>会被<code>DIRECTORY_SEPARATOR</code>替换</p>\n</li>\n<li><p>类名中的<code>_</code>会被<code>DIRECTORY_SEPARATOR</code>替换，所以<code>_</code>无任何意义</p>\n</li>\n<li><p>在加载文件的时候，命名空间会补全<code>.php</code>后缀</p>\n</li>\n<li><p>命名空间及类命名可以大小写随意</p>\n</li>\n<li><p>示例：</p>\n<pre><code>\\Symfony\\Core\\Request =&gt; /path/to/project/lib/vendor/Symfony/Core/Request.php\n\n\\namespace\\package_name\\Class_Name =&gt; /path/to/project/lib/vendor/namespace/package_name/Class/Name.php</code></pre><ul>\n<li>需要注意的是，层级目录会重复vendor和namespace。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"加载器的实现示例：\"><a href=\"#加载器的实现示例：\" class=\"headerlink\" title=\"加载器的实现示例：\"></a>加载器的实现示例：</h4><pre><code>&lt;?php\n\nfunction autoload($className)\n{\n    $className = ltrim($className, &apos;\\\\&apos;);\n    $fileName  = &apos;&apos;;\n    $namespace = &apos;&apos;;\n    if ($lastNsPos = strrpos($className, &apos;\\\\&apos;)) {\n        $namespace = substr($className, 0, $lastNsPos);\n        $className = substr($className, $lastNsPos + 1);\n        $fileName  = str_replace(&apos;\\\\&apos;, DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;\n    }\n    $fileName .= str_replace(&apos;_&apos;, DIRECTORY_SEPARATOR, $className) . &apos;.php&apos;;\n\n    require $fileName;\n}\nspl_autoload_register(&apos;autoload&apos;);</code></pre><h3 id=\"PSR-1-基本代码样式\"><a href=\"#PSR-1-基本代码样式\" class=\"headerlink\" title=\"PSR-1 基本代码样式\"></a>PSR-1 基本代码样式</h3><ul>\n<li><p>标签 (PHP tags)</p>\n<p>  代码必须包含在<?php ?> 或者 <?= ?>中</p>\n</li>\n<li><p>编码 (Encoding)</p>\n<p>  必须使用带BOM的UTF-8</p>\n</li>\n<li><p>对象化 (Objective)</p>\n<p>  单个PHP文件只负责一件事。定义类、trait、function、常量或者执行一系列的动作。不应该同时包含定义和执行代码。</p>\n</li>\n<li><p>自动加载 (Autoloading)</p>\n<p>  命名空间和类必须支持PSR-4标准。</p>\n</li>\n<li><p>类名 (Class names)</p>\n<p>  使用驼峰格式，首字母大写。例：CoffeeBean、TitleCase。</p>\n</li>\n<li><p>常量名 (Constant names)</p>\n<p>  必须全大写，并以下划线切分单词。例：PROJECT_NAME。</p>\n</li>\n<li><p>方法命名 (Method names)</p>\n<p>  使用驼峰格式，首字母小写。例：testCode。</p>\n</li>\n</ul>\n<h3 id=\"PSR-2-严格代码样式\"><a href=\"#PSR-2-严格代码样式\" class=\"headerlink\" title=\"PSR-2 严格代码样式\"></a>PSR-2 严格代码样式</h3><ul>\n<li><p>包含PSR-1中的所有要求</p>\n</li>\n<li><p>首行缩进 (Indentation)</p>\n<p>  使用4个空格 (鄙人也是这个阵营的)</p>\n</li>\n<li><p>文件和行 (Files and lines)</p>\n<p>  PHP文件必须使用Unix格式的换行结尾，最后必须多一个空行。必须省略”?&gt;”结尾标签。</p>\n<p>  单行字符最好不超过80，最多不能大于120.</p>\n<p>  每行最后不能有多余的空格。</p>\n</li>\n<li><p>PHP关键词 (Keywords)</p>\n<p>  所有PHP的关键词使用小写。<code>true</code>、 <code>false</code>、 <code>null</code>等。</p>\n</li>\n<li><p>命名空间 (Namespaces)</p>\n<p>  每个命名空间的声明必须跟着一空行。同理在使用<code>use</code>关键词的时候后边也需要跟一空行。</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nuse Symfony\\Components\\HttpFoundation\\Request;\nuse Symfony\\Components\\HttpFoundation\\Response;\n\nclass App\n{\n    // Class defination body\n}</code></pre></li>\n<li><p>类 (Classes)</p>\n<p>  定义类时使用的大括号必须在新的一行。在使用<code>extends</code>或<code>implements</code>时保证在同一行</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nclass App extends YourApp\n{\n    // Class defination body\n}</code></pre></li>\n<li><p>方法 (Methods)</p>\n<p>  大括号同样另起一行。参数以一个逗号加空格隔开，结尾不能有多余的空格。</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nclass App extends YourApp\n{\n    public function doSomething($firstParam = true, $secondParam = 2)\n    {\n        // Method defination body\n    }\n}</code></pre></li>\n<li><p>方法的可见行 (Visibility)</p>\n<p>  使用关键词<code>public</code>、<code>protected</code>、<code>private</code>代替之前经常使用的<code>var</code>，或者变量以下划线开始来表示私有的方式。</p>\n<p>  在定义方法为<code>abstract</code>或者<code>final</code>时，可见行关键词必须在前。</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nclass App extends YourApp\n{\n    // Static property with visibility\n    public static $numberOfBirds = 0;\n\n    // Method with visibility    \n    public function __construct()\n    {\n        static::$numberOfBirds++;\n    }\n}</code></pre></li>\n<li><p>控制结构 (Control structures)</p>\n<p>  所有的控制结构类关键词必须跟一个空格。例：<code>if</code>、<code>elseif</code>、<code>else</code>、<code>while</code>、<code>case</code>、<code>switch</code>、<code>do</code>、<code>for</code>、<code>foreach</code>、<code>try</code>、<code>catch</code>。</p>\n<pre><code>&lt;?php\n$gorilla = new \\Animal\\Gorilla;\n$ibis = new \\Animal\\StawNeckedIbis;\n\nif ($gorilla-&gt;isAwake() === true) {\n    do {\n        $gorilla-&gt;beatChest();\n    } while($ibis-&gt;isAsleep() === true);\n\n    $ibis-&gt;flyAway();\n}</code></pre></li>\n</ul>\n<h3 id=\"PSR-3-日志接口\"><a href=\"#PSR-3-日志接口\" class=\"headerlink\" title=\"PSR-3 日志接口\"></a>PSR-3 日志接口</h3><ul>\n<li><p>PSR-1和PSR-2是编码规范， PSR-3是接口定义，它定义了PHP的日志组件的一系列接口信息。</p>\n</li>\n<li><p>一个PHP的日志组件应该实现了<code>Psr\\Log\\LoggerInterface</code>接口的所有方法。该接口的定义参照了系统日志协议RFC5424。具体内容可参照： <a href=\"https://github.com/php-fig/log/blob/master/Psr/Log/LoggerInterface.php\" target=\"_blank\" rel=\"noopener\">LoggerInterface.php</a>定义。</p>\n</li>\n</ul>\n<h3 id=\"PSR-4-自动加载器\"><a href=\"#PSR-4-自动加载器\" class=\"headerlink\" title=\"PSR-4 自动加载器\"></a>PSR-4 自动加载器</h3><ul>\n<li>同PSR-0，该标准描述了如何在运行时定位及加载PHP的类、接口以及traits。可以成为PSR-0的简化升级版。移除了对<code>_</code>转换成<code>DIRECTORY_SEPARATOR</code>的支持，目录结构也不需要再在<code>src/</code>下重复vendor和namespace。</li>\n<li>比如<code>\\Oreilly\\ModernPHP</code>这个命名空间对应的物理地址<code>src/</code>。PHP就知道所有使用了这个命名空间的类、接口以及traits都在<code>src/</code>目录下边。而命名空间<code>\\Oreilly\\ModernPHP\\Chapter1\\</code>对应的物理文件应该是<code>src/Chapter1/</code>。</li>\n</ul>\n<p><em>本文档参考了《O’Reilly Modern PHP》以及PHP官方文档</em></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"PSR-0-自动加载的标准结构-虽然已不被推荐使用，但composer还在支持\"><a href=\"#PSR-0-自动加载的标准结构-虽然已不被推荐使用，但composer还在支持\" class=\"headerlink\" title=\"PSR-0 自动加载的标准结构 (虽然已不被推荐使用，但composer还在支持)\"></a><em>PSR-0 自动加载的标准结构 (虽然已不被推荐使用，但composer还在支持)</em></h3><h4 id=\"要点：\"><a href=\"#要点：\" class=\"headerlink\" title=\"要点：\"></a>要点：</h4><ul>\n<li><p>结构： <code>\\&lt;Vendor Name&gt;\\(&lt;Namespace&gt;\\)*&lt;Class Name&gt;</code></p>\n</li>\n<li><p>第一层级的命名为开发人员的标识</p>\n</li>\n<li><p>完整的命名空间可包含多个层级</p>\n</li>\n<li><p>在加载文件的时候，命名空间的分隔符<code>\\</code>会被<code>DIRECTORY_SEPARATOR</code>替换</p>\n</li>\n<li><p>类名中的<code>_</code>会被<code>DIRECTORY_SEPARATOR</code>替换，所以<code>_</code>无任何意义</p>\n</li>\n<li><p>在加载文件的时候，命名空间会补全<code>.php</code>后缀</p>\n</li>\n<li><p>命名空间及类命名可以大小写随意</p>\n</li>\n<li><p>示例：</p>\n<pre><code>\\Symfony\\Core\\Request =&gt; /path/to/project/lib/vendor/Symfony/Core/Request.php\n\n\\namespace\\package_name\\Class_Name =&gt; /path/to/project/lib/vendor/namespace/package_name/Class/Name.php</code></pre><ul>\n<li>需要注意的是，层级目录会重复vendor和namespace。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"加载器的实现示例：\"><a href=\"#加载器的实现示例：\" class=\"headerlink\" title=\"加载器的实现示例：\"></a>加载器的实现示例：</h4><pre><code>&lt;?php\n\nfunction autoload($className)\n{\n    $className = ltrim($className, &apos;\\\\&apos;);\n    $fileName  = &apos;&apos;;\n    $namespace = &apos;&apos;;\n    if ($lastNsPos = strrpos($className, &apos;\\\\&apos;)) {\n        $namespace = substr($className, 0, $lastNsPos);\n        $className = substr($className, $lastNsPos + 1);\n        $fileName  = str_replace(&apos;\\\\&apos;, DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;\n    }\n    $fileName .= str_replace(&apos;_&apos;, DIRECTORY_SEPARATOR, $className) . &apos;.php&apos;;\n\n    require $fileName;\n}\nspl_autoload_register(&apos;autoload&apos;);</code></pre><h3 id=\"PSR-1-基本代码样式\"><a href=\"#PSR-1-基本代码样式\" class=\"headerlink\" title=\"PSR-1 基本代码样式\"></a>PSR-1 基本代码样式</h3><ul>\n<li><p>标签 (PHP tags)</p>\n<p>  代码必须包含在<?php ?> 或者 <?= ?>中</p>\n</li>\n<li><p>编码 (Encoding)</p>\n<p>  必须使用带BOM的UTF-8</p>\n</li>\n<li><p>对象化 (Objective)</p>\n<p>  单个PHP文件只负责一件事。定义类、trait、function、常量或者执行一系列的动作。不应该同时包含定义和执行代码。</p>\n</li>\n<li><p>自动加载 (Autoloading)</p>\n<p>  命名空间和类必须支持PSR-4标准。</p>\n</li>\n<li><p>类名 (Class names)</p>\n<p>  使用驼峰格式，首字母大写。例：CoffeeBean、TitleCase。</p>\n</li>\n<li><p>常量名 (Constant names)</p>\n<p>  必须全大写，并以下划线切分单词。例：PROJECT_NAME。</p>\n</li>\n<li><p>方法命名 (Method names)</p>\n<p>  使用驼峰格式，首字母小写。例：testCode。</p>\n</li>\n</ul>\n<h3 id=\"PSR-2-严格代码样式\"><a href=\"#PSR-2-严格代码样式\" class=\"headerlink\" title=\"PSR-2 严格代码样式\"></a>PSR-2 严格代码样式</h3><ul>\n<li><p>包含PSR-1中的所有要求</p>\n</li>\n<li><p>首行缩进 (Indentation)</p>\n<p>  使用4个空格 (鄙人也是这个阵营的)</p>\n</li>\n<li><p>文件和行 (Files and lines)</p>\n<p>  PHP文件必须使用Unix格式的换行结尾，最后必须多一个空行。必须省略”?&gt;”结尾标签。</p>\n<p>  单行字符最好不超过80，最多不能大于120.</p>\n<p>  每行最后不能有多余的空格。</p>\n</li>\n<li><p>PHP关键词 (Keywords)</p>\n<p>  所有PHP的关键词使用小写。<code>true</code>、 <code>false</code>、 <code>null</code>等。</p>\n</li>\n<li><p>命名空间 (Namespaces)</p>\n<p>  每个命名空间的声明必须跟着一空行。同理在使用<code>use</code>关键词的时候后边也需要跟一空行。</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nuse Symfony\\Components\\HttpFoundation\\Request;\nuse Symfony\\Components\\HttpFoundation\\Response;\n\nclass App\n{\n    // Class defination body\n}</code></pre></li>\n<li><p>类 (Classes)</p>\n<p>  定义类时使用的大括号必须在新的一行。在使用<code>extends</code>或<code>implements</code>时保证在同一行</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nclass App extends YourApp\n{\n    // Class defination body\n}</code></pre></li>\n<li><p>方法 (Methods)</p>\n<p>  大括号同样另起一行。参数以一个逗号加空格隔开，结尾不能有多余的空格。</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nclass App extends YourApp\n{\n    public function doSomething($firstParam = true, $secondParam = 2)\n    {\n        // Method defination body\n    }\n}</code></pre></li>\n<li><p>方法的可见行 (Visibility)</p>\n<p>  使用关键词<code>public</code>、<code>protected</code>、<code>private</code>代替之前经常使用的<code>var</code>，或者变量以下划线开始来表示私有的方式。</p>\n<p>  在定义方法为<code>abstract</code>或者<code>final</code>时，可见行关键词必须在前。</p>\n<pre><code>&lt;?php\nnamespace MY\\Component;\n\nclass App extends YourApp\n{\n    // Static property with visibility\n    public static $numberOfBirds = 0;\n\n    // Method with visibility    \n    public function __construct()\n    {\n        static::$numberOfBirds++;\n    }\n}</code></pre></li>\n<li><p>控制结构 (Control structures)</p>\n<p>  所有的控制结构类关键词必须跟一个空格。例：<code>if</code>、<code>elseif</code>、<code>else</code>、<code>while</code>、<code>case</code>、<code>switch</code>、<code>do</code>、<code>for</code>、<code>foreach</code>、<code>try</code>、<code>catch</code>。</p>\n<pre><code>&lt;?php\n$gorilla = new \\Animal\\Gorilla;\n$ibis = new \\Animal\\StawNeckedIbis;\n\nif ($gorilla-&gt;isAwake() === true) {\n    do {\n        $gorilla-&gt;beatChest();\n    } while($ibis-&gt;isAsleep() === true);\n\n    $ibis-&gt;flyAway();\n}</code></pre></li>\n</ul>\n<h3 id=\"PSR-3-日志接口\"><a href=\"#PSR-3-日志接口\" class=\"headerlink\" title=\"PSR-3 日志接口\"></a>PSR-3 日志接口</h3><ul>\n<li><p>PSR-1和PSR-2是编码规范， PSR-3是接口定义，它定义了PHP的日志组件的一系列接口信息。</p>\n</li>\n<li><p>一个PHP的日志组件应该实现了<code>Psr\\Log\\LoggerInterface</code>接口的所有方法。该接口的定义参照了系统日志协议RFC5424。具体内容可参照： <a href=\"https://github.com/php-fig/log/blob/master/Psr/Log/LoggerInterface.php\" target=\"_blank\" rel=\"noopener\">LoggerInterface.php</a>定义。</p>\n</li>\n</ul>\n<h3 id=\"PSR-4-自动加载器\"><a href=\"#PSR-4-自动加载器\" class=\"headerlink\" title=\"PSR-4 自动加载器\"></a>PSR-4 自动加载器</h3><ul>\n<li>同PSR-0，该标准描述了如何在运行时定位及加载PHP的类、接口以及traits。可以成为PSR-0的简化升级版。移除了对<code>_</code>转换成<code>DIRECTORY_SEPARATOR</code>的支持，目录结构也不需要再在<code>src/</code>下重复vendor和namespace。</li>\n<li>比如<code>\\Oreilly\\ModernPHP</code>这个命名空间对应的物理地址<code>src/</code>。PHP就知道所有使用了这个命名空间的类、接口以及traits都在<code>src/</code>目录下边。而命名空间<code>\\Oreilly\\ModernPHP\\Chapter1\\</code>对应的物理文件应该是<code>src/Chapter1/</code>。</li>\n</ul>\n<p><em>本文档参考了《O’Reilly Modern PHP》以及PHP官方文档</em></p>\n"},{"layout":"post","title":"常规用法 - PHP进阶 (1)","date":"2016-08-01T04:00:00.000Z","description":"PHP的一些知识梳理","keywords":"Modern PHP, PHP, Namespace, traits, closure, 命名空间, 闭包, Hiphop","_content":"\n### 命名空间 Namespace (PHP 5.3+)\n\n沙盒机制。虚拟的层级关系，更好的隔离不同的组建。PS：以下仅为推荐用法。\n\n* 声明、引用、别名 (Declear, Import, Alias)\n\n* 声明：\n\n\t\t<?php \n\t\t// 必须在首行，推荐保持每个命名空间一行\n\t\tnamespace Symfony\\Component\\HttpFoundation;\n\n* 引用 & 别名\n\t// 推荐保持每个引用一行\n\t\n### Class\n\n\t<?php\n\t// 引用\n\tuse Symfony\\Component\\HttpFoundation\\Response;\n\n\t$response = new Response('Oops', 400);\n\t$response->send();\n\n\t// 别名\n\tuse Symfony\\Component\\HttpFoundation\\Response as Res;\n\n\t$r = new Res('Oops', 400);\n\t$r->send();\n\n### Function (PHP 5.6+)\n\n\t<?php \n\t// 引用\n\tuse function My\\Full\\functionName;\n\n\t// 别名\n\tuse function My\\Full\\functionName as func;\n\n### Constant\n\n\t// 引用\n\tuse const My\\Full\\CONSTANT;\n\n### PHP 7+ code\n\n\tuse some\\namespace\\{ClassA, ClassB, ClassC as C};\n\tuse function some\\namespace\\{fn_a, fn_b, fn_c};\n\tuse const some\\namespace\\{ConstA, ConstB, ConstC};\n\n### 全局命名空间\n\t\n* 引用时不加入命名空间，程序默认为与当前命名空间相同\n* 没有命名空间的程序，默认在global下，例如Exception。使用时需要在前边加上\"/\"：\n\t\n\t\t<?php\n\t\tnamespace My\\App;\n\n\t\tclass Foo\n\t\t{\n\t\t\tpublic function doSomething()\n\t\t\t{\n\t\t\t\t$exception = new \\Exception();\n\t\t\t}\n\t\t}\n\n### 代码设计接口化\n* 面向对象思维中的典型应用，在开发组件时尽可能的使用接口来统一功能，能为复用者或者后继开发人员节省非常多的时间\n\n\t\n\t\t// 实例来自PHP官方文档\n\t\tinterface iTemplate\n\t\t{\n\t\t    public function setVariable($name, $var);\n\t\t    public function getHtml($template);\n\t\t}\n\n\t\t// Implement the interface\n\t\tclass Template implements iTemplate\n\t\t{\n\t\t    private $vars = array();\n\t\t  \n\t\t    public function setVariable($name, $var)\n\t\t    {\n\t\t        $this->vars[$name] = $var;\n\t\t    }\n\t\t  \n\t\t    public function getHtml($template)\n\t\t    {\n\t\t        foreach($this->vars as $name => $value) {\n\t\t            $template = str_replace('{' . $name . '}', $value, $template);\n\t\t        }\n\t\t \n\t\t        return $template;\n\t\t    }\n\t\t}\n\n### Traits (PHP 5.4+) \n* 大部分编程语言都是采用继承(extend)来实现类的扩展，Traits存在的目的是注入代码片段。\n* 简单的理解就是一段需要复用的代码，我们不再复制粘贴到各个文件当中，而仅仅是使用traits的方式来引入。\n* 其实include好像也可以实现同样的功能？\n\n\t\t<?php\n\t\ttrait SayWorld {\n\t\t    public function sayHello() {\n\t\t        echo 'Hello World!';\n\t\t    }\n\t\t}\n\n\t\tclass MyHelloWorld {\n\t\t    use SayWorld;\n\t\t}\n\n### 生成器 (Generator) (PHP 5.5+)\n* 不同于JS中的Generator，PHP更单纯的是个迭代器，封装了自己的状态。目的是节省性能以及降低代码复杂度。\n\t\n\t\t<?php \n\t\t// 如下代码在执行的时候会依次输出三个值\n\t\tfunction myGenerator()\n\t\t{\n\t\t\tyield 'value1';\n\t\t\tyield 'value2';\n\t\t\tyield 'value3';\n\t\t}\n\n* 常与foreach循环一起连用。使用场景如逐行读取文件，重复的计算等\n\t\t\n\t\t<?php\n\t\tfunction getLines($file) {\n\t\t    $f = fopen($file, 'r');\n\t\t    try {\n\t\t        while ($line = fgets($f)) {\n\t\t            yield $line;\n\t\t        }\n\t\t    } finally {\n\t\t        fclose($f);\n\t\t    }\n\t\t}\n\n\t\tforeach (getLines(\"file.txt\") as $n => $line) {\n\t\t    if ($n > 5) break;\n\t\t    echo $line;\n\t\t}\n\n### 闭包(Closures) (PHP 5.3+)\n* 通常会用在需要回调函数时，比如array_map()和preg_replace_callback()。\n\n\t\t<?php\n\t\tfunction cube($n)\n\t\t{\n\t\t    return($n * $n * $n);\n\t\t}\n\n\t\t$a = array(1, 2, 3, 4, 5);\n\t\t$b = array_map(\"cube\", $a);\n\t\tprint_r($b);\n\n* 另一种情况是动态追加函数或变量到当前函数/类中。\n\n\t* 低级用法\n\n\t\t\t<?php\n\t\t\tfunction enclosePerson($name) {\n\t\t\t    return function ($doCommand) use ($name) {\n\t\t\t        return sprintf('%s, %s', $name, $doCommand);\n\t\t\t    };\n\t\t\t}\n\t\t\t// 在闭包函数中封装了字符串'Clay'\n\t\t\t$clay = enclosePerson('Clay');\n\t\t\techo $clay('get me sweet tea!');\n\n\t* 高级用法\n\t\t\n\t\t\t<?php\n\t\t\tclass App\n\t\t\t{\n\t\t\t    protected $routes = [];\n\t\t\t    protected $responseStatus = '200 OK';\n\t\t\t    protected $responseContentType = 'text/html';\n\t\t\t    protected $responseBody = 'Hello world';\n\t\t\t    public function addRoute($routePath, $routeCallback)\n\t\t\t    {\n\t\t\t    \t// bindTo 将routeCallback函数追加给当前的app对象，然后将其赋值给$routePath键\n\t\t\t    \t// __CLASS__ 为当前类名，并包含当前声明的命名空间，使用在此处，意为$routeCallback的作用域在当前类，\n\t\t\t    \t// 想了解更多作用域相关信息请移步：http://php.net/manual/zh/closure.bindto.php#119410\n\t\t\t        $this->routes[$routePath] = $routeCallback->bindTo($this, __CLASS__);\n\t\t\t    }\n\t\t\t    public function dispatch($currentPath)\n\t\t\t    {\n\t\t\t        foreach ($this->routes as $routePath => $callback) {\n\t\t\t            if ($routePath === $currentPath) {\n\t\t\t            \t// 该函数是在addRoute函数执行时被追加\n\t\t\t            \t// 执行了回调函数后，赋值了responseContentType和responseBody\n\t\t\t                $callback();\n\t\t\t            }\n\t\t\t        }\n\t\t\t        header('HTTP/1.1 ' . $this->responseStatus);\n\t\t\t        header('Content-type: ' . $this->responseContentType);\n\t\t\t        header('Content-length: ' . mb_strlen($this->responseBody));\n\t\t\t        echo $this->responseBody;\n\t\t\t    }\n\t\t\t}\n\t\t\t$app = new App();\n\t\t\t$app->addRoute('/users/josh', function () {\n\t\t\t    $this->responseContentType = 'application/json;charset=utf8';\n\t\t\t    $this->responseBody = '{\"name\": \"Josh\"}';\n\t\t\t});\n\t\t\t$app->dispatch('/users/josh');\n\t\t\t\n### Zend OPcache (PHP 5.5+)\n* 类似于APC、XCache等第三方cache扩展，预编译PHP代码为二进制程序，缓存在内存中。\n\n\n_本文档参考了《O'Reilly Modern PHP》以及PHP官方文档_\n\n","source":"_posts/2016-08-01-php-advance-1-useage.md","raw":"---\nlayout: post\ntitle: 常规用法 - PHP进阶 (1)\ncategory: 编程学习\ntags: [PHP]\ndate: 2016-08-01\ndescription: PHP的一些知识梳理\nkeywords: Modern PHP, PHP, Namespace, traits, closure, 命名空间, 闭包, Hiphop\n---\n\n### 命名空间 Namespace (PHP 5.3+)\n\n沙盒机制。虚拟的层级关系，更好的隔离不同的组建。PS：以下仅为推荐用法。\n\n* 声明、引用、别名 (Declear, Import, Alias)\n\n* 声明：\n\n\t\t<?php \n\t\t// 必须在首行，推荐保持每个命名空间一行\n\t\tnamespace Symfony\\Component\\HttpFoundation;\n\n* 引用 & 别名\n\t// 推荐保持每个引用一行\n\t\n### Class\n\n\t<?php\n\t// 引用\n\tuse Symfony\\Component\\HttpFoundation\\Response;\n\n\t$response = new Response('Oops', 400);\n\t$response->send();\n\n\t// 别名\n\tuse Symfony\\Component\\HttpFoundation\\Response as Res;\n\n\t$r = new Res('Oops', 400);\n\t$r->send();\n\n### Function (PHP 5.6+)\n\n\t<?php \n\t// 引用\n\tuse function My\\Full\\functionName;\n\n\t// 别名\n\tuse function My\\Full\\functionName as func;\n\n### Constant\n\n\t// 引用\n\tuse const My\\Full\\CONSTANT;\n\n### PHP 7+ code\n\n\tuse some\\namespace\\{ClassA, ClassB, ClassC as C};\n\tuse function some\\namespace\\{fn_a, fn_b, fn_c};\n\tuse const some\\namespace\\{ConstA, ConstB, ConstC};\n\n### 全局命名空间\n\t\n* 引用时不加入命名空间，程序默认为与当前命名空间相同\n* 没有命名空间的程序，默认在global下，例如Exception。使用时需要在前边加上\"/\"：\n\t\n\t\t<?php\n\t\tnamespace My\\App;\n\n\t\tclass Foo\n\t\t{\n\t\t\tpublic function doSomething()\n\t\t\t{\n\t\t\t\t$exception = new \\Exception();\n\t\t\t}\n\t\t}\n\n### 代码设计接口化\n* 面向对象思维中的典型应用，在开发组件时尽可能的使用接口来统一功能，能为复用者或者后继开发人员节省非常多的时间\n\n\t\n\t\t// 实例来自PHP官方文档\n\t\tinterface iTemplate\n\t\t{\n\t\t    public function setVariable($name, $var);\n\t\t    public function getHtml($template);\n\t\t}\n\n\t\t// Implement the interface\n\t\tclass Template implements iTemplate\n\t\t{\n\t\t    private $vars = array();\n\t\t  \n\t\t    public function setVariable($name, $var)\n\t\t    {\n\t\t        $this->vars[$name] = $var;\n\t\t    }\n\t\t  \n\t\t    public function getHtml($template)\n\t\t    {\n\t\t        foreach($this->vars as $name => $value) {\n\t\t            $template = str_replace('{' . $name . '}', $value, $template);\n\t\t        }\n\t\t \n\t\t        return $template;\n\t\t    }\n\t\t}\n\n### Traits (PHP 5.4+) \n* 大部分编程语言都是采用继承(extend)来实现类的扩展，Traits存在的目的是注入代码片段。\n* 简单的理解就是一段需要复用的代码，我们不再复制粘贴到各个文件当中，而仅仅是使用traits的方式来引入。\n* 其实include好像也可以实现同样的功能？\n\n\t\t<?php\n\t\ttrait SayWorld {\n\t\t    public function sayHello() {\n\t\t        echo 'Hello World!';\n\t\t    }\n\t\t}\n\n\t\tclass MyHelloWorld {\n\t\t    use SayWorld;\n\t\t}\n\n### 生成器 (Generator) (PHP 5.5+)\n* 不同于JS中的Generator，PHP更单纯的是个迭代器，封装了自己的状态。目的是节省性能以及降低代码复杂度。\n\t\n\t\t<?php \n\t\t// 如下代码在执行的时候会依次输出三个值\n\t\tfunction myGenerator()\n\t\t{\n\t\t\tyield 'value1';\n\t\t\tyield 'value2';\n\t\t\tyield 'value3';\n\t\t}\n\n* 常与foreach循环一起连用。使用场景如逐行读取文件，重复的计算等\n\t\t\n\t\t<?php\n\t\tfunction getLines($file) {\n\t\t    $f = fopen($file, 'r');\n\t\t    try {\n\t\t        while ($line = fgets($f)) {\n\t\t            yield $line;\n\t\t        }\n\t\t    } finally {\n\t\t        fclose($f);\n\t\t    }\n\t\t}\n\n\t\tforeach (getLines(\"file.txt\") as $n => $line) {\n\t\t    if ($n > 5) break;\n\t\t    echo $line;\n\t\t}\n\n### 闭包(Closures) (PHP 5.3+)\n* 通常会用在需要回调函数时，比如array_map()和preg_replace_callback()。\n\n\t\t<?php\n\t\tfunction cube($n)\n\t\t{\n\t\t    return($n * $n * $n);\n\t\t}\n\n\t\t$a = array(1, 2, 3, 4, 5);\n\t\t$b = array_map(\"cube\", $a);\n\t\tprint_r($b);\n\n* 另一种情况是动态追加函数或变量到当前函数/类中。\n\n\t* 低级用法\n\n\t\t\t<?php\n\t\t\tfunction enclosePerson($name) {\n\t\t\t    return function ($doCommand) use ($name) {\n\t\t\t        return sprintf('%s, %s', $name, $doCommand);\n\t\t\t    };\n\t\t\t}\n\t\t\t// 在闭包函数中封装了字符串'Clay'\n\t\t\t$clay = enclosePerson('Clay');\n\t\t\techo $clay('get me sweet tea!');\n\n\t* 高级用法\n\t\t\n\t\t\t<?php\n\t\t\tclass App\n\t\t\t{\n\t\t\t    protected $routes = [];\n\t\t\t    protected $responseStatus = '200 OK';\n\t\t\t    protected $responseContentType = 'text/html';\n\t\t\t    protected $responseBody = 'Hello world';\n\t\t\t    public function addRoute($routePath, $routeCallback)\n\t\t\t    {\n\t\t\t    \t// bindTo 将routeCallback函数追加给当前的app对象，然后将其赋值给$routePath键\n\t\t\t    \t// __CLASS__ 为当前类名，并包含当前声明的命名空间，使用在此处，意为$routeCallback的作用域在当前类，\n\t\t\t    \t// 想了解更多作用域相关信息请移步：http://php.net/manual/zh/closure.bindto.php#119410\n\t\t\t        $this->routes[$routePath] = $routeCallback->bindTo($this, __CLASS__);\n\t\t\t    }\n\t\t\t    public function dispatch($currentPath)\n\t\t\t    {\n\t\t\t        foreach ($this->routes as $routePath => $callback) {\n\t\t\t            if ($routePath === $currentPath) {\n\t\t\t            \t// 该函数是在addRoute函数执行时被追加\n\t\t\t            \t// 执行了回调函数后，赋值了responseContentType和responseBody\n\t\t\t                $callback();\n\t\t\t            }\n\t\t\t        }\n\t\t\t        header('HTTP/1.1 ' . $this->responseStatus);\n\t\t\t        header('Content-type: ' . $this->responseContentType);\n\t\t\t        header('Content-length: ' . mb_strlen($this->responseBody));\n\t\t\t        echo $this->responseBody;\n\t\t\t    }\n\t\t\t}\n\t\t\t$app = new App();\n\t\t\t$app->addRoute('/users/josh', function () {\n\t\t\t    $this->responseContentType = 'application/json;charset=utf8';\n\t\t\t    $this->responseBody = '{\"name\": \"Josh\"}';\n\t\t\t});\n\t\t\t$app->dispatch('/users/josh');\n\t\t\t\n### Zend OPcache (PHP 5.5+)\n* 类似于APC、XCache等第三方cache扩展，预编译PHP代码为二进制程序，缓存在内存中。\n\n\n_本文档参考了《O'Reilly Modern PHP》以及PHP官方文档_\n\n","slug":"2016-08-01-php-advance-1-useage","published":1,"updated":"2020-04-19T02:56:40.554Z","_id":"ck96ffjam001drmp9bfvyaut3","comments":1,"photos":[],"link":"","content":"<h3 id=\"命名空间-Namespace-PHP-5-3\"><a href=\"#命名空间-Namespace-PHP-5-3\" class=\"headerlink\" title=\"命名空间 Namespace (PHP 5.3+)\"></a>命名空间 Namespace (PHP 5.3+)</h3><p>沙盒机制。虚拟的层级关系，更好的隔离不同的组建。PS：以下仅为推荐用法。</p>\n<ul>\n<li><p>声明、引用、别名 (Declear, Import, Alias)</p>\n</li>\n<li><p>声明：</p>\n<pre><code>&lt;?php \n// 必须在首行，推荐保持每个命名空间一行\nnamespace Symfony\\Component\\HttpFoundation;</code></pre></li>\n<li><p>引用 &amp; 别名<br>  // 推荐保持每个引用一行</p>\n</li>\n</ul>\n<h3 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h3><pre><code>&lt;?php\n// 引用\nuse Symfony\\Component\\HttpFoundation\\Response;\n\n$response = new Response(&apos;Oops&apos;, 400);\n$response-&gt;send();\n\n// 别名\nuse Symfony\\Component\\HttpFoundation\\Response as Res;\n\n$r = new Res(&apos;Oops&apos;, 400);\n$r-&gt;send();</code></pre><h3 id=\"Function-PHP-5-6\"><a href=\"#Function-PHP-5-6\" class=\"headerlink\" title=\"Function (PHP 5.6+)\"></a>Function (PHP 5.6+)</h3><pre><code>&lt;?php \n// 引用\nuse function My\\Full\\functionName;\n\n// 别名\nuse function My\\Full\\functionName as func;</code></pre><h3 id=\"Constant\"><a href=\"#Constant\" class=\"headerlink\" title=\"Constant\"></a>Constant</h3><pre><code>// 引用\nuse const My\\Full\\CONSTANT;</code></pre><h3 id=\"PHP-7-code\"><a href=\"#PHP-7-code\" class=\"headerlink\" title=\"PHP 7+ code\"></a>PHP 7+ code</h3><pre><code>use some\\namespace\\{ClassA, ClassB, ClassC as C};\nuse function some\\namespace\\{fn_a, fn_b, fn_c};\nuse const some\\namespace\\{ConstA, ConstB, ConstC};</code></pre><h3 id=\"全局命名空间\"><a href=\"#全局命名空间\" class=\"headerlink\" title=\"全局命名空间\"></a>全局命名空间</h3><ul>\n<li><p>引用时不加入命名空间，程序默认为与当前命名空间相同</p>\n</li>\n<li><p>没有命名空间的程序，默认在global下，例如Exception。使用时需要在前边加上”/“：</p>\n<pre><code>&lt;?php\nnamespace My\\App;\n\nclass Foo\n{\n    public function doSomething()\n    {\n        $exception = new \\Exception();\n    }\n}</code></pre></li>\n</ul>\n<h3 id=\"代码设计接口化\"><a href=\"#代码设计接口化\" class=\"headerlink\" title=\"代码设计接口化\"></a>代码设计接口化</h3><ul>\n<li>面向对象思维中的典型应用，在开发组件时尽可能的使用接口来统一功能，能为复用者或者后继开发人员节省非常多的时间</li>\n</ul>\n<pre><code>// 实例来自PHP官方文档\ninterface iTemplate\n{\n    public function setVariable($name, $var);\n    public function getHtml($template);\n}\n\n// Implement the interface\nclass Template implements iTemplate\n{\n    private $vars = array();\n\n    public function setVariable($name, $var)\n    {\n        $this-&gt;vars[$name] = $var;\n    }\n\n    public function getHtml($template)\n    {\n        foreach($this-&gt;vars as $name =&gt; $value) {\n            $template = str_replace(&apos;{&apos; . $name . &apos;}&apos;, $value, $template);\n        }\n\n        return $template;\n    }\n}</code></pre><h3 id=\"Traits-PHP-5-4\"><a href=\"#Traits-PHP-5-4\" class=\"headerlink\" title=\"Traits (PHP 5.4+)\"></a>Traits (PHP 5.4+)</h3><ul>\n<li><p>大部分编程语言都是采用继承(extend)来实现类的扩展，Traits存在的目的是注入代码片段。</p>\n</li>\n<li><p>简单的理解就是一段需要复用的代码，我们不再复制粘贴到各个文件当中，而仅仅是使用traits的方式来引入。</p>\n</li>\n<li><p>其实include好像也可以实现同样的功能？</p>\n<pre><code>&lt;?php\ntrait SayWorld {\n    public function sayHello() {\n        echo &apos;Hello World!&apos;;\n    }\n}\n\nclass MyHelloWorld {\n    use SayWorld;\n}</code></pre></li>\n</ul>\n<h3 id=\"生成器-Generator-PHP-5-5\"><a href=\"#生成器-Generator-PHP-5-5\" class=\"headerlink\" title=\"生成器 (Generator) (PHP 5.5+)\"></a>生成器 (Generator) (PHP 5.5+)</h3><ul>\n<li><p>不同于JS中的Generator，PHP更单纯的是个迭代器，封装了自己的状态。目的是节省性能以及降低代码复杂度。</p>\n<pre><code>&lt;?php \n// 如下代码在执行的时候会依次输出三个值\nfunction myGenerator()\n{\n    yield &apos;value1&apos;;\n    yield &apos;value2&apos;;\n    yield &apos;value3&apos;;\n}</code></pre></li>\n<li><p>常与foreach循环一起连用。使用场景如逐行读取文件，重复的计算等</p>\n<pre><code>&lt;?php\nfunction getLines($file) {\n    $f = fopen($file, &apos;r&apos;);\n    try {\n        while ($line = fgets($f)) {\n            yield $line;\n        }\n    } finally {\n        fclose($f);\n    }\n}\n\nforeach (getLines(&quot;file.txt&quot;) as $n =&gt; $line) {\n    if ($n &gt; 5) break;\n    echo $line;\n}</code></pre></li>\n</ul>\n<h3 id=\"闭包-Closures-PHP-5-3\"><a href=\"#闭包-Closures-PHP-5-3\" class=\"headerlink\" title=\"闭包(Closures) (PHP 5.3+)\"></a>闭包(Closures) (PHP 5.3+)</h3><ul>\n<li><p>通常会用在需要回调函数时，比如array_map()和preg_replace_callback()。</p>\n<pre><code>&lt;?php\nfunction cube($n)\n{\n    return($n * $n * $n);\n}\n\n$a = array(1, 2, 3, 4, 5);\n$b = array_map(&quot;cube&quot;, $a);\nprint_r($b);</code></pre></li>\n<li><p>另一种情况是动态追加函数或变量到当前函数/类中。</p>\n<ul>\n<li><p>低级用法</p>\n<pre><code>&lt;?php\nfunction enclosePerson($name) {\n    return function ($doCommand) use ($name) {\n        return sprintf(&apos;%s, %s&apos;, $name, $doCommand);\n    };\n}\n// 在闭包函数中封装了字符串&apos;Clay&apos;\n$clay = enclosePerson(&apos;Clay&apos;);\necho $clay(&apos;get me sweet tea!&apos;);</code></pre></li>\n<li><p>高级用法</p>\n<pre><code>&lt;?php\nclass App\n{\n    protected $routes = [];\n    protected $responseStatus = &apos;200 OK&apos;;\n    protected $responseContentType = &apos;text/html&apos;;\n    protected $responseBody = &apos;Hello world&apos;;\n    public function addRoute($routePath, $routeCallback)\n    {\n        // bindTo 将routeCallback函数追加给当前的app对象，然后将其赋值给$routePath键\n        // __CLASS__ 为当前类名，并包含当前声明的命名空间，使用在此处，意为$routeCallback的作用域在当前类，\n        // 想了解更多作用域相关信息请移步：http://php.net/manual/zh/closure.bindto.php#119410\n        $this-&gt;routes[$routePath] = $routeCallback-&gt;bindTo($this, __CLASS__);\n    }\n    public function dispatch($currentPath)\n    {\n        foreach ($this-&gt;routes as $routePath =&gt; $callback) {\n            if ($routePath === $currentPath) {\n                // 该函数是在addRoute函数执行时被追加\n                // 执行了回调函数后，赋值了responseContentType和responseBody\n                $callback();\n            }\n        }\n        header(&apos;HTTP/1.1 &apos; . $this-&gt;responseStatus);\n        header(&apos;Content-type: &apos; . $this-&gt;responseContentType);\n        header(&apos;Content-length: &apos; . mb_strlen($this-&gt;responseBody));\n        echo $this-&gt;responseBody;\n    }\n}\n$app = new App();\n$app-&gt;addRoute(&apos;/users/josh&apos;, function () {\n    $this-&gt;responseContentType = &apos;application/json;charset=utf8&apos;;\n    $this-&gt;responseBody = &apos;{&quot;name&quot;: &quot;Josh&quot;}&apos;;\n});\n$app-&gt;dispatch(&apos;/users/josh&apos;);</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Zend-OPcache-PHP-5-5\"><a href=\"#Zend-OPcache-PHP-5-5\" class=\"headerlink\" title=\"Zend OPcache (PHP 5.5+)\"></a>Zend OPcache (PHP 5.5+)</h3><ul>\n<li>类似于APC、XCache等第三方cache扩展，预编译PHP代码为二进制程序，缓存在内存中。</li>\n</ul>\n<p><em>本文档参考了《O’Reilly Modern PHP》以及PHP官方文档</em></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"命名空间-Namespace-PHP-5-3\"><a href=\"#命名空间-Namespace-PHP-5-3\" class=\"headerlink\" title=\"命名空间 Namespace (PHP 5.3+)\"></a>命名空间 Namespace (PHP 5.3+)</h3><p>沙盒机制。虚拟的层级关系，更好的隔离不同的组建。PS：以下仅为推荐用法。</p>\n<ul>\n<li><p>声明、引用、别名 (Declear, Import, Alias)</p>\n</li>\n<li><p>声明：</p>\n<pre><code>&lt;?php \n// 必须在首行，推荐保持每个命名空间一行\nnamespace Symfony\\Component\\HttpFoundation;</code></pre></li>\n<li><p>引用 &amp; 别名<br>  // 推荐保持每个引用一行</p>\n</li>\n</ul>\n<h3 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h3><pre><code>&lt;?php\n// 引用\nuse Symfony\\Component\\HttpFoundation\\Response;\n\n$response = new Response(&apos;Oops&apos;, 400);\n$response-&gt;send();\n\n// 别名\nuse Symfony\\Component\\HttpFoundation\\Response as Res;\n\n$r = new Res(&apos;Oops&apos;, 400);\n$r-&gt;send();</code></pre><h3 id=\"Function-PHP-5-6\"><a href=\"#Function-PHP-5-6\" class=\"headerlink\" title=\"Function (PHP 5.6+)\"></a>Function (PHP 5.6+)</h3><pre><code>&lt;?php \n// 引用\nuse function My\\Full\\functionName;\n\n// 别名\nuse function My\\Full\\functionName as func;</code></pre><h3 id=\"Constant\"><a href=\"#Constant\" class=\"headerlink\" title=\"Constant\"></a>Constant</h3><pre><code>// 引用\nuse const My\\Full\\CONSTANT;</code></pre><h3 id=\"PHP-7-code\"><a href=\"#PHP-7-code\" class=\"headerlink\" title=\"PHP 7+ code\"></a>PHP 7+ code</h3><pre><code>use some\\namespace\\{ClassA, ClassB, ClassC as C};\nuse function some\\namespace\\{fn_a, fn_b, fn_c};\nuse const some\\namespace\\{ConstA, ConstB, ConstC};</code></pre><h3 id=\"全局命名空间\"><a href=\"#全局命名空间\" class=\"headerlink\" title=\"全局命名空间\"></a>全局命名空间</h3><ul>\n<li><p>引用时不加入命名空间，程序默认为与当前命名空间相同</p>\n</li>\n<li><p>没有命名空间的程序，默认在global下，例如Exception。使用时需要在前边加上”/“：</p>\n<pre><code>&lt;?php\nnamespace My\\App;\n\nclass Foo\n{\n    public function doSomething()\n    {\n        $exception = new \\Exception();\n    }\n}</code></pre></li>\n</ul>\n<h3 id=\"代码设计接口化\"><a href=\"#代码设计接口化\" class=\"headerlink\" title=\"代码设计接口化\"></a>代码设计接口化</h3><ul>\n<li>面向对象思维中的典型应用，在开发组件时尽可能的使用接口来统一功能，能为复用者或者后继开发人员节省非常多的时间</li>\n</ul>\n<pre><code>// 实例来自PHP官方文档\ninterface iTemplate\n{\n    public function setVariable($name, $var);\n    public function getHtml($template);\n}\n\n// Implement the interface\nclass Template implements iTemplate\n{\n    private $vars = array();\n\n    public function setVariable($name, $var)\n    {\n        $this-&gt;vars[$name] = $var;\n    }\n\n    public function getHtml($template)\n    {\n        foreach($this-&gt;vars as $name =&gt; $value) {\n            $template = str_replace(&apos;{&apos; . $name . &apos;}&apos;, $value, $template);\n        }\n\n        return $template;\n    }\n}</code></pre><h3 id=\"Traits-PHP-5-4\"><a href=\"#Traits-PHP-5-4\" class=\"headerlink\" title=\"Traits (PHP 5.4+)\"></a>Traits (PHP 5.4+)</h3><ul>\n<li><p>大部分编程语言都是采用继承(extend)来实现类的扩展，Traits存在的目的是注入代码片段。</p>\n</li>\n<li><p>简单的理解就是一段需要复用的代码，我们不再复制粘贴到各个文件当中，而仅仅是使用traits的方式来引入。</p>\n</li>\n<li><p>其实include好像也可以实现同样的功能？</p>\n<pre><code>&lt;?php\ntrait SayWorld {\n    public function sayHello() {\n        echo &apos;Hello World!&apos;;\n    }\n}\n\nclass MyHelloWorld {\n    use SayWorld;\n}</code></pre></li>\n</ul>\n<h3 id=\"生成器-Generator-PHP-5-5\"><a href=\"#生成器-Generator-PHP-5-5\" class=\"headerlink\" title=\"生成器 (Generator) (PHP 5.5+)\"></a>生成器 (Generator) (PHP 5.5+)</h3><ul>\n<li><p>不同于JS中的Generator，PHP更单纯的是个迭代器，封装了自己的状态。目的是节省性能以及降低代码复杂度。</p>\n<pre><code>&lt;?php \n// 如下代码在执行的时候会依次输出三个值\nfunction myGenerator()\n{\n    yield &apos;value1&apos;;\n    yield &apos;value2&apos;;\n    yield &apos;value3&apos;;\n}</code></pre></li>\n<li><p>常与foreach循环一起连用。使用场景如逐行读取文件，重复的计算等</p>\n<pre><code>&lt;?php\nfunction getLines($file) {\n    $f = fopen($file, &apos;r&apos;);\n    try {\n        while ($line = fgets($f)) {\n            yield $line;\n        }\n    } finally {\n        fclose($f);\n    }\n}\n\nforeach (getLines(&quot;file.txt&quot;) as $n =&gt; $line) {\n    if ($n &gt; 5) break;\n    echo $line;\n}</code></pre></li>\n</ul>\n<h3 id=\"闭包-Closures-PHP-5-3\"><a href=\"#闭包-Closures-PHP-5-3\" class=\"headerlink\" title=\"闭包(Closures) (PHP 5.3+)\"></a>闭包(Closures) (PHP 5.3+)</h3><ul>\n<li><p>通常会用在需要回调函数时，比如array_map()和preg_replace_callback()。</p>\n<pre><code>&lt;?php\nfunction cube($n)\n{\n    return($n * $n * $n);\n}\n\n$a = array(1, 2, 3, 4, 5);\n$b = array_map(&quot;cube&quot;, $a);\nprint_r($b);</code></pre></li>\n<li><p>另一种情况是动态追加函数或变量到当前函数/类中。</p>\n<ul>\n<li><p>低级用法</p>\n<pre><code>&lt;?php\nfunction enclosePerson($name) {\n    return function ($doCommand) use ($name) {\n        return sprintf(&apos;%s, %s&apos;, $name, $doCommand);\n    };\n}\n// 在闭包函数中封装了字符串&apos;Clay&apos;\n$clay = enclosePerson(&apos;Clay&apos;);\necho $clay(&apos;get me sweet tea!&apos;);</code></pre></li>\n<li><p>高级用法</p>\n<pre><code>&lt;?php\nclass App\n{\n    protected $routes = [];\n    protected $responseStatus = &apos;200 OK&apos;;\n    protected $responseContentType = &apos;text/html&apos;;\n    protected $responseBody = &apos;Hello world&apos;;\n    public function addRoute($routePath, $routeCallback)\n    {\n        // bindTo 将routeCallback函数追加给当前的app对象，然后将其赋值给$routePath键\n        // __CLASS__ 为当前类名，并包含当前声明的命名空间，使用在此处，意为$routeCallback的作用域在当前类，\n        // 想了解更多作用域相关信息请移步：http://php.net/manual/zh/closure.bindto.php#119410\n        $this-&gt;routes[$routePath] = $routeCallback-&gt;bindTo($this, __CLASS__);\n    }\n    public function dispatch($currentPath)\n    {\n        foreach ($this-&gt;routes as $routePath =&gt; $callback) {\n            if ($routePath === $currentPath) {\n                // 该函数是在addRoute函数执行时被追加\n                // 执行了回调函数后，赋值了responseContentType和responseBody\n                $callback();\n            }\n        }\n        header(&apos;HTTP/1.1 &apos; . $this-&gt;responseStatus);\n        header(&apos;Content-type: &apos; . $this-&gt;responseContentType);\n        header(&apos;Content-length: &apos; . mb_strlen($this-&gt;responseBody));\n        echo $this-&gt;responseBody;\n    }\n}\n$app = new App();\n$app-&gt;addRoute(&apos;/users/josh&apos;, function () {\n    $this-&gt;responseContentType = &apos;application/json;charset=utf8&apos;;\n    $this-&gt;responseBody = &apos;{&quot;name&quot;: &quot;Josh&quot;}&apos;;\n});\n$app-&gt;dispatch(&apos;/users/josh&apos;);</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Zend-OPcache-PHP-5-5\"><a href=\"#Zend-OPcache-PHP-5-5\" class=\"headerlink\" title=\"Zend OPcache (PHP 5.5+)\"></a>Zend OPcache (PHP 5.5+)</h3><ul>\n<li>类似于APC、XCache等第三方cache扩展，预编译PHP代码为二进制程序，缓存在内存中。</li>\n</ul>\n<p><em>本文档参考了《O’Reilly Modern PHP》以及PHP官方文档</em></p>\n"},{"layout":"post","title":"RFC 2119 解读","date":"2016-10-25T04:00:00.000Z","description":"在写文档的时候，使用特定的关键词来声明需求等级","keywords":"IETF, RFC, 2119","_content":"\n### 简介\n\n\tRFC2119 是技术文档中的规范用语要求，针对若干个关键词进行说明，解释其在文档中的具体用法。在使用中所有字母都必须是大写的。\n\n\t了解它的规定有利于解读英文文档的具体用意。\n\n### 所有遵循该规定的文档都在开头包含以下文字：\n\n\tThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL\n    NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\n    \"OPTIONAL\" in this document are to be interpreted as described in\n    [RFC 2119](https://tools.ietf.org/html/rfc2119).\n\n#### 1. `MUST`：等同于\"`REQUIRED`\"和\"`SHALL`\"。 必须使用。\n\n#### 2. `MUST NOT`：等同于\"`SHALL NOT`\"。  必须避免使用。\n\n#### 3. `SHOULD`：等同于\"`RECOMMENDED`\"。  推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\n\n#### 4. `SHOULD NOT`：等同于\"`NOT RECOMMENDED`\"。 推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\n\n#### 5. `MAY`：等同于\"`OPTIONAL`\"。 可选可不选。\n\n#### 官方文档： [https://tools.ietf.org/html/rfc2119](https://tools.ietf.org/html/rfc2119)\n\n","source":"_posts/2016-10-25-rfc-2119.md","raw":"---\nlayout: post\ntitle: RFC 2119 解读\ncategory: 编程学习\ntags: [编程规范]\ndate: 2016-10-25\ndescription: 在写文档的时候，使用特定的关键词来声明需求等级\nkeywords: IETF, RFC, 2119\n---\n\n### 简介\n\n\tRFC2119 是技术文档中的规范用语要求，针对若干个关键词进行说明，解释其在文档中的具体用法。在使用中所有字母都必须是大写的。\n\n\t了解它的规定有利于解读英文文档的具体用意。\n\n### 所有遵循该规定的文档都在开头包含以下文字：\n\n\tThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL\n    NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\n    \"OPTIONAL\" in this document are to be interpreted as described in\n    [RFC 2119](https://tools.ietf.org/html/rfc2119).\n\n#### 1. `MUST`：等同于\"`REQUIRED`\"和\"`SHALL`\"。 必须使用。\n\n#### 2. `MUST NOT`：等同于\"`SHALL NOT`\"。  必须避免使用。\n\n#### 3. `SHOULD`：等同于\"`RECOMMENDED`\"。  推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\n\n#### 4. `SHOULD NOT`：等同于\"`NOT RECOMMENDED`\"。 推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\n\n#### 5. `MAY`：等同于\"`OPTIONAL`\"。 可选可不选。\n\n#### 官方文档： [https://tools.ietf.org/html/rfc2119](https://tools.ietf.org/html/rfc2119)\n\n","slug":"2016-10-25-rfc-2119","published":1,"updated":"2020-04-19T02:50:12.203Z","_id":"ck96ffjao001hrmp9avpcdxhb","comments":1,"photos":[],"link":"","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><pre><code>RFC2119 是技术文档中的规范用语要求，针对若干个关键词进行说明，解释其在文档中的具体用法。在使用中所有字母都必须是大写的。\n\n了解它的规定有利于解读英文文档的具体用意。</code></pre><h3 id=\"所有遵循该规定的文档都在开头包含以下文字：\"><a href=\"#所有遵循该规定的文档都在开头包含以下文字：\" class=\"headerlink\" title=\"所有遵循该规定的文档都在开头包含以下文字：\"></a>所有遵循该规定的文档都在开头包含以下文字：</h3><pre><code>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL\nNOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and\n&quot;OPTIONAL&quot; in this document are to be interpreted as described in\n[RFC 2119](https://tools.ietf.org/html/rfc2119).</code></pre><h4 id=\"1-MUST：等同于”REQUIRED“和”SHALL“。-必须使用。\"><a href=\"#1-MUST：等同于”REQUIRED“和”SHALL“。-必须使用。\" class=\"headerlink\" title=\"1. MUST：等同于”REQUIRED“和”SHALL“。 必须使用。\"></a>1. <code>MUST</code>：等同于”<code>REQUIRED</code>“和”<code>SHALL</code>“。 必须使用。</h4><h4 id=\"2-MUST-NOT：等同于”SHALL-NOT“。-必须避免使用。\"><a href=\"#2-MUST-NOT：等同于”SHALL-NOT“。-必须避免使用。\" class=\"headerlink\" title=\"2. MUST NOT：等同于”SHALL NOT“。  必须避免使用。\"></a>2. <code>MUST NOT</code>：等同于”<code>SHALL NOT</code>“。  必须避免使用。</h4><h4 id=\"3-SHOULD：等同于”RECOMMENDED“。-推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"><a href=\"#3-SHOULD：等同于”RECOMMENDED“。-推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\" class=\"headerlink\" title=\"3. SHOULD：等同于”RECOMMENDED“。  推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"></a>3. <code>SHOULD</code>：等同于”<code>RECOMMENDED</code>“。  推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。</h4><h4 id=\"4-SHOULD-NOT：等同于”NOT-RECOMMENDED“。-推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"><a href=\"#4-SHOULD-NOT：等同于”NOT-RECOMMENDED“。-推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\" class=\"headerlink\" title=\"4. SHOULD NOT：等同于”NOT RECOMMENDED“。 推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"></a>4. <code>SHOULD NOT</code>：等同于”<code>NOT RECOMMENDED</code>“。 推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。</h4><h4 id=\"5-MAY：等同于”OPTIONAL“。-可选可不选。\"><a href=\"#5-MAY：等同于”OPTIONAL“。-可选可不选。\" class=\"headerlink\" title=\"5. MAY：等同于”OPTIONAL“。 可选可不选。\"></a>5. <code>MAY</code>：等同于”<code>OPTIONAL</code>“。 可选可不选。</h4><h4 id=\"官方文档：-https-tools-ietf-org-html-rfc2119\"><a href=\"#官方文档：-https-tools-ietf-org-html-rfc2119\" class=\"headerlink\" title=\"官方文档： https://tools.ietf.org/html/rfc2119\"></a>官方文档： <a href=\"https://tools.ietf.org/html/rfc2119\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/html/rfc2119</a></h4>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><pre><code>RFC2119 是技术文档中的规范用语要求，针对若干个关键词进行说明，解释其在文档中的具体用法。在使用中所有字母都必须是大写的。\n\n了解它的规定有利于解读英文文档的具体用意。</code></pre><h3 id=\"所有遵循该规定的文档都在开头包含以下文字：\"><a href=\"#所有遵循该规定的文档都在开头包含以下文字：\" class=\"headerlink\" title=\"所有遵循该规定的文档都在开头包含以下文字：\"></a>所有遵循该规定的文档都在开头包含以下文字：</h3><pre><code>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL\nNOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and\n&quot;OPTIONAL&quot; in this document are to be interpreted as described in\n[RFC 2119](https://tools.ietf.org/html/rfc2119).</code></pre><h4 id=\"1-MUST：等同于”REQUIRED“和”SHALL“。-必须使用。\"><a href=\"#1-MUST：等同于”REQUIRED“和”SHALL“。-必须使用。\" class=\"headerlink\" title=\"1. MUST：等同于”REQUIRED“和”SHALL“。 必须使用。\"></a>1. <code>MUST</code>：等同于”<code>REQUIRED</code>“和”<code>SHALL</code>“。 必须使用。</h4><h4 id=\"2-MUST-NOT：等同于”SHALL-NOT“。-必须避免使用。\"><a href=\"#2-MUST-NOT：等同于”SHALL-NOT“。-必须避免使用。\" class=\"headerlink\" title=\"2. MUST NOT：等同于”SHALL NOT“。  必须避免使用。\"></a>2. <code>MUST NOT</code>：等同于”<code>SHALL NOT</code>“。  必须避免使用。</h4><h4 id=\"3-SHOULD：等同于”RECOMMENDED“。-推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"><a href=\"#3-SHOULD：等同于”RECOMMENDED“。-推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\" class=\"headerlink\" title=\"3. SHOULD：等同于”RECOMMENDED“。  推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"></a>3. <code>SHOULD</code>：等同于”<code>RECOMMENDED</code>“。  推荐使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。</h4><h4 id=\"4-SHOULD-NOT：等同于”NOT-RECOMMENDED“。-推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"><a href=\"#4-SHOULD-NOT：等同于”NOT-RECOMMENDED“。-推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\" class=\"headerlink\" title=\"4. SHOULD NOT：等同于”NOT RECOMMENDED“。 推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。\"></a>4. <code>SHOULD NOT</code>：等同于”<code>NOT RECOMMENDED</code>“。 推荐不使用方式，但在某些特定情况下可以忽略。如果需要采用不同的方式，请务必仔细斟酌。</h4><h4 id=\"5-MAY：等同于”OPTIONAL“。-可选可不选。\"><a href=\"#5-MAY：等同于”OPTIONAL“。-可选可不选。\" class=\"headerlink\" title=\"5. MAY：等同于”OPTIONAL“。 可选可不选。\"></a>5. <code>MAY</code>：等同于”<code>OPTIONAL</code>“。 可选可不选。</h4><h4 id=\"官方文档：-https-tools-ietf-org-html-rfc2119\"><a href=\"#官方文档：-https-tools-ietf-org-html-rfc2119\" class=\"headerlink\" title=\"官方文档： https://tools.ietf.org/html/rfc2119\"></a>官方文档： <a href=\"https://tools.ietf.org/html/rfc2119\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/html/rfc2119</a></h4>"},{"layout":"post","title":"简要说明语义化版本号的具体用法","date":"2016-10-25T04:00:00.000Z","description":"简要说明语义化版本号的具体用法","keywords":"Semantic, Version, Note","_content":"\n### 版本格式：主版本号.次版本号.修订版本号，版本号递增规则如下：\n\n* `主版本号`：当你做了不兼容的 API 修改，\n\n* `次版本号`：当你做了向下兼容的功能性新增，\n\n* `修订版本号`：当你做了向下兼容的问题修正。\n\n* `先行版本号`及`版本编译信息`可以加到“主版本号.次版本号.修订号”的后面，作为延伸。\n\n### 具体要求：\n\n1. 必须包含公共API，定义在代码或文档中。\n\n2. 格式必须是 `X.Y.Z`。 非负，从0开始。\n\n3. 每次代码修改必须调整版本号。\n\n4. `主版本号`为0时(0.Y.Z) 为开发阶段，可随意修整代码。\n\n5. 1.0.0 是公共API的起始版本号。\n\n6. `修订版本号`为修复BUG递增版本号，向后兼容。\n\n7. 新增功能后次版本号增长。必须保证向后兼容。`修订版本号`归零。\n\n8. 新增不能向后兼容的功能后，`主版本号`增长，`次版本号`及`修订版本号`归零。\n\n9. `先行版本号`，即已发布非正式的版本号标注。必须从1.0.0开始。 在版本号后以`-a.a...`的形式追加。 `a` 可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。\n\n10. `版本编译信息`追加。在先行版本号以`+b.b...`的形式追加。 `b`可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。\n\n11. 版本优先级。 从左到右依次比较。`先行版本号`及`版本编译信息`的比较中以`.`切割比较，有编号高于无编号，字母编号高于编号数字。范例：1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0。\n\n_基于官方文档2.0.0版本翻译解释_\n\n文档地址： [http://semver.org/](http://semver.org/)\n\n","source":"_posts/2016-10-25-semantic-versioning-2.md","raw":"---\nlayout: post\ntitle: 简要说明语义化版本号的具体用法\ncategory: 编程学习\ntags: [编程规范]\ndate: 2016-10-25\ndescription: 简要说明语义化版本号的具体用法\nkeywords: Semantic, Version, Note\n---\n\n### 版本格式：主版本号.次版本号.修订版本号，版本号递增规则如下：\n\n* `主版本号`：当你做了不兼容的 API 修改，\n\n* `次版本号`：当你做了向下兼容的功能性新增，\n\n* `修订版本号`：当你做了向下兼容的问题修正。\n\n* `先行版本号`及`版本编译信息`可以加到“主版本号.次版本号.修订号”的后面，作为延伸。\n\n### 具体要求：\n\n1. 必须包含公共API，定义在代码或文档中。\n\n2. 格式必须是 `X.Y.Z`。 非负，从0开始。\n\n3. 每次代码修改必须调整版本号。\n\n4. `主版本号`为0时(0.Y.Z) 为开发阶段，可随意修整代码。\n\n5. 1.0.0 是公共API的起始版本号。\n\n6. `修订版本号`为修复BUG递增版本号，向后兼容。\n\n7. 新增功能后次版本号增长。必须保证向后兼容。`修订版本号`归零。\n\n8. 新增不能向后兼容的功能后，`主版本号`增长，`次版本号`及`修订版本号`归零。\n\n9. `先行版本号`，即已发布非正式的版本号标注。必须从1.0.0开始。 在版本号后以`-a.a...`的形式追加。 `a` 可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。\n\n10. `版本编译信息`追加。在先行版本号以`+b.b...`的形式追加。 `b`可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。\n\n11. 版本优先级。 从左到右依次比较。`先行版本号`及`版本编译信息`的比较中以`.`切割比较，有编号高于无编号，字母编号高于编号数字。范例：1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0。\n\n_基于官方文档2.0.0版本翻译解释_\n\n文档地址： [http://semver.org/](http://semver.org/)\n\n","slug":"2016-10-25-semantic-versioning-2","published":1,"updated":"2020-04-19T02:50:30.707Z","_id":"ck96ffjap001lrmp95di5gcsb","comments":1,"photos":[],"link":"","content":"<h3 id=\"版本格式：主版本号-次版本号-修订版本号，版本号递增规则如下：\"><a href=\"#版本格式：主版本号-次版本号-修订版本号，版本号递增规则如下：\" class=\"headerlink\" title=\"版本格式：主版本号.次版本号.修订版本号，版本号递增规则如下：\"></a>版本格式：主版本号.次版本号.修订版本号，版本号递增规则如下：</h3><ul>\n<li><p><code>主版本号</code>：当你做了不兼容的 API 修改，</p>\n</li>\n<li><p><code>次版本号</code>：当你做了向下兼容的功能性新增，</p>\n</li>\n<li><p><code>修订版本号</code>：当你做了向下兼容的问题修正。</p>\n</li>\n<li><p><code>先行版本号</code>及<code>版本编译信息</code>可以加到“主版本号.次版本号.修订号”的后面，作为延伸。</p>\n</li>\n</ul>\n<h3 id=\"具体要求：\"><a href=\"#具体要求：\" class=\"headerlink\" title=\"具体要求：\"></a>具体要求：</h3><ol>\n<li><p>必须包含公共API，定义在代码或文档中。</p>\n</li>\n<li><p>格式必须是 <code>X.Y.Z</code>。 非负，从0开始。</p>\n</li>\n<li><p>每次代码修改必须调整版本号。</p>\n</li>\n<li><p><code>主版本号</code>为0时(0.Y.Z) 为开发阶段，可随意修整代码。</p>\n</li>\n<li><p>1.0.0 是公共API的起始版本号。</p>\n</li>\n<li><p><code>修订版本号</code>为修复BUG递增版本号，向后兼容。</p>\n</li>\n<li><p>新增功能后次版本号增长。必须保证向后兼容。<code>修订版本号</code>归零。</p>\n</li>\n<li><p>新增不能向后兼容的功能后，<code>主版本号</code>增长，<code>次版本号</code>及<code>修订版本号</code>归零。</p>\n</li>\n<li><p><code>先行版本号</code>，即已发布非正式的版本号标注。必须从1.0.0开始。 在版本号后以<code>-a.a...</code>的形式追加。 <code>a</code> 可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。</p>\n</li>\n<li><p><code>版本编译信息</code>追加。在先行版本号以<code>+b.b...</code>的形式追加。 <code>b</code>可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。</p>\n</li>\n<li><p>版本优先级。 从左到右依次比较。<code>先行版本号</code>及<code>版本编译信息</code>的比较中以<code>.</code>切割比较，有编号高于无编号，字母编号高于编号数字。范例：1.0.0-alpha &lt; 1.0.0-alpha.1 &lt; 1.0.0-alpha.beta &lt; 1.0.0-beta &lt; 1.0.0-beta.2 &lt; 1.0.0-beta.11 &lt; 1.0.0-rc.1 &lt; 1.0.0。</p>\n</li>\n</ol>\n<p><em>基于官方文档2.0.0版本翻译解释</em></p>\n<p>文档地址： <a href=\"http://semver.org/\" target=\"_blank\" rel=\"noopener\">http://semver.org/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"版本格式：主版本号-次版本号-修订版本号，版本号递增规则如下：\"><a href=\"#版本格式：主版本号-次版本号-修订版本号，版本号递增规则如下：\" class=\"headerlink\" title=\"版本格式：主版本号.次版本号.修订版本号，版本号递增规则如下：\"></a>版本格式：主版本号.次版本号.修订版本号，版本号递增规则如下：</h3><ul>\n<li><p><code>主版本号</code>：当你做了不兼容的 API 修改，</p>\n</li>\n<li><p><code>次版本号</code>：当你做了向下兼容的功能性新增，</p>\n</li>\n<li><p><code>修订版本号</code>：当你做了向下兼容的问题修正。</p>\n</li>\n<li><p><code>先行版本号</code>及<code>版本编译信息</code>可以加到“主版本号.次版本号.修订号”的后面，作为延伸。</p>\n</li>\n</ul>\n<h3 id=\"具体要求：\"><a href=\"#具体要求：\" class=\"headerlink\" title=\"具体要求：\"></a>具体要求：</h3><ol>\n<li><p>必须包含公共API，定义在代码或文档中。</p>\n</li>\n<li><p>格式必须是 <code>X.Y.Z</code>。 非负，从0开始。</p>\n</li>\n<li><p>每次代码修改必须调整版本号。</p>\n</li>\n<li><p><code>主版本号</code>为0时(0.Y.Z) 为开发阶段，可随意修整代码。</p>\n</li>\n<li><p>1.0.0 是公共API的起始版本号。</p>\n</li>\n<li><p><code>修订版本号</code>为修复BUG递增版本号，向后兼容。</p>\n</li>\n<li><p>新增功能后次版本号增长。必须保证向后兼容。<code>修订版本号</code>归零。</p>\n</li>\n<li><p>新增不能向后兼容的功能后，<code>主版本号</code>增长，<code>次版本号</code>及<code>修订版本号</code>归零。</p>\n</li>\n<li><p><code>先行版本号</code>，即已发布非正式的版本号标注。必须从1.0.0开始。 在版本号后以<code>-a.a...</code>的形式追加。 <code>a</code> 可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。</p>\n</li>\n<li><p><code>版本编译信息</code>追加。在先行版本号以<code>+b.b...</code>的形式追加。 <code>b</code>可为字母单词数字横杠(-)， 不可为空。范例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。</p>\n</li>\n<li><p>版本优先级。 从左到右依次比较。<code>先行版本号</code>及<code>版本编译信息</code>的比较中以<code>.</code>切割比较，有编号高于无编号，字母编号高于编号数字。范例：1.0.0-alpha &lt; 1.0.0-alpha.1 &lt; 1.0.0-alpha.beta &lt; 1.0.0-beta &lt; 1.0.0-beta.2 &lt; 1.0.0-beta.11 &lt; 1.0.0-rc.1 &lt; 1.0.0。</p>\n</li>\n</ol>\n<p><em>基于官方文档2.0.0版本翻译解释</em></p>\n<p>文档地址： <a href=\"http://semver.org/\" target=\"_blank\" rel=\"noopener\">http://semver.org/</a></p>\n"},{"layout":"post","title":"Elasticsearch Mapping - Elasticsearch 学习实践 (2)","date":"2016-11-17T05:00:00.000Z","description":"Elasticsearch文档学习实践之路","keywords":"Elasticsearch, Documents, 文档, 全文检索, 搜索","_content":"\n# Mapping\n\n* Mapping是用于定义文档及其内部属性字段如何被索引及搜索的。\n\n## 系统字段\n\n* 首先了解下系统特别制定的字段及其用法。\n\n### 结构定位字段\n\n* _index: 类似数据库的库名\n* _type: 类似数据库的表名\n* _id: 类似数据库中每条数据的ID\n* _uid: 结构是`{type}#{id}`，可用于直接准确查询某条数据\n\n### 文档数据字段\n\n* _source: 原始数据JSON\n* _size: 原始数据JSON的大小\n\n### 可用于索引查询的字段\n\n* _all: 将`_source`数据用空格切分保存后作索引（不建议保存，影响性能）\n* _field_names: 用于是否包含某字段查询\n\n### 路由字段\n\n* _parent: 用于在两种数据类型之间创建父子关系\n* _routing: 用于路由到特定的分片(shard)\n\n### 其他字段\n\n* _meta: 用于存储特定的信息，比如有效版本号、可调用的类函数等\n\n## 用户定义字段\n\n* 定义用户索引的文档字段属性，系统本身是提供动态mapping，也就是说，我们可以在不定义mapping的情况下直接导入，系统会根据用户的第一倒入生成mapping。\n* 但如果文档相对复杂，还是建议完整设置动态mapping来避免异常错误。\n\n* Elasticsearch 为我们提供了常用的字段类型，包括：`text`, `keyword`, `date`, `boolean`, `long`, `integer`, `short`, `byte`, `double`, `float`, `binary`， 复杂点的`array`, `object`, `nested`, 用于定位的`geo_point`, `geo_shape`, 特殊的`ip`, `completion`, `token_count`, `murmur3`, `attachments`, `percolator`。\n\n* 其中需要注意的是\n\n\t* `text`和`keyword`都是string， 前者会被当作文本分析并索引，可用于包含关键词搜索，后者会作为一个整体而被作为完全匹配搜索， 主要用于聚合、排序等功能使用。\n\t* `array` 并非数据类型，仅仅作为数据类型标识。\n\t* `object` 同`array` 仅作为数据类型标识，无任何意义。\n\t* `nested` 等同于`object`数据类型，将数据结构的KEY扁平化如： `\"user.first\" : [ \"alice\", \"john\" ],`\n\n## 常用设置\n\n* `index.mapping.total_fields.limit` 单个索引中字段数量的上限，默认`1000`。\n* `index.mapping.depth.limit` 索引深度， 在数组和对象类型中的层级数量，默认`20`。\n* `index.mapping.nested_fields.limit` 在对象类型中，扁平化的KEY的层级数量，默认`50`。\n\n## 动态mapping\n\n* 系统根据用户的第一次倒入的数据生成mapping。\n\n* `_default_ mapping`: 默认的mapping配置，会被任何新建的mapping继承。\n\n* 以下是JSON字段在保存中默认转换的类型对照： (可配置 `\"{data_type}_detection\": false` 来关闭对应的数据类型检测)\n\n\t\tnull : 不保存\n\t\ttrue／false : boolean\n\t\tfloat : float\n\t\tinteger : long\n\t\tobject : object \n\t\tarray : array\n\t\tdate : 须符合格式 \"yyyy/MM/dd HH:mm:ss Z||yyyy/MM/dd Z\" 的会被自动转换\n\t\tstring : 如果字段不符合date, long, double, text, 会被当作keyword\n\n### 动态模版\n\n* 用户可自定义字段类型检测模版，在倒入数据的时候，根据条件，系统生成对应的mapping配置，示例：\n\n\t\tPUT my_index\n\t\t{\n\t\t  \"mappings\": {\n\t\t    \"my_type\": {\n\t\t      \"dynamic_templates\": [\n\t\t        {\n\t\t          \"integers\": {\n\t\t            \"match_mapping_type\": \"long\",\n\t\t            \"mapping\": {\n\t\t              \"type\": \"integer\"\n\t\t            }\n\t\t          }\n\t\t        },\n\t\t        {\n\t\t          \"strings\": {\n\t\t            \"match_mapping_type\": \"string\",\n\t\t            \"mapping\": {\n\t\t              \"type\": \"text\",\n\t\t              \"fields\": {\n\t\t                \"raw\": {\n\t\t                  \"type\":  \"keyword\",\n\t\t                  \"ignore_above\": 256\n\t\t                }\n\t\t              }\n\t\t            }\n\t\t          }\n\t\t        }\n\t\t      ]\n\t\t    }\n\t\t  }\n\t\t}\n\n\t\tPUT my_index/my_type/1\n\t\t{\n\t\t  \"my_integer\": 5, \n\t\t  \"my_string\": \"Some string\" \n\t\t}\n\n* 示例中，`match_mapping_type` 为条件匹配判断，类型还包含`match`, `match_pattern`, `unmatch`, `path_match`, `path_unmatch`。\n* `mapping` 为匹配字段相应的调整内容。\n* `match`, `unmatch`, `path_match`, `path_unmatch` 可用通配符来作为匹配或排除条件\n* `match_pattern` 可调整`match` 行为来支持正则匹配，如：\n\n\t\"match_pattern\": \"regex\",\n  \t\"match\": \"^profit_\\d+$\"\n\n* 特殊配置\n\n\t* 字段不用于排序的时候可以`\"norms\": false,`来关闭它。\n\t* 字段仅作用于排序聚合而不用于过滤查询的时候可以`\"index\": false`来关闭它。\n\n* 更多示例，可参考官方文档：(dynamic-templates.html) [https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html]\n\n## 另外\n\n* 同一个字段名称的配置在不同的type里边必须包含同样的mapping。除了个别字段，如：`copy_to`, `dynamic`, `enabled`, `ignore_above`, `include_in_all`, `properties`。\n\n官方mapping示例： 没啥好解释的，很简单。具体属性不明白的，查[文档](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html)比较好。\n\n\t\t{\n\t\t  \"mappings\": {\n\t\t    \"user\": { \n\t\t      \"_all\":       { \"enabled\": false  }, \n\t\t      \"properties\": { \n\t\t        \"title\":    { \"type\": \"text\"  }, \n\t\t        \"name\":     { \"type\": \"text\"  }, \n\t\t        \"age\":      { \"type\": \"integer\" }  \n\t\t      }\n\t\t    },\n\t\t    \"blogpost\": { \n\t\t      \"_all\":       { \"enabled\": false  }, \n\t\t      \"properties\": { \n\t\t        \"title\":    { \"type\": \"text\"  }, \n\t\t        \"body\":     { \"type\": \"text\"  }, \n\t\t        \"user_id\":  {\n\t\t          \"type\":   \"keyword\" \n\t\t        },\n\t\t        \"created\":  {\n\t\t          \"type\":   \"date\", \n\t\t          \"format\": \"strict_date_optional_time||epoch_millis\"\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t}\n\n\n","source":"_posts/2016-11-17-elasticsearch-02-mapping.md","raw":"---\nlayout: post\ntitle: Elasticsearch Mapping - Elasticsearch 学习实践 (2)\ncategory: 编程学习\ntags: [Elasticsearch]\ndate: 2016-11-17\ndescription: Elasticsearch文档学习实践之路\nkeywords: Elasticsearch, Documents, 文档, 全文检索, 搜索\n---\n\n# Mapping\n\n* Mapping是用于定义文档及其内部属性字段如何被索引及搜索的。\n\n## 系统字段\n\n* 首先了解下系统特别制定的字段及其用法。\n\n### 结构定位字段\n\n* _index: 类似数据库的库名\n* _type: 类似数据库的表名\n* _id: 类似数据库中每条数据的ID\n* _uid: 结构是`{type}#{id}`，可用于直接准确查询某条数据\n\n### 文档数据字段\n\n* _source: 原始数据JSON\n* _size: 原始数据JSON的大小\n\n### 可用于索引查询的字段\n\n* _all: 将`_source`数据用空格切分保存后作索引（不建议保存，影响性能）\n* _field_names: 用于是否包含某字段查询\n\n### 路由字段\n\n* _parent: 用于在两种数据类型之间创建父子关系\n* _routing: 用于路由到特定的分片(shard)\n\n### 其他字段\n\n* _meta: 用于存储特定的信息，比如有效版本号、可调用的类函数等\n\n## 用户定义字段\n\n* 定义用户索引的文档字段属性，系统本身是提供动态mapping，也就是说，我们可以在不定义mapping的情况下直接导入，系统会根据用户的第一倒入生成mapping。\n* 但如果文档相对复杂，还是建议完整设置动态mapping来避免异常错误。\n\n* Elasticsearch 为我们提供了常用的字段类型，包括：`text`, `keyword`, `date`, `boolean`, `long`, `integer`, `short`, `byte`, `double`, `float`, `binary`， 复杂点的`array`, `object`, `nested`, 用于定位的`geo_point`, `geo_shape`, 特殊的`ip`, `completion`, `token_count`, `murmur3`, `attachments`, `percolator`。\n\n* 其中需要注意的是\n\n\t* `text`和`keyword`都是string， 前者会被当作文本分析并索引，可用于包含关键词搜索，后者会作为一个整体而被作为完全匹配搜索， 主要用于聚合、排序等功能使用。\n\t* `array` 并非数据类型，仅仅作为数据类型标识。\n\t* `object` 同`array` 仅作为数据类型标识，无任何意义。\n\t* `nested` 等同于`object`数据类型，将数据结构的KEY扁平化如： `\"user.first\" : [ \"alice\", \"john\" ],`\n\n## 常用设置\n\n* `index.mapping.total_fields.limit` 单个索引中字段数量的上限，默认`1000`。\n* `index.mapping.depth.limit` 索引深度， 在数组和对象类型中的层级数量，默认`20`。\n* `index.mapping.nested_fields.limit` 在对象类型中，扁平化的KEY的层级数量，默认`50`。\n\n## 动态mapping\n\n* 系统根据用户的第一次倒入的数据生成mapping。\n\n* `_default_ mapping`: 默认的mapping配置，会被任何新建的mapping继承。\n\n* 以下是JSON字段在保存中默认转换的类型对照： (可配置 `\"{data_type}_detection\": false` 来关闭对应的数据类型检测)\n\n\t\tnull : 不保存\n\t\ttrue／false : boolean\n\t\tfloat : float\n\t\tinteger : long\n\t\tobject : object \n\t\tarray : array\n\t\tdate : 须符合格式 \"yyyy/MM/dd HH:mm:ss Z||yyyy/MM/dd Z\" 的会被自动转换\n\t\tstring : 如果字段不符合date, long, double, text, 会被当作keyword\n\n### 动态模版\n\n* 用户可自定义字段类型检测模版，在倒入数据的时候，根据条件，系统生成对应的mapping配置，示例：\n\n\t\tPUT my_index\n\t\t{\n\t\t  \"mappings\": {\n\t\t    \"my_type\": {\n\t\t      \"dynamic_templates\": [\n\t\t        {\n\t\t          \"integers\": {\n\t\t            \"match_mapping_type\": \"long\",\n\t\t            \"mapping\": {\n\t\t              \"type\": \"integer\"\n\t\t            }\n\t\t          }\n\t\t        },\n\t\t        {\n\t\t          \"strings\": {\n\t\t            \"match_mapping_type\": \"string\",\n\t\t            \"mapping\": {\n\t\t              \"type\": \"text\",\n\t\t              \"fields\": {\n\t\t                \"raw\": {\n\t\t                  \"type\":  \"keyword\",\n\t\t                  \"ignore_above\": 256\n\t\t                }\n\t\t              }\n\t\t            }\n\t\t          }\n\t\t        }\n\t\t      ]\n\t\t    }\n\t\t  }\n\t\t}\n\n\t\tPUT my_index/my_type/1\n\t\t{\n\t\t  \"my_integer\": 5, \n\t\t  \"my_string\": \"Some string\" \n\t\t}\n\n* 示例中，`match_mapping_type` 为条件匹配判断，类型还包含`match`, `match_pattern`, `unmatch`, `path_match`, `path_unmatch`。\n* `mapping` 为匹配字段相应的调整内容。\n* `match`, `unmatch`, `path_match`, `path_unmatch` 可用通配符来作为匹配或排除条件\n* `match_pattern` 可调整`match` 行为来支持正则匹配，如：\n\n\t\"match_pattern\": \"regex\",\n  \t\"match\": \"^profit_\\d+$\"\n\n* 特殊配置\n\n\t* 字段不用于排序的时候可以`\"norms\": false,`来关闭它。\n\t* 字段仅作用于排序聚合而不用于过滤查询的时候可以`\"index\": false`来关闭它。\n\n* 更多示例，可参考官方文档：(dynamic-templates.html) [https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html]\n\n## 另外\n\n* 同一个字段名称的配置在不同的type里边必须包含同样的mapping。除了个别字段，如：`copy_to`, `dynamic`, `enabled`, `ignore_above`, `include_in_all`, `properties`。\n\n官方mapping示例： 没啥好解释的，很简单。具体属性不明白的，查[文档](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html)比较好。\n\n\t\t{\n\t\t  \"mappings\": {\n\t\t    \"user\": { \n\t\t      \"_all\":       { \"enabled\": false  }, \n\t\t      \"properties\": { \n\t\t        \"title\":    { \"type\": \"text\"  }, \n\t\t        \"name\":     { \"type\": \"text\"  }, \n\t\t        \"age\":      { \"type\": \"integer\" }  \n\t\t      }\n\t\t    },\n\t\t    \"blogpost\": { \n\t\t      \"_all\":       { \"enabled\": false  }, \n\t\t      \"properties\": { \n\t\t        \"title\":    { \"type\": \"text\"  }, \n\t\t        \"body\":     { \"type\": \"text\"  }, \n\t\t        \"user_id\":  {\n\t\t          \"type\":   \"keyword\" \n\t\t        },\n\t\t        \"created\":  {\n\t\t          \"type\":   \"date\", \n\t\t          \"format\": \"strict_date_optional_time||epoch_millis\"\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t}\n\n\n","slug":"2016-11-17-elasticsearch-02-mapping","published":1,"updated":"2020-04-19T02:56:22.377Z","_id":"ck96ffjaq001nrmp99drv4mga","comments":1,"photos":[],"link":"","content":"<h1 id=\"Mapping\"><a href=\"#Mapping\" class=\"headerlink\" title=\"Mapping\"></a>Mapping</h1><ul>\n<li>Mapping是用于定义文档及其内部属性字段如何被索引及搜索的。</li>\n</ul>\n<h2 id=\"系统字段\"><a href=\"#系统字段\" class=\"headerlink\" title=\"系统字段\"></a>系统字段</h2><ul>\n<li>首先了解下系统特别制定的字段及其用法。</li>\n</ul>\n<h3 id=\"结构定位字段\"><a href=\"#结构定位字段\" class=\"headerlink\" title=\"结构定位字段\"></a>结构定位字段</h3><ul>\n<li>_index: 类似数据库的库名</li>\n<li>_type: 类似数据库的表名</li>\n<li>_id: 类似数据库中每条数据的ID</li>\n<li>_uid: 结构是<code>{type}#{id}</code>，可用于直接准确查询某条数据</li>\n</ul>\n<h3 id=\"文档数据字段\"><a href=\"#文档数据字段\" class=\"headerlink\" title=\"文档数据字段\"></a>文档数据字段</h3><ul>\n<li>_source: 原始数据JSON</li>\n<li>_size: 原始数据JSON的大小</li>\n</ul>\n<h3 id=\"可用于索引查询的字段\"><a href=\"#可用于索引查询的字段\" class=\"headerlink\" title=\"可用于索引查询的字段\"></a>可用于索引查询的字段</h3><ul>\n<li>_all: 将<code>_source</code>数据用空格切分保存后作索引（不建议保存，影响性能）</li>\n<li>_field_names: 用于是否包含某字段查询</li>\n</ul>\n<h3 id=\"路由字段\"><a href=\"#路由字段\" class=\"headerlink\" title=\"路由字段\"></a>路由字段</h3><ul>\n<li>_parent: 用于在两种数据类型之间创建父子关系</li>\n<li>_routing: 用于路由到特定的分片(shard)</li>\n</ul>\n<h3 id=\"其他字段\"><a href=\"#其他字段\" class=\"headerlink\" title=\"其他字段\"></a>其他字段</h3><ul>\n<li>_meta: 用于存储特定的信息，比如有效版本号、可调用的类函数等</li>\n</ul>\n<h2 id=\"用户定义字段\"><a href=\"#用户定义字段\" class=\"headerlink\" title=\"用户定义字段\"></a>用户定义字段</h2><ul>\n<li><p>定义用户索引的文档字段属性，系统本身是提供动态mapping，也就是说，我们可以在不定义mapping的情况下直接导入，系统会根据用户的第一倒入生成mapping。</p>\n</li>\n<li><p>但如果文档相对复杂，还是建议完整设置动态mapping来避免异常错误。</p>\n</li>\n<li><p>Elasticsearch 为我们提供了常用的字段类型，包括：<code>text</code>, <code>keyword</code>, <code>date</code>, <code>boolean</code>, <code>long</code>, <code>integer</code>, <code>short</code>, <code>byte</code>, <code>double</code>, <code>float</code>, <code>binary</code>， 复杂点的<code>array</code>, <code>object</code>, <code>nested</code>, 用于定位的<code>geo_point</code>, <code>geo_shape</code>, 特殊的<code>ip</code>, <code>completion</code>, <code>token_count</code>, <code>murmur3</code>, <code>attachments</code>, <code>percolator</code>。</p>\n</li>\n<li><p>其中需要注意的是</p>\n<ul>\n<li><code>text</code>和<code>keyword</code>都是string， 前者会被当作文本分析并索引，可用于包含关键词搜索，后者会作为一个整体而被作为完全匹配搜索， 主要用于聚合、排序等功能使用。</li>\n<li><code>array</code> 并非数据类型，仅仅作为数据类型标识。</li>\n<li><code>object</code> 同<code>array</code> 仅作为数据类型标识，无任何意义。</li>\n<li><code>nested</code> 等同于<code>object</code>数据类型，将数据结构的KEY扁平化如： <code>&quot;user.first&quot; : [ &quot;alice&quot;, &quot;john&quot; ],</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常用设置\"><a href=\"#常用设置\" class=\"headerlink\" title=\"常用设置\"></a>常用设置</h2><ul>\n<li><code>index.mapping.total_fields.limit</code> 单个索引中字段数量的上限，默认<code>1000</code>。</li>\n<li><code>index.mapping.depth.limit</code> 索引深度， 在数组和对象类型中的层级数量，默认<code>20</code>。</li>\n<li><code>index.mapping.nested_fields.limit</code> 在对象类型中，扁平化的KEY的层级数量，默认<code>50</code>。</li>\n</ul>\n<h2 id=\"动态mapping\"><a href=\"#动态mapping\" class=\"headerlink\" title=\"动态mapping\"></a>动态mapping</h2><ul>\n<li><p>系统根据用户的第一次倒入的数据生成mapping。</p>\n</li>\n<li><p><code>_default_ mapping</code>: 默认的mapping配置，会被任何新建的mapping继承。</p>\n</li>\n<li><p>以下是JSON字段在保存中默认转换的类型对照： (可配置 <code>&quot;{data_type}_detection&quot;: false</code> 来关闭对应的数据类型检测)</p>\n<pre><code>null : 不保存\ntrue／false : boolean\nfloat : float\ninteger : long\nobject : object \narray : array\ndate : 须符合格式 &quot;yyyy/MM/dd HH:mm:ss Z||yyyy/MM/dd Z&quot; 的会被自动转换\nstring : 如果字段不符合date, long, double, text, 会被当作keyword</code></pre></li>\n</ul>\n<h3 id=\"动态模版\"><a href=\"#动态模版\" class=\"headerlink\" title=\"动态模版\"></a>动态模版</h3><ul>\n<li><p>用户可自定义字段类型检测模版，在倒入数据的时候，根据条件，系统生成对应的mapping配置，示例：</p>\n<pre><code>PUT my_index\n{\n  &quot;mappings&quot;: {\n    &quot;my_type&quot;: {\n      &quot;dynamic_templates&quot;: [\n        {\n          &quot;integers&quot;: {\n            &quot;match_mapping_type&quot;: &quot;long&quot;,\n            &quot;mapping&quot;: {\n              &quot;type&quot;: &quot;integer&quot;\n            }\n          }\n        },\n        {\n          &quot;strings&quot;: {\n            &quot;match_mapping_type&quot;: &quot;string&quot;,\n            &quot;mapping&quot;: {\n              &quot;type&quot;: &quot;text&quot;,\n              &quot;fields&quot;: {\n                &quot;raw&quot;: {\n                  &quot;type&quot;:  &quot;keyword&quot;,\n                  &quot;ignore_above&quot;: 256\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nPUT my_index/my_type/1\n{\n  &quot;my_integer&quot;: 5, \n  &quot;my_string&quot;: &quot;Some string&quot; \n}</code></pre></li>\n<li><p>示例中，<code>match_mapping_type</code> 为条件匹配判断，类型还包含<code>match</code>, <code>match_pattern</code>, <code>unmatch</code>, <code>path_match</code>, <code>path_unmatch</code>。</p>\n</li>\n<li><p><code>mapping</code> 为匹配字段相应的调整内容。</p>\n</li>\n<li><p><code>match</code>, <code>unmatch</code>, <code>path_match</code>, <code>path_unmatch</code> 可用通配符来作为匹配或排除条件</p>\n</li>\n<li><p><code>match_pattern</code> 可调整<code>match</code> 行为来支持正则匹配，如：</p>\n<p>  “match_pattern”: “regex”,</p>\n<pre><code>&quot;match&quot;: &quot;^profit_\\d+$&quot;</code></pre></li>\n<li><p>特殊配置</p>\n<ul>\n<li>字段不用于排序的时候可以<code>&quot;norms&quot;: false,</code>来关闭它。</li>\n<li>字段仅作用于排序聚合而不用于过滤查询的时候可以<code>&quot;index&quot;: false</code>来关闭它。</li>\n</ul>\n</li>\n<li><p>更多示例，可参考官方文档：(dynamic-templates.html) [<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html]\" target=\"_blank\" rel=\"noopener\">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html]</a></p>\n</li>\n</ul>\n<h2 id=\"另外\"><a href=\"#另外\" class=\"headerlink\" title=\"另外\"></a>另外</h2><ul>\n<li>同一个字段名称的配置在不同的type里边必须包含同样的mapping。除了个别字段，如：<code>copy_to</code>, <code>dynamic</code>, <code>enabled</code>, <code>ignore_above</code>, <code>include_in_all</code>, <code>properties</code>。</li>\n</ul>\n<p>官方mapping示例： 没啥好解释的，很简单。具体属性不明白的，查<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html\" target=\"_blank\" rel=\"noopener\">文档</a>比较好。</p>\n<pre><code>{\n  &quot;mappings&quot;: {\n    &quot;user&quot;: { \n      &quot;_all&quot;:       { &quot;enabled&quot;: false  }, \n      &quot;properties&quot;: { \n        &quot;title&quot;:    { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;name&quot;:     { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;age&quot;:      { &quot;type&quot;: &quot;integer&quot; }  \n      }\n    },\n    &quot;blogpost&quot;: { \n      &quot;_all&quot;:       { &quot;enabled&quot;: false  }, \n      &quot;properties&quot;: { \n        &quot;title&quot;:    { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;body&quot;:     { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;user_id&quot;:  {\n          &quot;type&quot;:   &quot;keyword&quot; \n        },\n        &quot;created&quot;:  {\n          &quot;type&quot;:   &quot;date&quot;, \n          &quot;format&quot;: &quot;strict_date_optional_time||epoch_millis&quot;\n        }\n      }\n    }\n  }\n}</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mapping\"><a href=\"#Mapping\" class=\"headerlink\" title=\"Mapping\"></a>Mapping</h1><ul>\n<li>Mapping是用于定义文档及其内部属性字段如何被索引及搜索的。</li>\n</ul>\n<h2 id=\"系统字段\"><a href=\"#系统字段\" class=\"headerlink\" title=\"系统字段\"></a>系统字段</h2><ul>\n<li>首先了解下系统特别制定的字段及其用法。</li>\n</ul>\n<h3 id=\"结构定位字段\"><a href=\"#结构定位字段\" class=\"headerlink\" title=\"结构定位字段\"></a>结构定位字段</h3><ul>\n<li>_index: 类似数据库的库名</li>\n<li>_type: 类似数据库的表名</li>\n<li>_id: 类似数据库中每条数据的ID</li>\n<li>_uid: 结构是<code>{type}#{id}</code>，可用于直接准确查询某条数据</li>\n</ul>\n<h3 id=\"文档数据字段\"><a href=\"#文档数据字段\" class=\"headerlink\" title=\"文档数据字段\"></a>文档数据字段</h3><ul>\n<li>_source: 原始数据JSON</li>\n<li>_size: 原始数据JSON的大小</li>\n</ul>\n<h3 id=\"可用于索引查询的字段\"><a href=\"#可用于索引查询的字段\" class=\"headerlink\" title=\"可用于索引查询的字段\"></a>可用于索引查询的字段</h3><ul>\n<li>_all: 将<code>_source</code>数据用空格切分保存后作索引（不建议保存，影响性能）</li>\n<li>_field_names: 用于是否包含某字段查询</li>\n</ul>\n<h3 id=\"路由字段\"><a href=\"#路由字段\" class=\"headerlink\" title=\"路由字段\"></a>路由字段</h3><ul>\n<li>_parent: 用于在两种数据类型之间创建父子关系</li>\n<li>_routing: 用于路由到特定的分片(shard)</li>\n</ul>\n<h3 id=\"其他字段\"><a href=\"#其他字段\" class=\"headerlink\" title=\"其他字段\"></a>其他字段</h3><ul>\n<li>_meta: 用于存储特定的信息，比如有效版本号、可调用的类函数等</li>\n</ul>\n<h2 id=\"用户定义字段\"><a href=\"#用户定义字段\" class=\"headerlink\" title=\"用户定义字段\"></a>用户定义字段</h2><ul>\n<li><p>定义用户索引的文档字段属性，系统本身是提供动态mapping，也就是说，我们可以在不定义mapping的情况下直接导入，系统会根据用户的第一倒入生成mapping。</p>\n</li>\n<li><p>但如果文档相对复杂，还是建议完整设置动态mapping来避免异常错误。</p>\n</li>\n<li><p>Elasticsearch 为我们提供了常用的字段类型，包括：<code>text</code>, <code>keyword</code>, <code>date</code>, <code>boolean</code>, <code>long</code>, <code>integer</code>, <code>short</code>, <code>byte</code>, <code>double</code>, <code>float</code>, <code>binary</code>， 复杂点的<code>array</code>, <code>object</code>, <code>nested</code>, 用于定位的<code>geo_point</code>, <code>geo_shape</code>, 特殊的<code>ip</code>, <code>completion</code>, <code>token_count</code>, <code>murmur3</code>, <code>attachments</code>, <code>percolator</code>。</p>\n</li>\n<li><p>其中需要注意的是</p>\n<ul>\n<li><code>text</code>和<code>keyword</code>都是string， 前者会被当作文本分析并索引，可用于包含关键词搜索，后者会作为一个整体而被作为完全匹配搜索， 主要用于聚合、排序等功能使用。</li>\n<li><code>array</code> 并非数据类型，仅仅作为数据类型标识。</li>\n<li><code>object</code> 同<code>array</code> 仅作为数据类型标识，无任何意义。</li>\n<li><code>nested</code> 等同于<code>object</code>数据类型，将数据结构的KEY扁平化如： <code>&quot;user.first&quot; : [ &quot;alice&quot;, &quot;john&quot; ],</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常用设置\"><a href=\"#常用设置\" class=\"headerlink\" title=\"常用设置\"></a>常用设置</h2><ul>\n<li><code>index.mapping.total_fields.limit</code> 单个索引中字段数量的上限，默认<code>1000</code>。</li>\n<li><code>index.mapping.depth.limit</code> 索引深度， 在数组和对象类型中的层级数量，默认<code>20</code>。</li>\n<li><code>index.mapping.nested_fields.limit</code> 在对象类型中，扁平化的KEY的层级数量，默认<code>50</code>。</li>\n</ul>\n<h2 id=\"动态mapping\"><a href=\"#动态mapping\" class=\"headerlink\" title=\"动态mapping\"></a>动态mapping</h2><ul>\n<li><p>系统根据用户的第一次倒入的数据生成mapping。</p>\n</li>\n<li><p><code>_default_ mapping</code>: 默认的mapping配置，会被任何新建的mapping继承。</p>\n</li>\n<li><p>以下是JSON字段在保存中默认转换的类型对照： (可配置 <code>&quot;{data_type}_detection&quot;: false</code> 来关闭对应的数据类型检测)</p>\n<pre><code>null : 不保存\ntrue／false : boolean\nfloat : float\ninteger : long\nobject : object \narray : array\ndate : 须符合格式 &quot;yyyy/MM/dd HH:mm:ss Z||yyyy/MM/dd Z&quot; 的会被自动转换\nstring : 如果字段不符合date, long, double, text, 会被当作keyword</code></pre></li>\n</ul>\n<h3 id=\"动态模版\"><a href=\"#动态模版\" class=\"headerlink\" title=\"动态模版\"></a>动态模版</h3><ul>\n<li><p>用户可自定义字段类型检测模版，在倒入数据的时候，根据条件，系统生成对应的mapping配置，示例：</p>\n<pre><code>PUT my_index\n{\n  &quot;mappings&quot;: {\n    &quot;my_type&quot;: {\n      &quot;dynamic_templates&quot;: [\n        {\n          &quot;integers&quot;: {\n            &quot;match_mapping_type&quot;: &quot;long&quot;,\n            &quot;mapping&quot;: {\n              &quot;type&quot;: &quot;integer&quot;\n            }\n          }\n        },\n        {\n          &quot;strings&quot;: {\n            &quot;match_mapping_type&quot;: &quot;string&quot;,\n            &quot;mapping&quot;: {\n              &quot;type&quot;: &quot;text&quot;,\n              &quot;fields&quot;: {\n                &quot;raw&quot;: {\n                  &quot;type&quot;:  &quot;keyword&quot;,\n                  &quot;ignore_above&quot;: 256\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nPUT my_index/my_type/1\n{\n  &quot;my_integer&quot;: 5, \n  &quot;my_string&quot;: &quot;Some string&quot; \n}</code></pre></li>\n<li><p>示例中，<code>match_mapping_type</code> 为条件匹配判断，类型还包含<code>match</code>, <code>match_pattern</code>, <code>unmatch</code>, <code>path_match</code>, <code>path_unmatch</code>。</p>\n</li>\n<li><p><code>mapping</code> 为匹配字段相应的调整内容。</p>\n</li>\n<li><p><code>match</code>, <code>unmatch</code>, <code>path_match</code>, <code>path_unmatch</code> 可用通配符来作为匹配或排除条件</p>\n</li>\n<li><p><code>match_pattern</code> 可调整<code>match</code> 行为来支持正则匹配，如：</p>\n<p>  “match_pattern”: “regex”,</p>\n<pre><code>&quot;match&quot;: &quot;^profit_\\d+$&quot;</code></pre></li>\n<li><p>特殊配置</p>\n<ul>\n<li>字段不用于排序的时候可以<code>&quot;norms&quot;: false,</code>来关闭它。</li>\n<li>字段仅作用于排序聚合而不用于过滤查询的时候可以<code>&quot;index&quot;: false</code>来关闭它。</li>\n</ul>\n</li>\n<li><p>更多示例，可参考官方文档：(dynamic-templates.html) [<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html]\" target=\"_blank\" rel=\"noopener\">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html]</a></p>\n</li>\n</ul>\n<h2 id=\"另外\"><a href=\"#另外\" class=\"headerlink\" title=\"另外\"></a>另外</h2><ul>\n<li>同一个字段名称的配置在不同的type里边必须包含同样的mapping。除了个别字段，如：<code>copy_to</code>, <code>dynamic</code>, <code>enabled</code>, <code>ignore_above</code>, <code>include_in_all</code>, <code>properties</code>。</li>\n</ul>\n<p>官方mapping示例： 没啥好解释的，很简单。具体属性不明白的，查<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html\" target=\"_blank\" rel=\"noopener\">文档</a>比较好。</p>\n<pre><code>{\n  &quot;mappings&quot;: {\n    &quot;user&quot;: { \n      &quot;_all&quot;:       { &quot;enabled&quot;: false  }, \n      &quot;properties&quot;: { \n        &quot;title&quot;:    { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;name&quot;:     { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;age&quot;:      { &quot;type&quot;: &quot;integer&quot; }  \n      }\n    },\n    &quot;blogpost&quot;: { \n      &quot;_all&quot;:       { &quot;enabled&quot;: false  }, \n      &quot;properties&quot;: { \n        &quot;title&quot;:    { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;body&quot;:     { &quot;type&quot;: &quot;text&quot;  }, \n        &quot;user_id&quot;:  {\n          &quot;type&quot;:   &quot;keyword&quot; \n        },\n        &quot;created&quot;:  {\n          &quot;type&quot;:   &quot;date&quot;, \n          &quot;format&quot;: &quot;strict_date_optional_time||epoch_millis&quot;\n        }\n      }\n    }\n  }\n}</code></pre>"},{"layout":"post","title":"Get Start - Elasticsearch 学习实践 (1)","date":"2016-11-17T05:00:00.000Z","description":"Elasticsearch文档学习实践之路","keywords":"Elasticsearch, 文档, 全文检索, 搜索","_content":"\n## 基本概念\n\n* 索引(indix)： 相当于关系型数据库的数据库。\n* 类型(type)：相当于关系型数据库的表。\n* 文档(Document)： 相当于关系型数据库中的每一行数据记录。\n* 字段(field)：相当于数据类型，例如字符串、整数、日期等。\n* 映射(mapping)： 用于定义文档及其内部属性字段如何被索引及搜索的。\n* 节点(Node)：单台服务器称为一个节点，默认情况下最好配置2+台保证可用性。\n* 分片索引(Shard)：Elasticsearch会把数据分发到多台服务器上存储。这个过程成为分片(Sharding)。\n* 索引副本(Replica)：副本主要是主分片的复制。在搜索请求阻塞在单个节点时，它可以像原来的主分片一样处理用户搜索请求。\n\n## 安装\n\n### 使用 Docker 安装\n\n* 文件目录结构：\n\n        Dockerfile // Docker安装文件\n        config/\n            elasticsearch.yml // Elasticsearch的基本配置\n            license.json // 在官网注册的Basic License\n            x-pack/\n                roles.yml // 定义角色\n\n* `Dockerfile`\n\n        FROM elasticsearch:5.2.0\n        \n        # Define working directory.\n        WORKDIR /tmp\n        \n        # Define default command.\n        # CMD [\"/elasticsearch/bin/elasticsearch\"]\n        RUN /usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack\n        \n        # 使用IK分词器\n        ENV IK_VERSION 5.2.0\n        RUN wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v$IK_VERSION/elasticsearch-analysis-ik-$IK_VERSION.zip\n        RUN unzip elasticsearch-analysis-ik-$IK_VERSION.zip -d /usr/share/elasticsearch/plugins/ik/\n        RUN rm -f elasticsearch-analysis-ik-$IK_VERSION.zip\n        \n        # Mount elasticsearch.yml config\n        # This is a tricky problem, x-pack configuration path is /etc/elasticsearch/ which follow the offical document,\n        # but elasticsearch configuration path is /usr/share/elasticsearch/config. I've asked this issue in Github, still waiting for the answer.\n        # for now, just put them under both paths.\n        ADD config /usr/share/elasticsearch/config\n        ADD config /etc/elasticsearch\n        \n        RUN set -ex \\\n        \t&& for path in \\\n        \t\t# /data/elasticsearch \\\n                /etc/elasticsearch \\\n                /data/logs/elasticsearch \\\n        \t; do \\\n        \t\tmkdir -p \"$path\"; \\\n        \t\tchown -R elasticsearch:elasticsearch \"$path\"; \\\n        \tdone\n        \n        CMD [\"elasticsearch\"]\n        \n        # Expose ports.\n        #   - 9200: HTTP\n        #   - 9300: transport\n        EXPOSE 9200\n        EXPOSE 9300\n        \n* `elastcisearch.yml`\n\n        network.host: 0.0.0.0\n        path:\n          data: /usr/share/elasticsearch/data\n          logs: /data/logs/elasticsearch\n        \n        node.name:   assets\n        cluster.name: assets-dev-1\n        \n        xpack.security.audit.enabled: true\n        xpack.security.authc:\n        # Gold 以上 license 才支持 realms，所以此处只能使用匿名用户\n          anonymous:\n            username: anonymous_user\n            roles: assets_rw\n            authz_exception: true\n          \n          # realms:\n          #   file1:\n          #     type: file\n          #     order: 0\n          #     cache.hash_algo: md5\n          #   native1:\n          #     type: native\n          #     order: 1\n    \n* `x-pack/roles.yml`\n\n        assets_rw:\n          run_as: [ 'elastic' ]\n          cluster: [ 'all' ]\n          \"indices\":\n            - names: [ '*' ]\n              privileges: [ 'all' ] \n              \n* `license.json`\n    * 注册地址：`https://www.elastic.co/subscriptions`， 获得Basic License后便可使用 Kibana来监控数据\n    * 安装方法：需跑起来Docker Container后，在服务器执行`curl -XPUT -u elastic 'http://<host>:<port>/_xpack/license' -d @/path/to/license.json` \n\n","source":"_posts/2016-11-17-elasticsearch-01-getstart.md","raw":"---\nlayout: post\ntitle: Get Start - Elasticsearch 学习实践 (1)\ncategory: 编程学习\ntags: [Elasticsearch]\ndate: 2016-11-17\ndescription: Elasticsearch文档学习实践之路\nkeywords: Elasticsearch, 文档, 全文检索, 搜索\n---\n\n## 基本概念\n\n* 索引(indix)： 相当于关系型数据库的数据库。\n* 类型(type)：相当于关系型数据库的表。\n* 文档(Document)： 相当于关系型数据库中的每一行数据记录。\n* 字段(field)：相当于数据类型，例如字符串、整数、日期等。\n* 映射(mapping)： 用于定义文档及其内部属性字段如何被索引及搜索的。\n* 节点(Node)：单台服务器称为一个节点，默认情况下最好配置2+台保证可用性。\n* 分片索引(Shard)：Elasticsearch会把数据分发到多台服务器上存储。这个过程成为分片(Sharding)。\n* 索引副本(Replica)：副本主要是主分片的复制。在搜索请求阻塞在单个节点时，它可以像原来的主分片一样处理用户搜索请求。\n\n## 安装\n\n### 使用 Docker 安装\n\n* 文件目录结构：\n\n        Dockerfile // Docker安装文件\n        config/\n            elasticsearch.yml // Elasticsearch的基本配置\n            license.json // 在官网注册的Basic License\n            x-pack/\n                roles.yml // 定义角色\n\n* `Dockerfile`\n\n        FROM elasticsearch:5.2.0\n        \n        # Define working directory.\n        WORKDIR /tmp\n        \n        # Define default command.\n        # CMD [\"/elasticsearch/bin/elasticsearch\"]\n        RUN /usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack\n        \n        # 使用IK分词器\n        ENV IK_VERSION 5.2.0\n        RUN wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v$IK_VERSION/elasticsearch-analysis-ik-$IK_VERSION.zip\n        RUN unzip elasticsearch-analysis-ik-$IK_VERSION.zip -d /usr/share/elasticsearch/plugins/ik/\n        RUN rm -f elasticsearch-analysis-ik-$IK_VERSION.zip\n        \n        # Mount elasticsearch.yml config\n        # This is a tricky problem, x-pack configuration path is /etc/elasticsearch/ which follow the offical document,\n        # but elasticsearch configuration path is /usr/share/elasticsearch/config. I've asked this issue in Github, still waiting for the answer.\n        # for now, just put them under both paths.\n        ADD config /usr/share/elasticsearch/config\n        ADD config /etc/elasticsearch\n        \n        RUN set -ex \\\n        \t&& for path in \\\n        \t\t# /data/elasticsearch \\\n                /etc/elasticsearch \\\n                /data/logs/elasticsearch \\\n        \t; do \\\n        \t\tmkdir -p \"$path\"; \\\n        \t\tchown -R elasticsearch:elasticsearch \"$path\"; \\\n        \tdone\n        \n        CMD [\"elasticsearch\"]\n        \n        # Expose ports.\n        #   - 9200: HTTP\n        #   - 9300: transport\n        EXPOSE 9200\n        EXPOSE 9300\n        \n* `elastcisearch.yml`\n\n        network.host: 0.0.0.0\n        path:\n          data: /usr/share/elasticsearch/data\n          logs: /data/logs/elasticsearch\n        \n        node.name:   assets\n        cluster.name: assets-dev-1\n        \n        xpack.security.audit.enabled: true\n        xpack.security.authc:\n        # Gold 以上 license 才支持 realms，所以此处只能使用匿名用户\n          anonymous:\n            username: anonymous_user\n            roles: assets_rw\n            authz_exception: true\n          \n          # realms:\n          #   file1:\n          #     type: file\n          #     order: 0\n          #     cache.hash_algo: md5\n          #   native1:\n          #     type: native\n          #     order: 1\n    \n* `x-pack/roles.yml`\n\n        assets_rw:\n          run_as: [ 'elastic' ]\n          cluster: [ 'all' ]\n          \"indices\":\n            - names: [ '*' ]\n              privileges: [ 'all' ] \n              \n* `license.json`\n    * 注册地址：`https://www.elastic.co/subscriptions`， 获得Basic License后便可使用 Kibana来监控数据\n    * 安装方法：需跑起来Docker Container后，在服务器执行`curl -XPUT -u elastic 'http://<host>:<port>/_xpack/license' -d @/path/to/license.json` \n\n","slug":"2016-11-17-elasticsearch-01-getstart","published":1,"updated":"2020-04-19T02:56:27.781Z","_id":"ck96ffjar001rrmp9b5y39w8k","comments":1,"photos":[],"link":"","content":"<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>索引(indix)： 相当于关系型数据库的数据库。</li>\n<li>类型(type)：相当于关系型数据库的表。</li>\n<li>文档(Document)： 相当于关系型数据库中的每一行数据记录。</li>\n<li>字段(field)：相当于数据类型，例如字符串、整数、日期等。</li>\n<li>映射(mapping)： 用于定义文档及其内部属性字段如何被索引及搜索的。</li>\n<li>节点(Node)：单台服务器称为一个节点，默认情况下最好配置2+台保证可用性。</li>\n<li>分片索引(Shard)：Elasticsearch会把数据分发到多台服务器上存储。这个过程成为分片(Sharding)。</li>\n<li>索引副本(Replica)：副本主要是主分片的复制。在搜索请求阻塞在单个节点时，它可以像原来的主分片一样处理用户搜索请求。</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"使用-Docker-安装\"><a href=\"#使用-Docker-安装\" class=\"headerlink\" title=\"使用 Docker 安装\"></a>使用 Docker 安装</h3><ul>\n<li><p>文件目录结构：</p>\n<pre><code>Dockerfile // Docker安装文件\nconfig/\n    elasticsearch.yml // Elasticsearch的基本配置\n    license.json // 在官网注册的Basic License\n    x-pack/\n        roles.yml // 定义角色</code></pre></li>\n<li><p><code>Dockerfile</code></p>\n<pre><code>FROM elasticsearch:5.2.0\n\n# Define working directory.\nWORKDIR /tmp\n\n# Define default command.\n# CMD [&quot;/elasticsearch/bin/elasticsearch&quot;]\nRUN /usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack\n\n# 使用IK分词器\nENV IK_VERSION 5.2.0\nRUN wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v$IK_VERSION/elasticsearch-analysis-ik-$IK_VERSION.zip\nRUN unzip elasticsearch-analysis-ik-$IK_VERSION.zip -d /usr/share/elasticsearch/plugins/ik/\nRUN rm -f elasticsearch-analysis-ik-$IK_VERSION.zip\n\n# Mount elasticsearch.yml config\n# This is a tricky problem, x-pack configuration path is /etc/elasticsearch/ which follow the offical document,\n# but elasticsearch configuration path is /usr/share/elasticsearch/config. I&apos;ve asked this issue in Github, still waiting for the answer.\n# for now, just put them under both paths.\nADD config /usr/share/elasticsearch/config\nADD config /etc/elasticsearch\n\nRUN set -ex \\\n    &amp;&amp; for path in \\\n        # /data/elasticsearch \\\n        /etc/elasticsearch \\\n        /data/logs/elasticsearch \\\n    ; do \\\n        mkdir -p &quot;$path&quot;; \\\n        chown -R elasticsearch:elasticsearch &quot;$path&quot;; \\\n    done\n\nCMD [&quot;elasticsearch&quot;]\n\n# Expose ports.\n#   - 9200: HTTP\n#   - 9300: transport\nEXPOSE 9200\nEXPOSE 9300</code></pre></li>\n<li><p><code>elastcisearch.yml</code></p>\n<pre><code>network.host: 0.0.0.0\npath:\n  data: /usr/share/elasticsearch/data\n  logs: /data/logs/elasticsearch\n\nnode.name:   assets\ncluster.name: assets-dev-1\n\nxpack.security.audit.enabled: true\nxpack.security.authc:\n# Gold 以上 license 才支持 realms，所以此处只能使用匿名用户\n  anonymous:\n    username: anonymous_user\n    roles: assets_rw\n    authz_exception: true\n\n  # realms:\n  #   file1:\n  #     type: file\n  #     order: 0\n  #     cache.hash_algo: md5\n  #   native1:\n  #     type: native\n  #     order: 1</code></pre></li>\n<li><p><code>x-pack/roles.yml</code></p>\n<pre><code>assets_rw:\n  run_as: [ &apos;elastic&apos; ]\n  cluster: [ &apos;all&apos; ]\n  &quot;indices&quot;:\n    - names: [ &apos;*&apos; ]\n      privileges: [ &apos;all&apos; ] </code></pre></li>\n<li><p><code>license.json</code></p>\n<ul>\n<li>注册地址：<code>https://www.elastic.co/subscriptions</code>， 获得Basic License后便可使用 Kibana来监控数据</li>\n<li>安装方法：需跑起来Docker Container后，在服务器执行<code>curl -XPUT -u elastic &#39;http://&lt;host&gt;:&lt;port&gt;/_xpack/license&#39; -d @/path/to/license.json</code> </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>索引(indix)： 相当于关系型数据库的数据库。</li>\n<li>类型(type)：相当于关系型数据库的表。</li>\n<li>文档(Document)： 相当于关系型数据库中的每一行数据记录。</li>\n<li>字段(field)：相当于数据类型，例如字符串、整数、日期等。</li>\n<li>映射(mapping)： 用于定义文档及其内部属性字段如何被索引及搜索的。</li>\n<li>节点(Node)：单台服务器称为一个节点，默认情况下最好配置2+台保证可用性。</li>\n<li>分片索引(Shard)：Elasticsearch会把数据分发到多台服务器上存储。这个过程成为分片(Sharding)。</li>\n<li>索引副本(Replica)：副本主要是主分片的复制。在搜索请求阻塞在单个节点时，它可以像原来的主分片一样处理用户搜索请求。</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"使用-Docker-安装\"><a href=\"#使用-Docker-安装\" class=\"headerlink\" title=\"使用 Docker 安装\"></a>使用 Docker 安装</h3><ul>\n<li><p>文件目录结构：</p>\n<pre><code>Dockerfile // Docker安装文件\nconfig/\n    elasticsearch.yml // Elasticsearch的基本配置\n    license.json // 在官网注册的Basic License\n    x-pack/\n        roles.yml // 定义角色</code></pre></li>\n<li><p><code>Dockerfile</code></p>\n<pre><code>FROM elasticsearch:5.2.0\n\n# Define working directory.\nWORKDIR /tmp\n\n# Define default command.\n# CMD [&quot;/elasticsearch/bin/elasticsearch&quot;]\nRUN /usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack\n\n# 使用IK分词器\nENV IK_VERSION 5.2.0\nRUN wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v$IK_VERSION/elasticsearch-analysis-ik-$IK_VERSION.zip\nRUN unzip elasticsearch-analysis-ik-$IK_VERSION.zip -d /usr/share/elasticsearch/plugins/ik/\nRUN rm -f elasticsearch-analysis-ik-$IK_VERSION.zip\n\n# Mount elasticsearch.yml config\n# This is a tricky problem, x-pack configuration path is /etc/elasticsearch/ which follow the offical document,\n# but elasticsearch configuration path is /usr/share/elasticsearch/config. I&apos;ve asked this issue in Github, still waiting for the answer.\n# for now, just put them under both paths.\nADD config /usr/share/elasticsearch/config\nADD config /etc/elasticsearch\n\nRUN set -ex \\\n    &amp;&amp; for path in \\\n        # /data/elasticsearch \\\n        /etc/elasticsearch \\\n        /data/logs/elasticsearch \\\n    ; do \\\n        mkdir -p &quot;$path&quot;; \\\n        chown -R elasticsearch:elasticsearch &quot;$path&quot;; \\\n    done\n\nCMD [&quot;elasticsearch&quot;]\n\n# Expose ports.\n#   - 9200: HTTP\n#   - 9300: transport\nEXPOSE 9200\nEXPOSE 9300</code></pre></li>\n<li><p><code>elastcisearch.yml</code></p>\n<pre><code>network.host: 0.0.0.0\npath:\n  data: /usr/share/elasticsearch/data\n  logs: /data/logs/elasticsearch\n\nnode.name:   assets\ncluster.name: assets-dev-1\n\nxpack.security.audit.enabled: true\nxpack.security.authc:\n# Gold 以上 license 才支持 realms，所以此处只能使用匿名用户\n  anonymous:\n    username: anonymous_user\n    roles: assets_rw\n    authz_exception: true\n\n  # realms:\n  #   file1:\n  #     type: file\n  #     order: 0\n  #     cache.hash_algo: md5\n  #   native1:\n  #     type: native\n  #     order: 1</code></pre></li>\n<li><p><code>x-pack/roles.yml</code></p>\n<pre><code>assets_rw:\n  run_as: [ &apos;elastic&apos; ]\n  cluster: [ &apos;all&apos; ]\n  &quot;indices&quot;:\n    - names: [ &apos;*&apos; ]\n      privileges: [ &apos;all&apos; ] </code></pre></li>\n<li><p><code>license.json</code></p>\n<ul>\n<li>注册地址：<code>https://www.elastic.co/subscriptions</code>， 获得Basic License后便可使用 Kibana来监控数据</li>\n<li>安装方法：需跑起来Docker Container后，在服务器执行<code>curl -XPUT -u elastic &#39;http://&lt;host&gt;:&lt;port&gt;/_xpack/license&#39; -d @/path/to/license.json</code> </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"提升生产效率的工具集锦(APP)","date":"2016-12-11T05:00:00.000Z","description":null,"keywords":"Alfred 3, Flycut, Flycut, f.lux, Spectacle, CheatSheets, Homebrew, Aria2, Sublime Text 3, iTerm2, Charles, Dash","_content":"\n## 按键说明\n\n* ⌘ – Command Key\n* ⇥ – Tab Key\n* ⌃ – Control Key\n* ⌥ – Option Key\n* ⇧ – Shift Key\n* ⏎ – Return Key\n* ← Left Arrow Key\n* → Right Arrow Key\n\n## APPS\n\n### Alfred 3\n\n强大的启动器, 拥有各种快捷入口, 不仅仅是用来代替Spotlight。增强的workflow更让繁琐的操作变得简单起来。\n\n* 下载: [官网](https://www.alfredapp.com/)\n* Powerpack 需要付费, £19起\n* 可设置启动命令, 本人使用 `⌥+⌘`, 好像是默认的。\n* 本人会禁用掉Spotlight及其索引功能来提升性能:\n   * 打开 系统设置 - Spotlight\n   * 取消掉所有在Spotlight中的搜索结果，以及建议查找的功能\n   * 左下角选择键盘快捷键, 取消两个已选中两个搜索\n\n### Flycut\n\n剪切板管理器\n\n* 下载: [App Store](http://itunes.apple.com/us/app/flycut-clipboard-manager/id442160987?mt=12) / [Github](https://github.com/TermiT/Flycut)\n* 快捷键：`⇧+⌘+p`, 可以不停地按`p`来切换，或者使用`← →`方向键\n* 注：Alfred 3也提供了剪切板的功能，个人觉得不够便捷，在使用Flycut的时候，可以考虑给关了。\n* 可设置为开机启动\n\n### f.lux\n\n护眼神器。根据一天的时间来调节屏幕的亮度，在晚上屏幕会变成暖色调。\n\n* 下载： [官网](https://justgetflux.com/)\n* 可设置为开机启动\n\n### Spectacle\n\n快捷键调节窗口大小，比如: `⌥+⌘+F`全屏, `⌃+⌘+←` 左三分之一屏\n\n* 下载: [官网](https://www.spectacleapp.com/)\n* 可设置为开机启动\n\n### CheatSheets\n\n按住`⌘`显示当前应用的所有快捷键\n\n* 下载: [官网](https://cheatsheetapp.com/CheatSheet/?lang=en)\n\n### Homebrew\n\n快速安装软件的管理器\n\n* 下载: [官网](http://brew.sh/)\n* 安装: `/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"`\n\n### Aria2\n\n实现百度云, 115, 迅雷离线等满速下载。Aria2是个命令行管理工作，所以默认安装后需要做一些配置才能运行。不想折腾的可直接下载[yangshun1029](https://github.com/yangshun1029)封装好的[Aria2gui](https://github.com/yangshun1029/aria2gui).\n\n以下是各种折腾的方案。\n\n* 下载: [官网](https://aria2.github.io/) ／ 安装: `brew install aria2`\n\n* 使用方法有三种。命令行、Web+命令行、Alfred Workflow。\n   * 命令行方面使用可见[官方文档 ](https://aria2.github.io/)\n   * Web和Alfred Workflow管理见下文介绍\n\n* 嵌入式 Chrome 插件: [`115`](https://github.com/acgotaku/115), [`百度云`](https://github.com/acgotaku/BaiduExporter)。 这两个由[`雪月秋水君`](https://github.com/acgotaku/)开发的插件可以直接嵌入百度云和115网盘网页内，实现点击即可转到Aria2下载，非常方便。\n\n* Web 管理界面:\n    1. 首先命令行启动 `aria2c --enable-rpc --rpc-listen-all`\n    2. http://binux.github.io/yaaw/demo/\n        * 需要设置JSON-RPC Path: `http://localhost:6800/jsonrpc`\n    3. 使用[`雪月秋水君`](https://github.com/acgotaku/)开发的Chrome插件: [YAAW](https://github.com/acgotaku/YAAW-for-Chrome)\n\n* Workflow for Alfred: [https://github.com/Wildog/Ariafred](https://github.com/Wildog/Ariafred)\n    * [官方文档](http://wil.dog/ariafred/)\n    * 注: Workflow 属于powerpack付费功能\n    * 常用命令:\n        * 添加任务: 输入 `add` 然后追加任务地址\n            * BT种子任务需要执行文件动作，然后选择`Add BT do...load to Aria2\n        * 移除任务: 输入 `rm` 然后选择任务后 `回车`\n        * 暂停/恢复任务: 输入 `pause`/`resume` 然后选择任务后 `回车`\n        * 清除所有任务: 输入`clear` 然后 `回车`\n* 配置\n    * 个人觉得本地运行没必要搞太复杂就不再多写了。有兴趣的可参照[`雪月秋水君`](https://github.com/acgotaku/)提供的`aria2.conf`:\n\n            #用户名\n            #rpc-user=user\n            #密码\n            #rpc-passwd=passwd\n            #上面的认证方式不建议使用,建议使用下面的token方式\n            #设置加密的密钥\n            #rpc-secret=token\n            #允许rpc\n            enable-rpc=true\n            #允许所有来源, web界面跨域权限需要\n            rpc-allow-origin-all=true\n            #允许外部访问，false的话只监听本地端口\n            rpc-listen-all=true\n            #RPC端口, 仅当默认端口被占用时修改\n            #rpc-listen-port=6800\n            #最大同时下载数(任务数), 路由建议值: 3\n            max-concurrent-downloads=5\n            #断点续传\n            continue=true\n            #同服务器连接数\n            max-connection-per-server=5\n            #最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\n            min-split-size=10M\n            #单文件最大线程数, 路由建议值: 5\n            split=10\n            #下载速度限制\n            max-overall-download-limit=0\n            #单文件速度限制\n            max-download-limit=0\n            #上传速度限制\n            max-overall-upload-limit=0\n            #单文件速度限制\n            max-upload-limit=0\n            #断开速度过慢的连接\n            #lowest-speed-limit=0\n            #验证用，需要1.16.1之后的release版本\n            #referer=*\n            #文件保存路径, 默认为当前启动位置\n            dir=/Users/xxx/Downloads\n            #文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本\n            #disk-cache=0\n            #另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)\n            #enable-mmap=true\n            #文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n            #所需时间 none < falloc ? trunc « prealloc, falloc和trunc需要文件系统和内核支持\n            file-allocation=prealloc\n    * 在启动Aria2的时候别忘了加上配置的绝对路径，例: `aria2c --conf-path=\"/Users/username/aria2.conf\"`\n\n### 其他\n* 1Password - 最好用的密码管理软件\n* PDF Expert - PDF编辑阅读器\n* Fantisical2 - 增强版日历，集成了提醒事项\n* MWeb - markdown编辑软件，可实时预览，且支持保存到evernote，导出为pdf、docx等格式。此外还支持直接在Wordpress、Mediun等网站发布。\n* Typora - 超简洁等markdown编辑软件，单一窗口，实时预览。\n* OmniFocus 2 - 最强大的GTD管理工具\n* Pandoc -  命令行文件格式互转工具，格式包括docx,markdown, epub, pdf等，官网：[http://pandoc.org/](http://pandoc.org/)\n\n\n","source":"_posts/2016-12-11-be-productive-for-mac-1.md","raw":"---\nlayout: post\ntitle: 提升生产效率的工具集锦(APP)\ncategory: 生活随想\ntags: [效率工具]\ndate: 2016-12-11\ndescription:\nkeywords: Alfred 3, Flycut, Flycut, f.lux, Spectacle, CheatSheets, Homebrew, Aria2, Sublime Text 3, iTerm2, Charles, Dash\n---\n\n## 按键说明\n\n* ⌘ – Command Key\n* ⇥ – Tab Key\n* ⌃ – Control Key\n* ⌥ – Option Key\n* ⇧ – Shift Key\n* ⏎ – Return Key\n* ← Left Arrow Key\n* → Right Arrow Key\n\n## APPS\n\n### Alfred 3\n\n强大的启动器, 拥有各种快捷入口, 不仅仅是用来代替Spotlight。增强的workflow更让繁琐的操作变得简单起来。\n\n* 下载: [官网](https://www.alfredapp.com/)\n* Powerpack 需要付费, £19起\n* 可设置启动命令, 本人使用 `⌥+⌘`, 好像是默认的。\n* 本人会禁用掉Spotlight及其索引功能来提升性能:\n   * 打开 系统设置 - Spotlight\n   * 取消掉所有在Spotlight中的搜索结果，以及建议查找的功能\n   * 左下角选择键盘快捷键, 取消两个已选中两个搜索\n\n### Flycut\n\n剪切板管理器\n\n* 下载: [App Store](http://itunes.apple.com/us/app/flycut-clipboard-manager/id442160987?mt=12) / [Github](https://github.com/TermiT/Flycut)\n* 快捷键：`⇧+⌘+p`, 可以不停地按`p`来切换，或者使用`← →`方向键\n* 注：Alfred 3也提供了剪切板的功能，个人觉得不够便捷，在使用Flycut的时候，可以考虑给关了。\n* 可设置为开机启动\n\n### f.lux\n\n护眼神器。根据一天的时间来调节屏幕的亮度，在晚上屏幕会变成暖色调。\n\n* 下载： [官网](https://justgetflux.com/)\n* 可设置为开机启动\n\n### Spectacle\n\n快捷键调节窗口大小，比如: `⌥+⌘+F`全屏, `⌃+⌘+←` 左三分之一屏\n\n* 下载: [官网](https://www.spectacleapp.com/)\n* 可设置为开机启动\n\n### CheatSheets\n\n按住`⌘`显示当前应用的所有快捷键\n\n* 下载: [官网](https://cheatsheetapp.com/CheatSheet/?lang=en)\n\n### Homebrew\n\n快速安装软件的管理器\n\n* 下载: [官网](http://brew.sh/)\n* 安装: `/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"`\n\n### Aria2\n\n实现百度云, 115, 迅雷离线等满速下载。Aria2是个命令行管理工作，所以默认安装后需要做一些配置才能运行。不想折腾的可直接下载[yangshun1029](https://github.com/yangshun1029)封装好的[Aria2gui](https://github.com/yangshun1029/aria2gui).\n\n以下是各种折腾的方案。\n\n* 下载: [官网](https://aria2.github.io/) ／ 安装: `brew install aria2`\n\n* 使用方法有三种。命令行、Web+命令行、Alfred Workflow。\n   * 命令行方面使用可见[官方文档 ](https://aria2.github.io/)\n   * Web和Alfred Workflow管理见下文介绍\n\n* 嵌入式 Chrome 插件: [`115`](https://github.com/acgotaku/115), [`百度云`](https://github.com/acgotaku/BaiduExporter)。 这两个由[`雪月秋水君`](https://github.com/acgotaku/)开发的插件可以直接嵌入百度云和115网盘网页内，实现点击即可转到Aria2下载，非常方便。\n\n* Web 管理界面:\n    1. 首先命令行启动 `aria2c --enable-rpc --rpc-listen-all`\n    2. http://binux.github.io/yaaw/demo/\n        * 需要设置JSON-RPC Path: `http://localhost:6800/jsonrpc`\n    3. 使用[`雪月秋水君`](https://github.com/acgotaku/)开发的Chrome插件: [YAAW](https://github.com/acgotaku/YAAW-for-Chrome)\n\n* Workflow for Alfred: [https://github.com/Wildog/Ariafred](https://github.com/Wildog/Ariafred)\n    * [官方文档](http://wil.dog/ariafred/)\n    * 注: Workflow 属于powerpack付费功能\n    * 常用命令:\n        * 添加任务: 输入 `add` 然后追加任务地址\n            * BT种子任务需要执行文件动作，然后选择`Add BT do...load to Aria2\n        * 移除任务: 输入 `rm` 然后选择任务后 `回车`\n        * 暂停/恢复任务: 输入 `pause`/`resume` 然后选择任务后 `回车`\n        * 清除所有任务: 输入`clear` 然后 `回车`\n* 配置\n    * 个人觉得本地运行没必要搞太复杂就不再多写了。有兴趣的可参照[`雪月秋水君`](https://github.com/acgotaku/)提供的`aria2.conf`:\n\n            #用户名\n            #rpc-user=user\n            #密码\n            #rpc-passwd=passwd\n            #上面的认证方式不建议使用,建议使用下面的token方式\n            #设置加密的密钥\n            #rpc-secret=token\n            #允许rpc\n            enable-rpc=true\n            #允许所有来源, web界面跨域权限需要\n            rpc-allow-origin-all=true\n            #允许外部访问，false的话只监听本地端口\n            rpc-listen-all=true\n            #RPC端口, 仅当默认端口被占用时修改\n            #rpc-listen-port=6800\n            #最大同时下载数(任务数), 路由建议值: 3\n            max-concurrent-downloads=5\n            #断点续传\n            continue=true\n            #同服务器连接数\n            max-connection-per-server=5\n            #最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\n            min-split-size=10M\n            #单文件最大线程数, 路由建议值: 5\n            split=10\n            #下载速度限制\n            max-overall-download-limit=0\n            #单文件速度限制\n            max-download-limit=0\n            #上传速度限制\n            max-overall-upload-limit=0\n            #单文件速度限制\n            max-upload-limit=0\n            #断开速度过慢的连接\n            #lowest-speed-limit=0\n            #验证用，需要1.16.1之后的release版本\n            #referer=*\n            #文件保存路径, 默认为当前启动位置\n            dir=/Users/xxx/Downloads\n            #文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本\n            #disk-cache=0\n            #另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)\n            #enable-mmap=true\n            #文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n            #所需时间 none < falloc ? trunc « prealloc, falloc和trunc需要文件系统和内核支持\n            file-allocation=prealloc\n    * 在启动Aria2的时候别忘了加上配置的绝对路径，例: `aria2c --conf-path=\"/Users/username/aria2.conf\"`\n\n### 其他\n* 1Password - 最好用的密码管理软件\n* PDF Expert - PDF编辑阅读器\n* Fantisical2 - 增强版日历，集成了提醒事项\n* MWeb - markdown编辑软件，可实时预览，且支持保存到evernote，导出为pdf、docx等格式。此外还支持直接在Wordpress、Mediun等网站发布。\n* Typora - 超简洁等markdown编辑软件，单一窗口，实时预览。\n* OmniFocus 2 - 最强大的GTD管理工具\n* Pandoc -  命令行文件格式互转工具，格式包括docx,markdown, epub, pdf等，官网：[http://pandoc.org/](http://pandoc.org/)\n\n\n","slug":"2016-12-11-be-productive-for-mac-1","published":1,"updated":"2020-04-19T02:56:17.341Z","_id":"ck96ffjas001urmp94zv0bzt8","comments":1,"photos":[],"link":"","content":"<h2 id=\"按键说明\"><a href=\"#按键说明\" class=\"headerlink\" title=\"按键说明\"></a>按键说明</h2><ul>\n<li>⌘ – Command Key</li>\n<li>⇥ – Tab Key</li>\n<li>⌃ – Control Key</li>\n<li>⌥ – Option Key</li>\n<li>⇧ – Shift Key</li>\n<li>⏎ – Return Key</li>\n<li>← Left Arrow Key</li>\n<li>→ Right Arrow Key</li>\n</ul>\n<h2 id=\"APPS\"><a href=\"#APPS\" class=\"headerlink\" title=\"APPS\"></a>APPS</h2><h3 id=\"Alfred-3\"><a href=\"#Alfred-3\" class=\"headerlink\" title=\"Alfred 3\"></a>Alfred 3</h3><p>强大的启动器, 拥有各种快捷入口, 不仅仅是用来代替Spotlight。增强的workflow更让繁琐的操作变得简单起来。</p>\n<ul>\n<li>下载: <a href=\"https://www.alfredapp.com/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>Powerpack 需要付费, £19起</li>\n<li>可设置启动命令, 本人使用 <code>⌥+⌘</code>, 好像是默认的。</li>\n<li>本人会禁用掉Spotlight及其索引功能来提升性能:<ul>\n<li>打开 系统设置 - Spotlight</li>\n<li>取消掉所有在Spotlight中的搜索结果，以及建议查找的功能</li>\n<li>左下角选择键盘快捷键, 取消两个已选中两个搜索</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Flycut\"><a href=\"#Flycut\" class=\"headerlink\" title=\"Flycut\"></a>Flycut</h3><p>剪切板管理器</p>\n<ul>\n<li>下载: <a href=\"http://itunes.apple.com/us/app/flycut-clipboard-manager/id442160987?mt=12\" target=\"_blank\" rel=\"noopener\">App Store</a> / <a href=\"https://github.com/TermiT/Flycut\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li>快捷键：<code>⇧+⌘+p</code>, 可以不停地按<code>p</code>来切换，或者使用<code>← →</code>方向键</li>\n<li>注：Alfred 3也提供了剪切板的功能，个人觉得不够便捷，在使用Flycut的时候，可以考虑给关了。</li>\n<li>可设置为开机启动</li>\n</ul>\n<h3 id=\"f-lux\"><a href=\"#f-lux\" class=\"headerlink\" title=\"f.lux\"></a>f.lux</h3><p>护眼神器。根据一天的时间来调节屏幕的亮度，在晚上屏幕会变成暖色调。</p>\n<ul>\n<li>下载： <a href=\"https://justgetflux.com/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>可设置为开机启动</li>\n</ul>\n<h3 id=\"Spectacle\"><a href=\"#Spectacle\" class=\"headerlink\" title=\"Spectacle\"></a>Spectacle</h3><p>快捷键调节窗口大小，比如: <code>⌥+⌘+F</code>全屏, <code>⌃+⌘+←</code> 左三分之一屏</p>\n<ul>\n<li>下载: <a href=\"https://www.spectacleapp.com/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>可设置为开机启动</li>\n</ul>\n<h3 id=\"CheatSheets\"><a href=\"#CheatSheets\" class=\"headerlink\" title=\"CheatSheets\"></a>CheatSheets</h3><p>按住<code>⌘</code>显示当前应用的所有快捷键</p>\n<ul>\n<li>下载: <a href=\"https://cheatsheetapp.com/CheatSheet/?lang=en\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n</ul>\n<h3 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a>Homebrew</h3><p>快速安装软件的管理器</p>\n<ul>\n<li>下载: <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>安装: <code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li>\n</ul>\n<h3 id=\"Aria2\"><a href=\"#Aria2\" class=\"headerlink\" title=\"Aria2\"></a>Aria2</h3><p>实现百度云, 115, 迅雷离线等满速下载。Aria2是个命令行管理工作，所以默认安装后需要做一些配置才能运行。不想折腾的可直接下载<a href=\"https://github.com/yangshun1029\" target=\"_blank\" rel=\"noopener\">yangshun1029</a>封装好的<a href=\"https://github.com/yangshun1029/aria2gui\" target=\"_blank\" rel=\"noopener\">Aria2gui</a>.</p>\n<p>以下是各种折腾的方案。</p>\n<ul>\n<li><p>下载: <a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"noopener\">官网</a> ／ 安装: <code>brew install aria2</code></p>\n</li>\n<li><p>使用方法有三种。命令行、Web+命令行、Alfred Workflow。</p>\n<ul>\n<li>命令行方面使用可见<a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"noopener\">官方文档 </a></li>\n<li>Web和Alfred Workflow管理见下文介绍</li>\n</ul>\n</li>\n<li><p>嵌入式 Chrome 插件: <a href=\"https://github.com/acgotaku/115\" target=\"_blank\" rel=\"noopener\"><code>115</code></a>, <a href=\"https://github.com/acgotaku/BaiduExporter\" target=\"_blank\" rel=\"noopener\"><code>百度云</code></a>。 这两个由<a href=\"https://github.com/acgotaku/\" target=\"_blank\" rel=\"noopener\"><code>雪月秋水君</code></a>开发的插件可以直接嵌入百度云和115网盘网页内，实现点击即可转到Aria2下载，非常方便。</p>\n</li>\n<li><p>Web 管理界面:</p>\n<ol>\n<li>首先命令行启动 <code>aria2c --enable-rpc --rpc-listen-all</code></li>\n<li><a href=\"http://binux.github.io/yaaw/demo/\" target=\"_blank\" rel=\"noopener\">http://binux.github.io/yaaw/demo/</a><ul>\n<li>需要设置JSON-RPC Path: <code>http://localhost:6800/jsonrpc</code></li>\n</ul>\n</li>\n<li>使用<a href=\"https://github.com/acgotaku/\" target=\"_blank\" rel=\"noopener\"><code>雪月秋水君</code></a>开发的Chrome插件: <a href=\"https://github.com/acgotaku/YAAW-for-Chrome\" target=\"_blank\" rel=\"noopener\">YAAW</a></li>\n</ol>\n</li>\n<li><p>Workflow for Alfred: <a href=\"https://github.com/Wildog/Ariafred\" target=\"_blank\" rel=\"noopener\">https://github.com/Wildog/Ariafred</a></p>\n<ul>\n<li><a href=\"http://wil.dog/ariafred/\" target=\"_blank\" rel=\"noopener\">官方文档</a></li>\n<li>注: Workflow 属于powerpack付费功能</li>\n<li>常用命令:<ul>\n<li>添加任务: 输入 <code>add</code> 然后追加任务地址<ul>\n<li>BT种子任务需要执行文件动作，然后选择`Add BT do…load to Aria2</li>\n</ul>\n</li>\n<li>移除任务: 输入 <code>rm</code> 然后选择任务后 <code>回车</code></li>\n<li>暂停/恢复任务: 输入 <code>pause</code>/<code>resume</code> 然后选择任务后 <code>回车</code></li>\n<li>清除所有任务: 输入<code>clear</code> 然后 <code>回车</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>配置</p>\n<ul>\n<li><p>个人觉得本地运行没必要搞太复杂就不再多写了。有兴趣的可参照<a href=\"https://github.com/acgotaku/\" target=\"_blank\" rel=\"noopener\"><code>雪月秋水君</code></a>提供的<code>aria2.conf</code>:</p>\n<pre><code>#用户名\n#rpc-user=user\n#密码\n#rpc-passwd=passwd\n#上面的认证方式不建议使用,建议使用下面的token方式\n#设置加密的密钥\n#rpc-secret=token\n#允许rpc\nenable-rpc=true\n#允许所有来源, web界面跨域权限需要\nrpc-allow-origin-all=true\n#允许外部访问，false的话只监听本地端口\nrpc-listen-all=true\n#RPC端口, 仅当默认端口被占用时修改\n#rpc-listen-port=6800\n#最大同时下载数(任务数), 路由建议值: 3\nmax-concurrent-downloads=5\n#断点续传\ncontinue=true\n#同服务器连接数\nmax-connection-per-server=5\n#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\nmin-split-size=10M\n#单文件最大线程数, 路由建议值: 5\nsplit=10\n#下载速度限制\nmax-overall-download-limit=0\n#单文件速度限制\nmax-download-limit=0\n#上传速度限制\nmax-overall-upload-limit=0\n#单文件速度限制\nmax-upload-limit=0\n#断开速度过慢的连接\n#lowest-speed-limit=0\n#验证用，需要1.16.1之后的release版本\n#referer=*\n#文件保存路径, 默认为当前启动位置\ndir=/Users/xxx/Downloads\n#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本\n#disk-cache=0\n#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)\n#enable-mmap=true\n#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n#所需时间 none &lt; falloc ? trunc « prealloc, falloc和trunc需要文件系统和内核支持\nfile-allocation=prealloc</code></pre></li>\n<li><p>在启动Aria2的时候别忘了加上配置的绝对路径，例: <code>aria2c --conf-path=&quot;/Users/username/aria2.conf&quot;</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li>1Password - 最好用的密码管理软件</li>\n<li>PDF Expert - PDF编辑阅读器</li>\n<li>Fantisical2 - 增强版日历，集成了提醒事项</li>\n<li>MWeb - markdown编辑软件，可实时预览，且支持保存到evernote，导出为pdf、docx等格式。此外还支持直接在Wordpress、Mediun等网站发布。</li>\n<li>Typora - 超简洁等markdown编辑软件，单一窗口，实时预览。</li>\n<li>OmniFocus 2 - 最强大的GTD管理工具</li>\n<li>Pandoc -  命令行文件格式互转工具，格式包括docx,markdown, epub, pdf等，官网：<a href=\"http://pandoc.org/\" target=\"_blank\" rel=\"noopener\">http://pandoc.org/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"按键说明\"><a href=\"#按键说明\" class=\"headerlink\" title=\"按键说明\"></a>按键说明</h2><ul>\n<li>⌘ – Command Key</li>\n<li>⇥ – Tab Key</li>\n<li>⌃ – Control Key</li>\n<li>⌥ – Option Key</li>\n<li>⇧ – Shift Key</li>\n<li>⏎ – Return Key</li>\n<li>← Left Arrow Key</li>\n<li>→ Right Arrow Key</li>\n</ul>\n<h2 id=\"APPS\"><a href=\"#APPS\" class=\"headerlink\" title=\"APPS\"></a>APPS</h2><h3 id=\"Alfred-3\"><a href=\"#Alfred-3\" class=\"headerlink\" title=\"Alfred 3\"></a>Alfred 3</h3><p>强大的启动器, 拥有各种快捷入口, 不仅仅是用来代替Spotlight。增强的workflow更让繁琐的操作变得简单起来。</p>\n<ul>\n<li>下载: <a href=\"https://www.alfredapp.com/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>Powerpack 需要付费, £19起</li>\n<li>可设置启动命令, 本人使用 <code>⌥+⌘</code>, 好像是默认的。</li>\n<li>本人会禁用掉Spotlight及其索引功能来提升性能:<ul>\n<li>打开 系统设置 - Spotlight</li>\n<li>取消掉所有在Spotlight中的搜索结果，以及建议查找的功能</li>\n<li>左下角选择键盘快捷键, 取消两个已选中两个搜索</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Flycut\"><a href=\"#Flycut\" class=\"headerlink\" title=\"Flycut\"></a>Flycut</h3><p>剪切板管理器</p>\n<ul>\n<li>下载: <a href=\"http://itunes.apple.com/us/app/flycut-clipboard-manager/id442160987?mt=12\" target=\"_blank\" rel=\"noopener\">App Store</a> / <a href=\"https://github.com/TermiT/Flycut\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li>快捷键：<code>⇧+⌘+p</code>, 可以不停地按<code>p</code>来切换，或者使用<code>← →</code>方向键</li>\n<li>注：Alfred 3也提供了剪切板的功能，个人觉得不够便捷，在使用Flycut的时候，可以考虑给关了。</li>\n<li>可设置为开机启动</li>\n</ul>\n<h3 id=\"f-lux\"><a href=\"#f-lux\" class=\"headerlink\" title=\"f.lux\"></a>f.lux</h3><p>护眼神器。根据一天的时间来调节屏幕的亮度，在晚上屏幕会变成暖色调。</p>\n<ul>\n<li>下载： <a href=\"https://justgetflux.com/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>可设置为开机启动</li>\n</ul>\n<h3 id=\"Spectacle\"><a href=\"#Spectacle\" class=\"headerlink\" title=\"Spectacle\"></a>Spectacle</h3><p>快捷键调节窗口大小，比如: <code>⌥+⌘+F</code>全屏, <code>⌃+⌘+←</code> 左三分之一屏</p>\n<ul>\n<li>下载: <a href=\"https://www.spectacleapp.com/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>可设置为开机启动</li>\n</ul>\n<h3 id=\"CheatSheets\"><a href=\"#CheatSheets\" class=\"headerlink\" title=\"CheatSheets\"></a>CheatSheets</h3><p>按住<code>⌘</code>显示当前应用的所有快捷键</p>\n<ul>\n<li>下载: <a href=\"https://cheatsheetapp.com/CheatSheet/?lang=en\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n</ul>\n<h3 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a>Homebrew</h3><p>快速安装软件的管理器</p>\n<ul>\n<li>下载: <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">官网</a></li>\n<li>安装: <code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li>\n</ul>\n<h3 id=\"Aria2\"><a href=\"#Aria2\" class=\"headerlink\" title=\"Aria2\"></a>Aria2</h3><p>实现百度云, 115, 迅雷离线等满速下载。Aria2是个命令行管理工作，所以默认安装后需要做一些配置才能运行。不想折腾的可直接下载<a href=\"https://github.com/yangshun1029\" target=\"_blank\" rel=\"noopener\">yangshun1029</a>封装好的<a href=\"https://github.com/yangshun1029/aria2gui\" target=\"_blank\" rel=\"noopener\">Aria2gui</a>.</p>\n<p>以下是各种折腾的方案。</p>\n<ul>\n<li><p>下载: <a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"noopener\">官网</a> ／ 安装: <code>brew install aria2</code></p>\n</li>\n<li><p>使用方法有三种。命令行、Web+命令行、Alfred Workflow。</p>\n<ul>\n<li>命令行方面使用可见<a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"noopener\">官方文档 </a></li>\n<li>Web和Alfred Workflow管理见下文介绍</li>\n</ul>\n</li>\n<li><p>嵌入式 Chrome 插件: <a href=\"https://github.com/acgotaku/115\" target=\"_blank\" rel=\"noopener\"><code>115</code></a>, <a href=\"https://github.com/acgotaku/BaiduExporter\" target=\"_blank\" rel=\"noopener\"><code>百度云</code></a>。 这两个由<a href=\"https://github.com/acgotaku/\" target=\"_blank\" rel=\"noopener\"><code>雪月秋水君</code></a>开发的插件可以直接嵌入百度云和115网盘网页内，实现点击即可转到Aria2下载，非常方便。</p>\n</li>\n<li><p>Web 管理界面:</p>\n<ol>\n<li>首先命令行启动 <code>aria2c --enable-rpc --rpc-listen-all</code></li>\n<li><a href=\"http://binux.github.io/yaaw/demo/\" target=\"_blank\" rel=\"noopener\">http://binux.github.io/yaaw/demo/</a><ul>\n<li>需要设置JSON-RPC Path: <code>http://localhost:6800/jsonrpc</code></li>\n</ul>\n</li>\n<li>使用<a href=\"https://github.com/acgotaku/\" target=\"_blank\" rel=\"noopener\"><code>雪月秋水君</code></a>开发的Chrome插件: <a href=\"https://github.com/acgotaku/YAAW-for-Chrome\" target=\"_blank\" rel=\"noopener\">YAAW</a></li>\n</ol>\n</li>\n<li><p>Workflow for Alfred: <a href=\"https://github.com/Wildog/Ariafred\" target=\"_blank\" rel=\"noopener\">https://github.com/Wildog/Ariafred</a></p>\n<ul>\n<li><a href=\"http://wil.dog/ariafred/\" target=\"_blank\" rel=\"noopener\">官方文档</a></li>\n<li>注: Workflow 属于powerpack付费功能</li>\n<li>常用命令:<ul>\n<li>添加任务: 输入 <code>add</code> 然后追加任务地址<ul>\n<li>BT种子任务需要执行文件动作，然后选择`Add BT do…load to Aria2</li>\n</ul>\n</li>\n<li>移除任务: 输入 <code>rm</code> 然后选择任务后 <code>回车</code></li>\n<li>暂停/恢复任务: 输入 <code>pause</code>/<code>resume</code> 然后选择任务后 <code>回车</code></li>\n<li>清除所有任务: 输入<code>clear</code> 然后 <code>回车</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>配置</p>\n<ul>\n<li><p>个人觉得本地运行没必要搞太复杂就不再多写了。有兴趣的可参照<a href=\"https://github.com/acgotaku/\" target=\"_blank\" rel=\"noopener\"><code>雪月秋水君</code></a>提供的<code>aria2.conf</code>:</p>\n<pre><code>#用户名\n#rpc-user=user\n#密码\n#rpc-passwd=passwd\n#上面的认证方式不建议使用,建议使用下面的token方式\n#设置加密的密钥\n#rpc-secret=token\n#允许rpc\nenable-rpc=true\n#允许所有来源, web界面跨域权限需要\nrpc-allow-origin-all=true\n#允许外部访问，false的话只监听本地端口\nrpc-listen-all=true\n#RPC端口, 仅当默认端口被占用时修改\n#rpc-listen-port=6800\n#最大同时下载数(任务数), 路由建议值: 3\nmax-concurrent-downloads=5\n#断点续传\ncontinue=true\n#同服务器连接数\nmax-connection-per-server=5\n#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\nmin-split-size=10M\n#单文件最大线程数, 路由建议值: 5\nsplit=10\n#下载速度限制\nmax-overall-download-limit=0\n#单文件速度限制\nmax-download-limit=0\n#上传速度限制\nmax-overall-upload-limit=0\n#单文件速度限制\nmax-upload-limit=0\n#断开速度过慢的连接\n#lowest-speed-limit=0\n#验证用，需要1.16.1之后的release版本\n#referer=*\n#文件保存路径, 默认为当前启动位置\ndir=/Users/xxx/Downloads\n#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本\n#disk-cache=0\n#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)\n#enable-mmap=true\n#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n#所需时间 none &lt; falloc ? trunc « prealloc, falloc和trunc需要文件系统和内核支持\nfile-allocation=prealloc</code></pre></li>\n<li><p>在启动Aria2的时候别忘了加上配置的绝对路径，例: <code>aria2c --conf-path=&quot;/Users/username/aria2.conf&quot;</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li>1Password - 最好用的密码管理软件</li>\n<li>PDF Expert - PDF编辑阅读器</li>\n<li>Fantisical2 - 增强版日历，集成了提醒事项</li>\n<li>MWeb - markdown编辑软件，可实时预览，且支持保存到evernote，导出为pdf、docx等格式。此外还支持直接在Wordpress、Mediun等网站发布。</li>\n<li>Typora - 超简洁等markdown编辑软件，单一窗口，实时预览。</li>\n<li>OmniFocus 2 - 最强大的GTD管理工具</li>\n<li>Pandoc -  命令行文件格式互转工具，格式包括docx,markdown, epub, pdf等，官网：<a href=\"http://pandoc.org/\" target=\"_blank\" rel=\"noopener\">http://pandoc.org/</a></li>\n</ul>\n"},{"layout":"post","title":"Mac上配置GH60键盘","date":"2016-12-30T05:00:00.000Z","description":"在Mac上编译GH60 RevCHN Firmware","keywords":"Keyboard, Mac, Note","_content":"\n### 安装必要的工具\n\n    brew install Caskroom/cask/crosspack-avr\n    brew install dfu-programmer\n    cd ~\n    git clone --recursive https://github.com/kairyu/tmk_keyboard_custom.git\n    \n* 检查 `avr-gcc` 命令是否可用\n    \n    * 直接在命令行执行 `avr-gcc`, 如果出现command not found, 在命令行执行：\n            \n            PATH=\"/usr/local/CrossPack-AVR/bin:$PATH\"\n            export $PATH\n            \n    * 以上命令是临时把路径 `/usr/local/CrossPack-AVR/bin` 放到 `PATH` 中，关闭Terminal后失效\n\n### 修改配置文件来支持GH60_REV_CHN  \n\n* `cd ./tmk_keyboard_custom/keyboard/gh60`\n* `vi config.h`\n* 找到 `#define CONFIG_H`, 在底下加上 `#define GH60_REV_CHN`\n\n* `vi Makefile`\n* 注释或删掉下面这行代码\n    \n        KEYMAP_IN_EEPROM_ENABLE = yes # Read keymap from eeprom\n    \n### 连接测试键盘\n\n* 连接后输入入下列指令\n\n        system_profiler SPUSBDataType\n\n* 应该会出现：\n\n```\nGH60:\n   Product ID: 0x6060\n   Vendor ID: 0xfeed\n   Version: 0.01\n   Speed: Up to 12 Mb/sec\n   Manufacturer: geekhack\n   Location ID: 0x14400000 / 37\n   Current Available (mA): 500\n   Current Required (mA): 100\n   Extra Operating Current (mA): 0\n```\n* 然后按下键盘背部的按钮\n* 再次执行命令\n    \n        system_profiler SPUSBDataType\n\n* 应该会出现：\n\n```\nATm32U4DFU:\n    Product ID: 0x2ff4\n    Vendor ID: 0x03eb  (Atmel Corporation)\n    Version: 0.00\n    Serial Number: 1.0.0\n    Speed: Up to 12 Mb/sec\n    Manufacturer: ATMEL\n    Location ID: 0x14100000 / 15\n    Current Available (mA): 500\n    Current Required (mA): Unknown (Device has not been configured)\n```\n\n\n\n\n* 可以开始刷配置了，如果没信心，还是先用 poker 的 layout 来试试吧\n\n        poker layout\n\n* 切换到目录 `gh60` 下执行\n\n        make dfu\n\n* 刷出以下内容表示成功\n\n```\nCreating load file for Flash: gh60_lufa.hex\navr-objcopy -O ihex -R .eeprom -R .fuse -R .lock -R .signature gh60_lufa.elf gh60_lufa.hex\ndfu-programmer atmega32u4 erase --force\nErasing flash...  Success\nChecking memory from 0x0 to 0x6FFF...  Empty.\ndfu-programmer atmega32u4 flash gh60_lufa.hex\nChecking memory from 0x0 to 0x61FF...  Empty.\n0%                            100%  Programming 0x6200 bytes...\n[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\n0%                            100%  Reading 0x7000 bytes...\n[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\nValidating...  Success\n0x6200 bytes written into 0x7000 bytes memory (87.50%).\ndfu-programmer atmega32u4 reset\n```\n\n### 开始制作自己的layout\n\n* [http://www.keyboard-layout-editor.com/](http://www.keyboard-layout-editor.com/) 生成raw data\n* [https://yang.hging.net/tkg/](https://yang.hging.net/tkg/) 把raw data生成`.c`文件\n* 参考[dm4](http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/)设计的layout，觉得不错稍加改了下:\n    \n    * Layer 0 (Default)\n        \n            http://www.keyboard-layout-editor.com/#/gists/907d4f327ee92188cb929044ec186c39\n\n    * Layer 1 (Fn0层)\n\n            http://www.keyboard-layout-editor.com/#/gists/a460aca35c9eedab94433f6c297ef94c\n\n    * keymap generator 的设定\n        \n            Keyboard - GH60 (RevCHN)\n            Layer Mode - Normal\n            Number of Layers - 2\n            Layer0 - Default\n            Layer1 - Function layer\n            Fn - Layer action > Momentary layer 1\n\n    * Fn Momentary layer 1 的意思就是当 fn 按下时是 layer 1 的 keymap 但不按 fn 时就关掉 layer1\n\n    * 下载 `.c` 文件, 把名字改成 `keymap_tkg.c`\n\n    * 放到 `gh60` 目录下边\n\n    * 执行 `make KEYMAP=tkg dfu`\n\n### Done\n\n### 记录下现有的问题\n\n* `Fn+RCommand+Delete 连按几下会导致 Command 键按下事件，每次再按其他键的时候都成了Command+键的效果。现在的解决方案就是重新多按几个那个组合。。。。\n\n### Refer to\n\n* http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/\n* https://www.ptt.cc/bbs/Key_Mou_Pad/M.1430970988.A.4D9.html\n\n","source":"_posts/2016-12-30-keyboard-conf.md","raw":"---\nlayout: post\ntitle: Mac上配置GH60键盘\ncategory: 生活随想\ntags: [效率工具, Mac, 键盘]\ndate: 2016-12-30\ndescription: 在Mac上编译GH60 RevCHN Firmware\nkeywords: Keyboard, Mac, Note\n---\n\n### 安装必要的工具\n\n    brew install Caskroom/cask/crosspack-avr\n    brew install dfu-programmer\n    cd ~\n    git clone --recursive https://github.com/kairyu/tmk_keyboard_custom.git\n    \n* 检查 `avr-gcc` 命令是否可用\n    \n    * 直接在命令行执行 `avr-gcc`, 如果出现command not found, 在命令行执行：\n            \n            PATH=\"/usr/local/CrossPack-AVR/bin:$PATH\"\n            export $PATH\n            \n    * 以上命令是临时把路径 `/usr/local/CrossPack-AVR/bin` 放到 `PATH` 中，关闭Terminal后失效\n\n### 修改配置文件来支持GH60_REV_CHN  \n\n* `cd ./tmk_keyboard_custom/keyboard/gh60`\n* `vi config.h`\n* 找到 `#define CONFIG_H`, 在底下加上 `#define GH60_REV_CHN`\n\n* `vi Makefile`\n* 注释或删掉下面这行代码\n    \n        KEYMAP_IN_EEPROM_ENABLE = yes # Read keymap from eeprom\n    \n### 连接测试键盘\n\n* 连接后输入入下列指令\n\n        system_profiler SPUSBDataType\n\n* 应该会出现：\n\n```\nGH60:\n   Product ID: 0x6060\n   Vendor ID: 0xfeed\n   Version: 0.01\n   Speed: Up to 12 Mb/sec\n   Manufacturer: geekhack\n   Location ID: 0x14400000 / 37\n   Current Available (mA): 500\n   Current Required (mA): 100\n   Extra Operating Current (mA): 0\n```\n* 然后按下键盘背部的按钮\n* 再次执行命令\n    \n        system_profiler SPUSBDataType\n\n* 应该会出现：\n\n```\nATm32U4DFU:\n    Product ID: 0x2ff4\n    Vendor ID: 0x03eb  (Atmel Corporation)\n    Version: 0.00\n    Serial Number: 1.0.0\n    Speed: Up to 12 Mb/sec\n    Manufacturer: ATMEL\n    Location ID: 0x14100000 / 15\n    Current Available (mA): 500\n    Current Required (mA): Unknown (Device has not been configured)\n```\n\n\n\n\n* 可以开始刷配置了，如果没信心，还是先用 poker 的 layout 来试试吧\n\n        poker layout\n\n* 切换到目录 `gh60` 下执行\n\n        make dfu\n\n* 刷出以下内容表示成功\n\n```\nCreating load file for Flash: gh60_lufa.hex\navr-objcopy -O ihex -R .eeprom -R .fuse -R .lock -R .signature gh60_lufa.elf gh60_lufa.hex\ndfu-programmer atmega32u4 erase --force\nErasing flash...  Success\nChecking memory from 0x0 to 0x6FFF...  Empty.\ndfu-programmer atmega32u4 flash gh60_lufa.hex\nChecking memory from 0x0 to 0x61FF...  Empty.\n0%                            100%  Programming 0x6200 bytes...\n[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\n0%                            100%  Reading 0x7000 bytes...\n[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]  Success\nValidating...  Success\n0x6200 bytes written into 0x7000 bytes memory (87.50%).\ndfu-programmer atmega32u4 reset\n```\n\n### 开始制作自己的layout\n\n* [http://www.keyboard-layout-editor.com/](http://www.keyboard-layout-editor.com/) 生成raw data\n* [https://yang.hging.net/tkg/](https://yang.hging.net/tkg/) 把raw data生成`.c`文件\n* 参考[dm4](http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/)设计的layout，觉得不错稍加改了下:\n    \n    * Layer 0 (Default)\n        \n            http://www.keyboard-layout-editor.com/#/gists/907d4f327ee92188cb929044ec186c39\n\n    * Layer 1 (Fn0层)\n\n            http://www.keyboard-layout-editor.com/#/gists/a460aca35c9eedab94433f6c297ef94c\n\n    * keymap generator 的设定\n        \n            Keyboard - GH60 (RevCHN)\n            Layer Mode - Normal\n            Number of Layers - 2\n            Layer0 - Default\n            Layer1 - Function layer\n            Fn - Layer action > Momentary layer 1\n\n    * Fn Momentary layer 1 的意思就是当 fn 按下时是 layer 1 的 keymap 但不按 fn 时就关掉 layer1\n\n    * 下载 `.c` 文件, 把名字改成 `keymap_tkg.c`\n\n    * 放到 `gh60` 目录下边\n\n    * 执行 `make KEYMAP=tkg dfu`\n\n### Done\n\n### 记录下现有的问题\n\n* `Fn+RCommand+Delete 连按几下会导致 Command 键按下事件，每次再按其他键的时候都成了Command+键的效果。现在的解决方案就是重新多按几个那个组合。。。。\n\n### Refer to\n\n* http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/\n* https://www.ptt.cc/bbs/Key_Mou_Pad/M.1430970988.A.4D9.html\n\n","slug":"2016-12-30-keyboard-conf","published":1,"updated":"2020-04-19T02:55:16.316Z","_id":"ck96ffjaw001yrmp9eeivceym","comments":1,"photos":[],"link":"","content":"<h3 id=\"安装必要的工具\"><a href=\"#安装必要的工具\" class=\"headerlink\" title=\"安装必要的工具\"></a>安装必要的工具</h3><pre><code>brew install Caskroom/cask/crosspack-avr\nbrew install dfu-programmer\ncd ~\ngit clone --recursive https://github.com/kairyu/tmk_keyboard_custom.git</code></pre><ul>\n<li><p>检查 <code>avr-gcc</code> 命令是否可用</p>\n<ul>\n<li><p>直接在命令行执行 <code>avr-gcc</code>, 如果出现command not found, 在命令行执行：</p>\n<pre><code>PATH=&quot;/usr/local/CrossPack-AVR/bin:$PATH&quot;\nexport $PATH</code></pre></li>\n<li><p>以上命令是临时把路径 <code>/usr/local/CrossPack-AVR/bin</code> 放到 <code>PATH</code> 中，关闭Terminal后失效</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"修改配置文件来支持GH60-REV-CHN\"><a href=\"#修改配置文件来支持GH60-REV-CHN\" class=\"headerlink\" title=\"修改配置文件来支持GH60_REV_CHN\"></a>修改配置文件来支持GH60_REV_CHN</h3><ul>\n<li><p><code>cd ./tmk_keyboard_custom/keyboard/gh60</code></p>\n</li>\n<li><p><code>vi config.h</code></p>\n</li>\n<li><p>找到 <code>#define CONFIG_H</code>, 在底下加上 <code>#define GH60_REV_CHN</code></p>\n</li>\n<li><p><code>vi Makefile</code></p>\n</li>\n<li><p>注释或删掉下面这行代码</p>\n<pre><code>KEYMAP_IN_EEPROM_ENABLE = yes # Read keymap from eeprom</code></pre></li>\n</ul>\n<h3 id=\"连接测试键盘\"><a href=\"#连接测试键盘\" class=\"headerlink\" title=\"连接测试键盘\"></a>连接测试键盘</h3><ul>\n<li><p>连接后输入入下列指令</p>\n<pre><code>system_profiler SPUSBDataType</code></pre></li>\n<li><p>应该会出现：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GH60:</span><br><span class=\"line\">   Product ID: 0x6060</span><br><span class=\"line\">   Vendor ID: 0xfeed</span><br><span class=\"line\">   Version: 0.01</span><br><span class=\"line\">   Speed: Up to 12 Mb&#x2F;sec</span><br><span class=\"line\">   Manufacturer: geekhack</span><br><span class=\"line\">   Location ID: 0x14400000 &#x2F; 37</span><br><span class=\"line\">   Current Available (mA): 500</span><br><span class=\"line\">   Current Required (mA): 100</span><br><span class=\"line\">   Extra Operating Current (mA): 0</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>然后按下键盘背部的按钮</p>\n</li>\n<li><p>再次执行命令</p>\n<pre><code>system_profiler SPUSBDataType</code></pre></li>\n<li><p>应该会出现：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ATm32U4DFU:</span><br><span class=\"line\">    Product ID: 0x2ff4</span><br><span class=\"line\">    Vendor ID: 0x03eb  (Atmel Corporation)</span><br><span class=\"line\">    Version: 0.00</span><br><span class=\"line\">    Serial Number: 1.0.0</span><br><span class=\"line\">    Speed: Up to 12 Mb&#x2F;sec</span><br><span class=\"line\">    Manufacturer: ATMEL</span><br><span class=\"line\">    Location ID: 0x14100000 &#x2F; 15</span><br><span class=\"line\">    Current Available (mA): 500</span><br><span class=\"line\">    Current Required (mA): Unknown (Device has not been configured)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<ul>\n<li><p>可以开始刷配置了，如果没信心，还是先用 poker 的 layout 来试试吧</p>\n<pre><code>poker layout</code></pre></li>\n<li><p>切换到目录 <code>gh60</code> 下执行</p>\n<pre><code>make dfu</code></pre></li>\n<li><p>刷出以下内容表示成功</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Creating load file for Flash: gh60_lufa.hex</span><br><span class=\"line\">avr-objcopy -O ihex -R .eeprom -R .fuse -R .lock -R .signature gh60_lufa.elf gh60_lufa.hex</span><br><span class=\"line\">dfu-programmer atmega32u4 erase --force</span><br><span class=\"line\">Erasing flash...  Success</span><br><span class=\"line\">Checking memory from 0x0 to 0x6FFF...  Empty.</span><br><span class=\"line\">dfu-programmer atmega32u4 flash gh60_lufa.hex</span><br><span class=\"line\">Checking memory from 0x0 to 0x61FF...  Empty.</span><br><span class=\"line\">0%                            100%  Programming 0x6200 bytes...</span><br><span class=\"line\">[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]  Success</span><br><span class=\"line\">0%                            100%  Reading 0x7000 bytes...</span><br><span class=\"line\">[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]  Success</span><br><span class=\"line\">Validating...  Success</span><br><span class=\"line\">0x6200 bytes written into 0x7000 bytes memory (87.50%).</span><br><span class=\"line\">dfu-programmer atmega32u4 reset</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开始制作自己的layout\"><a href=\"#开始制作自己的layout\" class=\"headerlink\" title=\"开始制作自己的layout\"></a>开始制作自己的layout</h3><ul>\n<li><p><a href=\"http://www.keyboard-layout-editor.com/\" target=\"_blank\" rel=\"noopener\">http://www.keyboard-layout-editor.com/</a> 生成raw data</p>\n</li>\n<li><p><a href=\"https://yang.hging.net/tkg/\" target=\"_blank\" rel=\"noopener\">https://yang.hging.net/tkg/</a> 把raw data生成<code>.c</code>文件</p>\n</li>\n<li><p>参考<a href=\"http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/\" target=\"_blank\" rel=\"noopener\">dm4</a>设计的layout，觉得不错稍加改了下:</p>\n<ul>\n<li><p>Layer 0 (Default)</p>\n<pre><code>http://www.keyboard-layout-editor.com/#/gists/907d4f327ee92188cb929044ec186c39</code></pre></li>\n<li><p>Layer 1 (Fn0层)</p>\n<pre><code>http://www.keyboard-layout-editor.com/#/gists/a460aca35c9eedab94433f6c297ef94c</code></pre></li>\n<li><p>keymap generator 的设定</p>\n<pre><code>Keyboard - GH60 (RevCHN)\nLayer Mode - Normal\nNumber of Layers - 2\nLayer0 - Default\nLayer1 - Function layer\nFn - Layer action &gt; Momentary layer 1</code></pre></li>\n<li><p>Fn Momentary layer 1 的意思就是当 fn 按下时是 layer 1 的 keymap 但不按 fn 时就关掉 layer1</p>\n</li>\n<li><p>下载 <code>.c</code> 文件, 把名字改成 <code>keymap_tkg.c</code></p>\n</li>\n<li><p>放到 <code>gh60</code> 目录下边</p>\n</li>\n<li><p>执行 <code>make KEYMAP=tkg dfu</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><h3 id=\"记录下现有的问题\"><a href=\"#记录下现有的问题\" class=\"headerlink\" title=\"记录下现有的问题\"></a>记录下现有的问题</h3><ul>\n<li>`Fn+RCommand+Delete 连按几下会导致 Command 键按下事件，每次再按其他键的时候都成了Command+键的效果。现在的解决方案就是重新多按几个那个组合。。。。</li>\n</ul>\n<h3 id=\"Refer-to\"><a href=\"#Refer-to\" class=\"headerlink\" title=\"Refer to\"></a>Refer to</h3><ul>\n<li><a href=\"http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/\" target=\"_blank\" rel=\"noopener\">http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/</a></li>\n<li><a href=\"https://www.ptt.cc/bbs/Key_Mou_Pad/M.1430970988.A.4D9.html\" target=\"_blank\" rel=\"noopener\">https://www.ptt.cc/bbs/Key_Mou_Pad/M.1430970988.A.4D9.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"安装必要的工具\"><a href=\"#安装必要的工具\" class=\"headerlink\" title=\"安装必要的工具\"></a>安装必要的工具</h3><pre><code>brew install Caskroom/cask/crosspack-avr\nbrew install dfu-programmer\ncd ~\ngit clone --recursive https://github.com/kairyu/tmk_keyboard_custom.git</code></pre><ul>\n<li><p>检查 <code>avr-gcc</code> 命令是否可用</p>\n<ul>\n<li><p>直接在命令行执行 <code>avr-gcc</code>, 如果出现command not found, 在命令行执行：</p>\n<pre><code>PATH=&quot;/usr/local/CrossPack-AVR/bin:$PATH&quot;\nexport $PATH</code></pre></li>\n<li><p>以上命令是临时把路径 <code>/usr/local/CrossPack-AVR/bin</code> 放到 <code>PATH</code> 中，关闭Terminal后失效</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"修改配置文件来支持GH60-REV-CHN\"><a href=\"#修改配置文件来支持GH60-REV-CHN\" class=\"headerlink\" title=\"修改配置文件来支持GH60_REV_CHN\"></a>修改配置文件来支持GH60_REV_CHN</h3><ul>\n<li><p><code>cd ./tmk_keyboard_custom/keyboard/gh60</code></p>\n</li>\n<li><p><code>vi config.h</code></p>\n</li>\n<li><p>找到 <code>#define CONFIG_H</code>, 在底下加上 <code>#define GH60_REV_CHN</code></p>\n</li>\n<li><p><code>vi Makefile</code></p>\n</li>\n<li><p>注释或删掉下面这行代码</p>\n<pre><code>KEYMAP_IN_EEPROM_ENABLE = yes # Read keymap from eeprom</code></pre></li>\n</ul>\n<h3 id=\"连接测试键盘\"><a href=\"#连接测试键盘\" class=\"headerlink\" title=\"连接测试键盘\"></a>连接测试键盘</h3><ul>\n<li><p>连接后输入入下列指令</p>\n<pre><code>system_profiler SPUSBDataType</code></pre></li>\n<li><p>应该会出现：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GH60:</span><br><span class=\"line\">   Product ID: 0x6060</span><br><span class=\"line\">   Vendor ID: 0xfeed</span><br><span class=\"line\">   Version: 0.01</span><br><span class=\"line\">   Speed: Up to 12 Mb&#x2F;sec</span><br><span class=\"line\">   Manufacturer: geekhack</span><br><span class=\"line\">   Location ID: 0x14400000 &#x2F; 37</span><br><span class=\"line\">   Current Available (mA): 500</span><br><span class=\"line\">   Current Required (mA): 100</span><br><span class=\"line\">   Extra Operating Current (mA): 0</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>然后按下键盘背部的按钮</p>\n</li>\n<li><p>再次执行命令</p>\n<pre><code>system_profiler SPUSBDataType</code></pre></li>\n<li><p>应该会出现：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ATm32U4DFU:</span><br><span class=\"line\">    Product ID: 0x2ff4</span><br><span class=\"line\">    Vendor ID: 0x03eb  (Atmel Corporation)</span><br><span class=\"line\">    Version: 0.00</span><br><span class=\"line\">    Serial Number: 1.0.0</span><br><span class=\"line\">    Speed: Up to 12 Mb&#x2F;sec</span><br><span class=\"line\">    Manufacturer: ATMEL</span><br><span class=\"line\">    Location ID: 0x14100000 &#x2F; 15</span><br><span class=\"line\">    Current Available (mA): 500</span><br><span class=\"line\">    Current Required (mA): Unknown (Device has not been configured)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<ul>\n<li><p>可以开始刷配置了，如果没信心，还是先用 poker 的 layout 来试试吧</p>\n<pre><code>poker layout</code></pre></li>\n<li><p>切换到目录 <code>gh60</code> 下执行</p>\n<pre><code>make dfu</code></pre></li>\n<li><p>刷出以下内容表示成功</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Creating load file for Flash: gh60_lufa.hex</span><br><span class=\"line\">avr-objcopy -O ihex -R .eeprom -R .fuse -R .lock -R .signature gh60_lufa.elf gh60_lufa.hex</span><br><span class=\"line\">dfu-programmer atmega32u4 erase --force</span><br><span class=\"line\">Erasing flash...  Success</span><br><span class=\"line\">Checking memory from 0x0 to 0x6FFF...  Empty.</span><br><span class=\"line\">dfu-programmer atmega32u4 flash gh60_lufa.hex</span><br><span class=\"line\">Checking memory from 0x0 to 0x61FF...  Empty.</span><br><span class=\"line\">0%                            100%  Programming 0x6200 bytes...</span><br><span class=\"line\">[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]  Success</span><br><span class=\"line\">0%                            100%  Reading 0x7000 bytes...</span><br><span class=\"line\">[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]  Success</span><br><span class=\"line\">Validating...  Success</span><br><span class=\"line\">0x6200 bytes written into 0x7000 bytes memory (87.50%).</span><br><span class=\"line\">dfu-programmer atmega32u4 reset</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开始制作自己的layout\"><a href=\"#开始制作自己的layout\" class=\"headerlink\" title=\"开始制作自己的layout\"></a>开始制作自己的layout</h3><ul>\n<li><p><a href=\"http://www.keyboard-layout-editor.com/\" target=\"_blank\" rel=\"noopener\">http://www.keyboard-layout-editor.com/</a> 生成raw data</p>\n</li>\n<li><p><a href=\"https://yang.hging.net/tkg/\" target=\"_blank\" rel=\"noopener\">https://yang.hging.net/tkg/</a> 把raw data生成<code>.c</code>文件</p>\n</li>\n<li><p>参考<a href=\"http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/\" target=\"_blank\" rel=\"noopener\">dm4</a>设计的layout，觉得不错稍加改了下:</p>\n<ul>\n<li><p>Layer 0 (Default)</p>\n<pre><code>http://www.keyboard-layout-editor.com/#/gists/907d4f327ee92188cb929044ec186c39</code></pre></li>\n<li><p>Layer 1 (Fn0层)</p>\n<pre><code>http://www.keyboard-layout-editor.com/#/gists/a460aca35c9eedab94433f6c297ef94c</code></pre></li>\n<li><p>keymap generator 的设定</p>\n<pre><code>Keyboard - GH60 (RevCHN)\nLayer Mode - Normal\nNumber of Layers - 2\nLayer0 - Default\nLayer1 - Function layer\nFn - Layer action &gt; Momentary layer 1</code></pre></li>\n<li><p>Fn Momentary layer 1 的意思就是当 fn 按下时是 layer 1 的 keymap 但不按 fn 时就关掉 layer1</p>\n</li>\n<li><p>下载 <code>.c</code> 文件, 把名字改成 <code>keymap_tkg.c</code></p>\n</li>\n<li><p>放到 <code>gh60</code> 目录下边</p>\n</li>\n<li><p>执行 <code>make KEYMAP=tkg dfu</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><h3 id=\"记录下现有的问题\"><a href=\"#记录下现有的问题\" class=\"headerlink\" title=\"记录下现有的问题\"></a>记录下现有的问题</h3><ul>\n<li>`Fn+RCommand+Delete 连按几下会导致 Command 键按下事件，每次再按其他键的时候都成了Command+键的效果。现在的解决方案就是重新多按几个那个组合。。。。</li>\n</ul>\n<h3 id=\"Refer-to\"><a href=\"#Refer-to\" class=\"headerlink\" title=\"Refer to\"></a>Refer to</h3><ul>\n<li><a href=\"http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/\" target=\"_blank\" rel=\"noopener\">http://blog.dm4.tw/blog/2015/03/17/build-gh60-revchn-on-mac/</a></li>\n<li><a href=\"https://www.ptt.cc/bbs/Key_Mou_Pad/M.1430970988.A.4D9.html\" target=\"_blank\" rel=\"noopener\">https://www.ptt.cc/bbs/Key_Mou_Pad/M.1430970988.A.4D9.html</a></li>\n</ul>\n"},{"layout":"post","title":"好的编程习惯 - PHP进阶 (3)","date":"2017-02-20T05:00:00.000Z","description":"PHP 好的编程习惯","keywords":"Modern PHP, PHP, Note","_content":"\n### 净化、验证、转义输入输出\n\n#### 需要注意的几个外部数据源\n\n* $_GET\n* $_POST\n* $_REQUEST\n* $_COOKIE\n* $argv\n* php://stdin\n* php://input\n* file_get_contents()\n* 远程数据库\n* 远程 APIs\n* 远程客户端获取的数据\n\n#### 净化输入\n\n* HTML \n    * 在接触存储层之前，使用 htmlentities() 来净化 HTML 的特殊字符:\n\n            <?php $input = '<p><script>alert(\"You won the Nigerian lottery!\");</script></p>'; \n            echo htmlentities($input, ENT_QUOTES, 'UTF-8');\n            \n    * 避免使用 preg_replace(), preg_replace_all() 和 preg_replace_callback() 等正则函数在HTML代码里。\n* SQL 查询\n    * 使用 PDO prepared statement 的形式，避免SQL注入等问题。\n* 用户信息收集\n    * 使用 filter_var() 和 filter_input() 来净化用户信息数据，如 emails, URL-encoded strings, integers, floats, HTML characters, URLs 等，例：\n            \n            <?php $email = 'john@example.com'; \n            $emailSafe = filter_var($email, FILTER_SANITIZE_EMAIL);\n\n#### 验证数据\n\n* 可以使用内置函数 filter_var() 来做简单的验证：\n\n        <?php \n        $input = 'john@example.com'; \n        $isEmail = filter_var($input, FILTER_VALIDATE_EMAIL); \n        if ($isEmail !== false) {\n            echo \"Success\"; \n        } else {\n            echo \"Fail\"; \n        }\n        \n* 几个推荐的扩展库\n\n    * [aura/filter](https://packagist.org/packages/aura/filter)\n    * [respect/validation](https://packagist.org/packages/respect/validation)\n    * [symfony/validator](https://packagist.org/packages/symfony/validator)\n\n#### 转义输出\n\n* 使用 htmlentities() ：\n    \n        <?php \n        $output = '<p><script>alert(\"NSA backdoor installed\");</script>'; \n        echo htmlentities($output, ENT_QUOTES, 'UTF-8');\n        \n* 使用模板引擎，比如：\n    \n    [twig/twig](https://packagist.org/packages/twig/twig)\n    \n### 密码\n\n#### 几个重要的准则\n* 不要记录用户的密码\n* 不要过多限制用户的密码，仅推荐限制长度即可\n* 不要通过邮件发送用户密码\n* 使用 bcrypt 函数单向加密用户密码，个人推荐 [phpass](http://www.openwall.com/phpass/) 第三方扩展\n\n* 用户注册和登录示例\n    \n    * 注册时使用 password_hash() 来加密用户密码, 源代码: [codeguy/modern-php](https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/register.php)\n    * 注：CRYPT_BLOWFISH 加密方式的salt的组成依次是：\n        * (\"$2a$\", \"$2x$\" 或者 \"$2y$\") + \"xx\"(04<xx<31) + \"$\" + \"22个字符\"(\"./0-9A-Za-z\")， \n        * 例如：\"$2a$07$usesomesillystringfor\"\n        * PHP 5.3.7 之后应使用\"$2y$\"作为前缀\n\n                <?php\n                try {\n                    // Validate email\n                    $email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);\n                    if (!$email) {\n                        throw new Exception('Invalid email');\n                    }\n                    \n                    // Validate password\n                    $password = filter_input(INPUT_POST, 'password');\n                    if (!$password || mb_strlen($password) < 8) {\n                        throw new Exception('Password must contain 8+ characters');\n                    }\n                    \n                    // Create password hash\n                    $passwordHash = password_hash(\n                       $password,\n                       CRYPT_BLOWFISH, // 加密方式\n                       ['cost' => 12] // 递归次数\n                    );\n                    if ($passwordHash === false) {\n                        throw new Exception('Password hash failed');\n                    }\n                    \n                    // Create user account (THIS IS PSUEDO-CODE)\n                    // $user = new User();\n                    // $user->email = $email;\n                    // $user->password_hash = $passwordHash;\n                    // $user->save();\n                    // Redirect to login page\n                    \n                    header('HTTP/1.1 302 Redirect');\n                    header('Location: /login.php');\n                } catch (Exception $e) {\n                    // Report error\n                    header('HTTP/1.1 400 Bad request');\n                    echo $e->getMessage();\n                }\n      \n    * 登录，不要忘了 rehash password ，源代码: [codeguy/modern-php](https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/login.php)\n\n            <?php\n            session_start();\n            try {\n                // Get email address from request body\n                $email = filter_input(INPUT_POST, 'email');\n                \n                // Get password from request body\n                $password = filter_input(INPUT_POST, 'password');\n                \n                // Find account with email address (THIS IS PSUEDO-CODE)\n                $user = User::findByEmail($email);\n                \n                // Verify password with account password hash\n                if (password_verify($password, $user->password_hash) === false) {\n                    throw new Exception('Invalid password');\n                }\n                \n                // Re-hash password if necessary (see note below)\n                $currentHashAlgorithm = CRYPT_BLOWFISH;\n                $currentHashOptions = array('cost' => 15);\n                $passwordNeedsRehash = password_needs_rehash(\n                    $user->password_hash,\n                    $currentHashAlgorithm,\n                    $currentHashOptions\n                );\n                if ($passwordNeedsRehash === true) {\n                \n                    // Save new password hash (THIS IS PSUEDO-CODE)\n                    $user->password_hash = password_hash(\n                        $password,\n                        $currentHashAlgorithm,\n                        $currentHashOptions\n                    );\n                    $user->save();\n                }\n                \n                // Save login status to session\n                $_SESSION['user_logged_in'] = 'yes';\n                $_SESSION['user_email'] = $email;\n                \n                // Redirect to profile page\n                header('HTTP/1.1 302 Redirect');\n                header('Location: /user-profile.php');\n            } catch (Exception $e) {\n                header('HTTP/1.1 401 Unauthorized');\n                echo $e->getMessage();\n            }\n\n\n### 流\n* 在源与目的地之间传输数据。源和目的地可以是文件、内存、命令行、标准输入输入等。\n\n#### 封装器\n* 每个流都有协议和目标，格式为`<scheme>://<target>`，协议<scheme>即为封装器，目标<target>为数据源。常用的封装器有：\n    * `file://`. 我们常用的函数如 `file_get_contents()`, `fopen()`, `fwrite()`, `fclose()` 都是流的封装器。\n    * `php://`. 标准输入输出的封装器。比如：`php://stdin`, `php://stdout`, `php://memory`, `php://temp`(类似`php://memory`, 只是这个写入的是临时文件)。\n\n#### 上下文\n* 用于定义流的行为。比如使用`stream_context_create()`可以让`file_get_contents()`发送 POST 请求：\n\n        <?php\n        $requestBody = '{\"username\":\"josh\"}'; \n        $context = stream_context_create(array(\n            'http' => array( \n                'method' => 'POST', \n                    'header' => \"Content-Type: application/json;charset=utf-8;\\r\\n\" . \n                                \"Content-Length: \" . mb_strlen($requestBody), \n                    'content' => $requestBody\n               )\n        )); \n        $response = file_get_contents('https://my-api.com/users', false, $context);\n    \n#### 过滤器\n* 在传输的过程中进行过滤、转换、增加、删除操作。\n* 简单的例子，将传输过来的数据全都大写化：\n\n        <?php \n        $handle = fopen('data.txt', 'rb'); \n        stream_filter_append($handle, 'string.toupper'); \n        while(feof($handle) !== true) { \n            echo fgets($handle); // <-- Outputs all uppercase characters \n        } \n        fclose($handle);\n* 另一个例子：\n\n        <?php \n        $handle = fopen('php://filter/read=string.toupper/resource=data.txt', 'rb');\n        while(feof($handle) !== true) { \n            echo fgets($handle); // <-- Outputs all uppercase characters \n        } \n        fclose($handle);\n        \n   * 过滤器写在`php://`的流封装器里，其标准格式为：`filter/read=<filter_name>/resource=<scheme>://<target>`\n\n* 例子3, 使用bzip分开压缩过去30天的日志文件，每天一个压缩包:\n\n        <?php\n        $dateStart = new \\DateTime();\n        $dateInterval = \\DateInterval::createFromDateString('-1 day');\n        $datePeriod = new \\DatePeriod($dateStart, $dateInterval, 30);\n        foreach ($datePeriod as $date) {\n            $file = 'sftp://USER:PASS@rsync.net/' . $date->format('Y-m-d') . '.log.bz2';\n            if (file_exists($file)) {\n                $handle = fopen($file, 'rb');\n                stream_filter_append($handle, 'bzip2.decompress');\n                while (feof($handle) !== true) {\n                    $line = fgets($handle);\n                    if (strpos($line, 'www.example.com') !== false) {\n                        fwrite(STDOUT, $line);\n                   }\n                }\n                fclose($handle);\n            }\n        }\n   \n* 自定义过滤器。需完成以下三点：(参考实例：[DirtyWordsFilter.php](https://github.com/codeguy/modern-php/blob/master/05-good-practices/streams/DirtyWordsFilter.php))\n    * 继承内置类`php_user_filter`\n    * 实现`filter()`, `onCreate()`, `onClose()`三个方法\n    * 使用`stream_filter_register()`注册自定义的过滤器\n\n### 错误和异常处理\n\n#### 异常处理\n\n* 设置全局性的异常捕获来保证程序中未捕获的异常最后都会被记录下来。\n\n        <?php // Register your exception handler \n        set_exception_handler(function (Exception $e) { \n            // Handle and log exception \n        }); \n       \n        // Your code goes here...\n    \n        // Restore previous exception handler \n        restore_exception_handler();\n        \n* 在开发环境中使用异常捕获以及日志来显示所有的DEBUG信息，在生产环境使用用户友好的提示信息。\n\n#### 错误\n\n* 四个准则\n\n    * 打开错误报告\n    * 在测试环境中显示错误信息\n    * 不在生产环境中显示错误信息\n    * 无论生产还是开发都应该在日志中记录错误\n\n* 生产环境`php.ini`示例：\n\n        ; DO NOT display errors \n        display_startup_errors = Off    \n        display_errors = Off\n\n        ; Report all errors EXCEPT notices \n        error_reporting = E_ALL & ~E_NOTICE\n\n        ; Turn on error logging \n        log_errors = On\n        \n* 开发环境示例：\n        \n        ; Display errors \n        display_startup_errors = On \n        display_errors = On\n\n        ; Report all errors \n        error_reporting = -1\n\n        ; Turn on error logging \n        log_errors = On\n\n\n#### 错误处理\n\n* 等同于异常处理，错误也是可以被捕获的。如果只是临时使用错误捕获，一定不要忘了在自己的代码完成后恢复：\n\n        <?php // Register error handler \n        set_error_handler(function ($errno, $errstr, $errfile, $errline) { \n            if (!(error_reporting() & $errno)) { \n                // Error is not specified in the error_reporting \n                // setting, so we ignore it.\n                return; \n            }\n            throw new ErrorException($errstr, $errno, 0, $errfile, $errline);\n        });\n\n        // Your code goes here...\n\n        // Restore previous error handler \n        restore_error_handler();\n\n#### 第三方扩展推荐\n\n* [filp/whoops](https://github.com/filp/whoops) 是一个错误处理框架，提供一个优雅的错误界面帮助DEBUG。目前很多主流的框架比如Laraval 5, CakePHP 3等都已经内置了。\n* [Seldaek/monolog](https://github.com/Seldaek/monolog) 记录日志的插件\n\n","source":"_posts/2017-02-20-php-advance-3-good-practice.md","raw":"---\nlayout: post\ntitle: 好的编程习惯 - PHP进阶 (3)\ncategory: 编程学习\ntags: [PHP]\ndate: 2017-02-20\ndescription: PHP 好的编程习惯\nkeywords: Modern PHP, PHP, Note\n---\n\n### 净化、验证、转义输入输出\n\n#### 需要注意的几个外部数据源\n\n* $_GET\n* $_POST\n* $_REQUEST\n* $_COOKIE\n* $argv\n* php://stdin\n* php://input\n* file_get_contents()\n* 远程数据库\n* 远程 APIs\n* 远程客户端获取的数据\n\n#### 净化输入\n\n* HTML \n    * 在接触存储层之前，使用 htmlentities() 来净化 HTML 的特殊字符:\n\n            <?php $input = '<p><script>alert(\"You won the Nigerian lottery!\");</script></p>'; \n            echo htmlentities($input, ENT_QUOTES, 'UTF-8');\n            \n    * 避免使用 preg_replace(), preg_replace_all() 和 preg_replace_callback() 等正则函数在HTML代码里。\n* SQL 查询\n    * 使用 PDO prepared statement 的形式，避免SQL注入等问题。\n* 用户信息收集\n    * 使用 filter_var() 和 filter_input() 来净化用户信息数据，如 emails, URL-encoded strings, integers, floats, HTML characters, URLs 等，例：\n            \n            <?php $email = 'john@example.com'; \n            $emailSafe = filter_var($email, FILTER_SANITIZE_EMAIL);\n\n#### 验证数据\n\n* 可以使用内置函数 filter_var() 来做简单的验证：\n\n        <?php \n        $input = 'john@example.com'; \n        $isEmail = filter_var($input, FILTER_VALIDATE_EMAIL); \n        if ($isEmail !== false) {\n            echo \"Success\"; \n        } else {\n            echo \"Fail\"; \n        }\n        \n* 几个推荐的扩展库\n\n    * [aura/filter](https://packagist.org/packages/aura/filter)\n    * [respect/validation](https://packagist.org/packages/respect/validation)\n    * [symfony/validator](https://packagist.org/packages/symfony/validator)\n\n#### 转义输出\n\n* 使用 htmlentities() ：\n    \n        <?php \n        $output = '<p><script>alert(\"NSA backdoor installed\");</script>'; \n        echo htmlentities($output, ENT_QUOTES, 'UTF-8');\n        \n* 使用模板引擎，比如：\n    \n    [twig/twig](https://packagist.org/packages/twig/twig)\n    \n### 密码\n\n#### 几个重要的准则\n* 不要记录用户的密码\n* 不要过多限制用户的密码，仅推荐限制长度即可\n* 不要通过邮件发送用户密码\n* 使用 bcrypt 函数单向加密用户密码，个人推荐 [phpass](http://www.openwall.com/phpass/) 第三方扩展\n\n* 用户注册和登录示例\n    \n    * 注册时使用 password_hash() 来加密用户密码, 源代码: [codeguy/modern-php](https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/register.php)\n    * 注：CRYPT_BLOWFISH 加密方式的salt的组成依次是：\n        * (\"$2a$\", \"$2x$\" 或者 \"$2y$\") + \"xx\"(04<xx<31) + \"$\" + \"22个字符\"(\"./0-9A-Za-z\")， \n        * 例如：\"$2a$07$usesomesillystringfor\"\n        * PHP 5.3.7 之后应使用\"$2y$\"作为前缀\n\n                <?php\n                try {\n                    // Validate email\n                    $email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);\n                    if (!$email) {\n                        throw new Exception('Invalid email');\n                    }\n                    \n                    // Validate password\n                    $password = filter_input(INPUT_POST, 'password');\n                    if (!$password || mb_strlen($password) < 8) {\n                        throw new Exception('Password must contain 8+ characters');\n                    }\n                    \n                    // Create password hash\n                    $passwordHash = password_hash(\n                       $password,\n                       CRYPT_BLOWFISH, // 加密方式\n                       ['cost' => 12] // 递归次数\n                    );\n                    if ($passwordHash === false) {\n                        throw new Exception('Password hash failed');\n                    }\n                    \n                    // Create user account (THIS IS PSUEDO-CODE)\n                    // $user = new User();\n                    // $user->email = $email;\n                    // $user->password_hash = $passwordHash;\n                    // $user->save();\n                    // Redirect to login page\n                    \n                    header('HTTP/1.1 302 Redirect');\n                    header('Location: /login.php');\n                } catch (Exception $e) {\n                    // Report error\n                    header('HTTP/1.1 400 Bad request');\n                    echo $e->getMessage();\n                }\n      \n    * 登录，不要忘了 rehash password ，源代码: [codeguy/modern-php](https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/login.php)\n\n            <?php\n            session_start();\n            try {\n                // Get email address from request body\n                $email = filter_input(INPUT_POST, 'email');\n                \n                // Get password from request body\n                $password = filter_input(INPUT_POST, 'password');\n                \n                // Find account with email address (THIS IS PSUEDO-CODE)\n                $user = User::findByEmail($email);\n                \n                // Verify password with account password hash\n                if (password_verify($password, $user->password_hash) === false) {\n                    throw new Exception('Invalid password');\n                }\n                \n                // Re-hash password if necessary (see note below)\n                $currentHashAlgorithm = CRYPT_BLOWFISH;\n                $currentHashOptions = array('cost' => 15);\n                $passwordNeedsRehash = password_needs_rehash(\n                    $user->password_hash,\n                    $currentHashAlgorithm,\n                    $currentHashOptions\n                );\n                if ($passwordNeedsRehash === true) {\n                \n                    // Save new password hash (THIS IS PSUEDO-CODE)\n                    $user->password_hash = password_hash(\n                        $password,\n                        $currentHashAlgorithm,\n                        $currentHashOptions\n                    );\n                    $user->save();\n                }\n                \n                // Save login status to session\n                $_SESSION['user_logged_in'] = 'yes';\n                $_SESSION['user_email'] = $email;\n                \n                // Redirect to profile page\n                header('HTTP/1.1 302 Redirect');\n                header('Location: /user-profile.php');\n            } catch (Exception $e) {\n                header('HTTP/1.1 401 Unauthorized');\n                echo $e->getMessage();\n            }\n\n\n### 流\n* 在源与目的地之间传输数据。源和目的地可以是文件、内存、命令行、标准输入输入等。\n\n#### 封装器\n* 每个流都有协议和目标，格式为`<scheme>://<target>`，协议<scheme>即为封装器，目标<target>为数据源。常用的封装器有：\n    * `file://`. 我们常用的函数如 `file_get_contents()`, `fopen()`, `fwrite()`, `fclose()` 都是流的封装器。\n    * `php://`. 标准输入输出的封装器。比如：`php://stdin`, `php://stdout`, `php://memory`, `php://temp`(类似`php://memory`, 只是这个写入的是临时文件)。\n\n#### 上下文\n* 用于定义流的行为。比如使用`stream_context_create()`可以让`file_get_contents()`发送 POST 请求：\n\n        <?php\n        $requestBody = '{\"username\":\"josh\"}'; \n        $context = stream_context_create(array(\n            'http' => array( \n                'method' => 'POST', \n                    'header' => \"Content-Type: application/json;charset=utf-8;\\r\\n\" . \n                                \"Content-Length: \" . mb_strlen($requestBody), \n                    'content' => $requestBody\n               )\n        )); \n        $response = file_get_contents('https://my-api.com/users', false, $context);\n    \n#### 过滤器\n* 在传输的过程中进行过滤、转换、增加、删除操作。\n* 简单的例子，将传输过来的数据全都大写化：\n\n        <?php \n        $handle = fopen('data.txt', 'rb'); \n        stream_filter_append($handle, 'string.toupper'); \n        while(feof($handle) !== true) { \n            echo fgets($handle); // <-- Outputs all uppercase characters \n        } \n        fclose($handle);\n* 另一个例子：\n\n        <?php \n        $handle = fopen('php://filter/read=string.toupper/resource=data.txt', 'rb');\n        while(feof($handle) !== true) { \n            echo fgets($handle); // <-- Outputs all uppercase characters \n        } \n        fclose($handle);\n        \n   * 过滤器写在`php://`的流封装器里，其标准格式为：`filter/read=<filter_name>/resource=<scheme>://<target>`\n\n* 例子3, 使用bzip分开压缩过去30天的日志文件，每天一个压缩包:\n\n        <?php\n        $dateStart = new \\DateTime();\n        $dateInterval = \\DateInterval::createFromDateString('-1 day');\n        $datePeriod = new \\DatePeriod($dateStart, $dateInterval, 30);\n        foreach ($datePeriod as $date) {\n            $file = 'sftp://USER:PASS@rsync.net/' . $date->format('Y-m-d') . '.log.bz2';\n            if (file_exists($file)) {\n                $handle = fopen($file, 'rb');\n                stream_filter_append($handle, 'bzip2.decompress');\n                while (feof($handle) !== true) {\n                    $line = fgets($handle);\n                    if (strpos($line, 'www.example.com') !== false) {\n                        fwrite(STDOUT, $line);\n                   }\n                }\n                fclose($handle);\n            }\n        }\n   \n* 自定义过滤器。需完成以下三点：(参考实例：[DirtyWordsFilter.php](https://github.com/codeguy/modern-php/blob/master/05-good-practices/streams/DirtyWordsFilter.php))\n    * 继承内置类`php_user_filter`\n    * 实现`filter()`, `onCreate()`, `onClose()`三个方法\n    * 使用`stream_filter_register()`注册自定义的过滤器\n\n### 错误和异常处理\n\n#### 异常处理\n\n* 设置全局性的异常捕获来保证程序中未捕获的异常最后都会被记录下来。\n\n        <?php // Register your exception handler \n        set_exception_handler(function (Exception $e) { \n            // Handle and log exception \n        }); \n       \n        // Your code goes here...\n    \n        // Restore previous exception handler \n        restore_exception_handler();\n        \n* 在开发环境中使用异常捕获以及日志来显示所有的DEBUG信息，在生产环境使用用户友好的提示信息。\n\n#### 错误\n\n* 四个准则\n\n    * 打开错误报告\n    * 在测试环境中显示错误信息\n    * 不在生产环境中显示错误信息\n    * 无论生产还是开发都应该在日志中记录错误\n\n* 生产环境`php.ini`示例：\n\n        ; DO NOT display errors \n        display_startup_errors = Off    \n        display_errors = Off\n\n        ; Report all errors EXCEPT notices \n        error_reporting = E_ALL & ~E_NOTICE\n\n        ; Turn on error logging \n        log_errors = On\n        \n* 开发环境示例：\n        \n        ; Display errors \n        display_startup_errors = On \n        display_errors = On\n\n        ; Report all errors \n        error_reporting = -1\n\n        ; Turn on error logging \n        log_errors = On\n\n\n#### 错误处理\n\n* 等同于异常处理，错误也是可以被捕获的。如果只是临时使用错误捕获，一定不要忘了在自己的代码完成后恢复：\n\n        <?php // Register error handler \n        set_error_handler(function ($errno, $errstr, $errfile, $errline) { \n            if (!(error_reporting() & $errno)) { \n                // Error is not specified in the error_reporting \n                // setting, so we ignore it.\n                return; \n            }\n            throw new ErrorException($errstr, $errno, 0, $errfile, $errline);\n        });\n\n        // Your code goes here...\n\n        // Restore previous error handler \n        restore_error_handler();\n\n#### 第三方扩展推荐\n\n* [filp/whoops](https://github.com/filp/whoops) 是一个错误处理框架，提供一个优雅的错误界面帮助DEBUG。目前很多主流的框架比如Laraval 5, CakePHP 3等都已经内置了。\n* [Seldaek/monolog](https://github.com/Seldaek/monolog) 记录日志的插件\n\n","slug":"2017-02-20-php-advance-3-good-practice","published":1,"updated":"2020-04-19T02:55:56.903Z","_id":"ck96ffjax0020rmp98s2hh9ij","comments":1,"photos":[],"link":"","content":"<h3 id=\"净化、验证、转义输入输出\"><a href=\"#净化、验证、转义输入输出\" class=\"headerlink\" title=\"净化、验证、转义输入输出\"></a>净化、验证、转义输入输出</h3><h4 id=\"需要注意的几个外部数据源\"><a href=\"#需要注意的几个外部数据源\" class=\"headerlink\" title=\"需要注意的几个外部数据源\"></a>需要注意的几个外部数据源</h4><ul>\n<li>$_GET</li>\n<li>$_POST</li>\n<li>$_REQUEST</li>\n<li>$_COOKIE</li>\n<li>$argv</li>\n<li>php://stdin</li>\n<li>php://input</li>\n<li>file_get_contents()</li>\n<li>远程数据库</li>\n<li>远程 APIs</li>\n<li>远程客户端获取的数据</li>\n</ul>\n<h4 id=\"净化输入\"><a href=\"#净化输入\" class=\"headerlink\" title=\"净化输入\"></a>净化输入</h4><ul>\n<li><p>HTML </p>\n<ul>\n<li><p>在接触存储层之前，使用 htmlentities() 来净化 HTML 的特殊字符:</p>\n<pre><code>&lt;?php $input = &apos;&lt;p&gt;&lt;script&gt;alert(&quot;You won the Nigerian lottery!&quot;);&lt;/script&gt;&lt;/p&gt;&apos;; \necho htmlentities($input, ENT_QUOTES, &apos;UTF-8&apos;);</code></pre></li>\n<li><p>避免使用 preg_replace(), preg_replace_all() 和 preg_replace_callback() 等正则函数在HTML代码里。</p>\n</li>\n</ul>\n</li>\n<li><p>SQL 查询</p>\n<ul>\n<li>使用 PDO prepared statement 的形式，避免SQL注入等问题。</li>\n</ul>\n</li>\n<li><p>用户信息收集</p>\n<ul>\n<li><p>使用 filter_var() 和 filter_input() 来净化用户信息数据，如 emails, URL-encoded strings, integers, floats, HTML characters, URLs 等，例：</p>\n<pre><code>&lt;?php $email = &apos;john@example.com&apos;; \n$emailSafe = filter_var($email, FILTER_SANITIZE_EMAIL);</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"验证数据\"><a href=\"#验证数据\" class=\"headerlink\" title=\"验证数据\"></a>验证数据</h4><ul>\n<li><p>可以使用内置函数 filter_var() 来做简单的验证：</p>\n<pre><code>&lt;?php \n$input = &apos;john@example.com&apos;; \n$isEmail = filter_var($input, FILTER_VALIDATE_EMAIL); \nif ($isEmail !== false) {\n    echo &quot;Success&quot;; \n} else {\n    echo &quot;Fail&quot;; \n}</code></pre></li>\n<li><p>几个推荐的扩展库</p>\n<ul>\n<li><a href=\"https://packagist.org/packages/aura/filter\" target=\"_blank\" rel=\"noopener\">aura/filter</a></li>\n<li><a href=\"https://packagist.org/packages/respect/validation\" target=\"_blank\" rel=\"noopener\">respect/validation</a></li>\n<li><a href=\"https://packagist.org/packages/symfony/validator\" target=\"_blank\" rel=\"noopener\">symfony/validator</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"转义输出\"><a href=\"#转义输出\" class=\"headerlink\" title=\"转义输出\"></a>转义输出</h4><ul>\n<li><p>使用 htmlentities() ：</p>\n<pre><code>&lt;?php \n$output = &apos;&lt;p&gt;&lt;script&gt;alert(&quot;NSA backdoor installed&quot;);&lt;/script&gt;&apos;; \necho htmlentities($output, ENT_QUOTES, &apos;UTF-8&apos;);</code></pre></li>\n<li><p>使用模板引擎，比如：</p>\n<p>  <a href=\"https://packagist.org/packages/twig/twig\" target=\"_blank\" rel=\"noopener\">twig/twig</a></p>\n</li>\n</ul>\n<h3 id=\"密码\"><a href=\"#密码\" class=\"headerlink\" title=\"密码\"></a>密码</h3><h4 id=\"几个重要的准则\"><a href=\"#几个重要的准则\" class=\"headerlink\" title=\"几个重要的准则\"></a>几个重要的准则</h4><ul>\n<li><p>不要记录用户的密码</p>\n</li>\n<li><p>不要过多限制用户的密码，仅推荐限制长度即可</p>\n</li>\n<li><p>不要通过邮件发送用户密码</p>\n</li>\n<li><p>使用 bcrypt 函数单向加密用户密码，个人推荐 <a href=\"http://www.openwall.com/phpass/\" target=\"_blank\" rel=\"noopener\">phpass</a> 第三方扩展</p>\n</li>\n<li><p>用户注册和登录示例</p>\n<ul>\n<li><p>注册时使用 password_hash() 来加密用户密码, 源代码: <a href=\"https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/register.php\" target=\"_blank\" rel=\"noopener\">codeguy/modern-php</a></p>\n</li>\n<li><p>注：CRYPT_BLOWFISH 加密方式的salt的组成依次是：</p>\n<ul>\n<li><p>(“$2a$”, “$2x$” 或者 “$2y$”) + “xx”(04&lt;xx&lt;31) + “$” + “22个字符”(“./0-9A-Za-z”)， </p>\n</li>\n<li><p>例如：”$2a$07$usesomesillystringfor”</p>\n</li>\n<li><p>PHP 5.3.7 之后应使用”$2y$”作为前缀</p>\n<pre><code>&lt;?php\ntry {\n    // Validate email\n    $email = filter_input(INPUT_POST, &apos;email&apos;, FILTER_VALIDATE_EMAIL);\n    if (!$email) {\n        throw new Exception(&apos;Invalid email&apos;);\n    }\n\n    // Validate password\n    $password = filter_input(INPUT_POST, &apos;password&apos;);\n    if (!$password || mb_strlen($password) &lt; 8) {\n        throw new Exception(&apos;Password must contain 8+ characters&apos;);\n    }\n\n    // Create password hash\n    $passwordHash = password_hash(\n       $password,\n       CRYPT_BLOWFISH, // 加密方式\n       [&apos;cost&apos; =&gt; 12] // 递归次数\n    );\n    if ($passwordHash === false) {\n        throw new Exception(&apos;Password hash failed&apos;);\n    }\n\n    // Create user account (THIS IS PSUEDO-CODE)\n    // $user = new User();\n    // $user-&gt;email = $email;\n    // $user-&gt;password_hash = $passwordHash;\n    // $user-&gt;save();\n    // Redirect to login page\n\n    header(&apos;HTTP/1.1 302 Redirect&apos;);\n    header(&apos;Location: /login.php&apos;);\n} catch (Exception $e) {\n    // Report error\n    header(&apos;HTTP/1.1 400 Bad request&apos;);\n    echo $e-&gt;getMessage();\n}</code></pre></li>\n</ul>\n</li>\n<li><p>登录，不要忘了 rehash password ，源代码: <a href=\"https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/login.php\" target=\"_blank\" rel=\"noopener\">codeguy/modern-php</a></p>\n<pre><code>&lt;?php\nsession_start();\ntry {\n    // Get email address from request body\n    $email = filter_input(INPUT_POST, &apos;email&apos;);\n\n    // Get password from request body\n    $password = filter_input(INPUT_POST, &apos;password&apos;);\n\n    // Find account with email address (THIS IS PSUEDO-CODE)\n    $user = User::findByEmail($email);\n\n    // Verify password with account password hash\n    if (password_verify($password, $user-&gt;password_hash) === false) {\n        throw new Exception(&apos;Invalid password&apos;);\n    }\n\n    // Re-hash password if necessary (see note below)\n    $currentHashAlgorithm = CRYPT_BLOWFISH;\n    $currentHashOptions = array(&apos;cost&apos; =&gt; 15);\n    $passwordNeedsRehash = password_needs_rehash(\n        $user-&gt;password_hash,\n        $currentHashAlgorithm,\n        $currentHashOptions\n    );\n    if ($passwordNeedsRehash === true) {\n\n        // Save new password hash (THIS IS PSUEDO-CODE)\n        $user-&gt;password_hash = password_hash(\n            $password,\n            $currentHashAlgorithm,\n            $currentHashOptions\n        );\n        $user-&gt;save();\n    }\n\n    // Save login status to session\n    $_SESSION[&apos;user_logged_in&apos;] = &apos;yes&apos;;\n    $_SESSION[&apos;user_email&apos;] = $email;\n\n    // Redirect to profile page\n    header(&apos;HTTP/1.1 302 Redirect&apos;);\n    header(&apos;Location: /user-profile.php&apos;);\n} catch (Exception $e) {\n    header(&apos;HTTP/1.1 401 Unauthorized&apos;);\n    echo $e-&gt;getMessage();\n}</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"流\"><a href=\"#流\" class=\"headerlink\" title=\"流\"></a>流</h3><ul>\n<li>在源与目的地之间传输数据。源和目的地可以是文件、内存、命令行、标准输入输入等。</li>\n</ul>\n<h4 id=\"封装器\"><a href=\"#封装器\" class=\"headerlink\" title=\"封装器\"></a>封装器</h4><ul>\n<li>每个流都有协议和目标，格式为<code>&lt;scheme&gt;://&lt;target&gt;</code>，协议<scheme>即为封装器，目标<target>为数据源。常用的封装器有：<ul>\n<li><code>file://</code>. 我们常用的函数如 <code>file_get_contents()</code>, <code>fopen()</code>, <code>fwrite()</code>, <code>fclose()</code> 都是流的封装器。</li>\n<li><code>php://</code>. 标准输入输出的封装器。比如：<code>php://stdin</code>, <code>php://stdout</code>, <code>php://memory</code>, <code>php://temp</code>(类似<code>php://memory</code>, 只是这个写入的是临时文件)。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"上下文\"><a href=\"#上下文\" class=\"headerlink\" title=\"上下文\"></a>上下文</h4><ul>\n<li><p>用于定义流的行为。比如使用<code>stream_context_create()</code>可以让<code>file_get_contents()</code>发送 POST 请求：</p>\n<pre><code>&lt;?php\n$requestBody = &apos;{&quot;username&quot;:&quot;josh&quot;}&apos;; \n$context = stream_context_create(array(\n    &apos;http&apos; =&gt; array( \n        &apos;method&apos; =&gt; &apos;POST&apos;, \n            &apos;header&apos; =&gt; &quot;Content-Type: application/json;charset=utf-8;\\r\\n&quot; . \n                        &quot;Content-Length: &quot; . mb_strlen($requestBody), \n            &apos;content&apos; =&gt; $requestBody\n       )\n)); \n$response = file_get_contents(&apos;https://my-api.com/users&apos;, false, $context);</code></pre></li>\n</ul>\n<h4 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h4><ul>\n<li><p>在传输的过程中进行过滤、转换、增加、删除操作。</p>\n</li>\n<li><p>简单的例子，将传输过来的数据全都大写化：</p>\n<pre><code>&lt;?php \n$handle = fopen(&apos;data.txt&apos;, &apos;rb&apos;); \nstream_filter_append($handle, &apos;string.toupper&apos;); \nwhile(feof($handle) !== true) { \n    echo fgets($handle); // &lt;-- Outputs all uppercase characters \n} \nfclose($handle);</code></pre></li>\n<li><p>另一个例子：</p>\n<pre><code>&lt;?php \n$handle = fopen(&apos;php://filter/read=string.toupper/resource=data.txt&apos;, &apos;rb&apos;);\nwhile(feof($handle) !== true) { \n    echo fgets($handle); // &lt;-- Outputs all uppercase characters \n} \nfclose($handle);</code></pre><ul>\n<li>过滤器写在<code>php://</code>的流封装器里，其标准格式为：<code>filter/read=&lt;filter_name&gt;/resource=&lt;scheme&gt;://&lt;target&gt;</code></li>\n</ul>\n</li>\n<li><p>例子3, 使用bzip分开压缩过去30天的日志文件，每天一个压缩包:</p>\n<pre><code>&lt;?php\n$dateStart = new \\DateTime();\n$dateInterval = \\DateInterval::createFromDateString(&apos;-1 day&apos;);\n$datePeriod = new \\DatePeriod($dateStart, $dateInterval, 30);\nforeach ($datePeriod as $date) {\n    $file = &apos;sftp://USER:PASS@rsync.net/&apos; . $date-&gt;format(&apos;Y-m-d&apos;) . &apos;.log.bz2&apos;;\n    if (file_exists($file)) {\n        $handle = fopen($file, &apos;rb&apos;);\n        stream_filter_append($handle, &apos;bzip2.decompress&apos;);\n        while (feof($handle) !== true) {\n            $line = fgets($handle);\n            if (strpos($line, &apos;www.example.com&apos;) !== false) {\n                fwrite(STDOUT, $line);\n           }\n        }\n        fclose($handle);\n    }\n}</code></pre></li>\n<li><p>自定义过滤器。需完成以下三点：(参考实例：<a href=\"https://github.com/codeguy/modern-php/blob/master/05-good-practices/streams/DirtyWordsFilter.php\" target=\"_blank\" rel=\"noopener\">DirtyWordsFilter.php</a>)</p>\n<ul>\n<li>继承内置类<code>php_user_filter</code></li>\n<li>实现<code>filter()</code>, <code>onCreate()</code>, <code>onClose()</code>三个方法</li>\n<li>使用<code>stream_filter_register()</code>注册自定义的过滤器</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"错误和异常处理\"><a href=\"#错误和异常处理\" class=\"headerlink\" title=\"错误和异常处理\"></a>错误和异常处理</h3><h4 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h4><ul>\n<li><p>设置全局性的异常捕获来保证程序中未捕获的异常最后都会被记录下来。</p>\n<pre><code>&lt;?php // Register your exception handler \nset_exception_handler(function (Exception $e) { \n    // Handle and log exception \n}); \n\n// Your code goes here...\n\n// Restore previous exception handler \nrestore_exception_handler();</code></pre></li>\n<li><p>在开发环境中使用异常捕获以及日志来显示所有的DEBUG信息，在生产环境使用用户友好的提示信息。</p>\n</li>\n</ul>\n<h4 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h4><ul>\n<li><p>四个准则</p>\n<ul>\n<li>打开错误报告</li>\n<li>在测试环境中显示错误信息</li>\n<li>不在生产环境中显示错误信息</li>\n<li>无论生产还是开发都应该在日志中记录错误</li>\n</ul>\n</li>\n<li><p>生产环境<code>php.ini</code>示例：</p>\n<pre><code>; DO NOT display errors \ndisplay_startup_errors = Off    \ndisplay_errors = Off\n\n; Report all errors EXCEPT notices \nerror_reporting = E_ALL &amp; ~E_NOTICE\n\n; Turn on error logging \nlog_errors = On</code></pre></li>\n<li><p>开发环境示例：</p>\n<pre><code>; Display errors \ndisplay_startup_errors = On \ndisplay_errors = On\n\n; Report all errors \nerror_reporting = -1\n\n; Turn on error logging \nlog_errors = On</code></pre></li>\n</ul>\n<h4 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h4><ul>\n<li><p>等同于异常处理，错误也是可以被捕获的。如果只是临时使用错误捕获，一定不要忘了在自己的代码完成后恢复：</p>\n<pre><code>&lt;?php // Register error handler \nset_error_handler(function ($errno, $errstr, $errfile, $errline) { \n    if (!(error_reporting() &amp; $errno)) { \n        // Error is not specified in the error_reporting \n        // setting, so we ignore it.\n        return; \n    }\n    throw new ErrorException($errstr, $errno, 0, $errfile, $errline);\n});\n\n// Your code goes here...\n\n// Restore previous error handler \nrestore_error_handler();</code></pre></li>\n</ul>\n<h4 id=\"第三方扩展推荐\"><a href=\"#第三方扩展推荐\" class=\"headerlink\" title=\"第三方扩展推荐\"></a>第三方扩展推荐</h4><ul>\n<li><a href=\"https://github.com/filp/whoops\" target=\"_blank\" rel=\"noopener\">filp/whoops</a> 是一个错误处理框架，提供一个优雅的错误界面帮助DEBUG。目前很多主流的框架比如Laraval 5, CakePHP 3等都已经内置了。</li>\n<li><a href=\"https://github.com/Seldaek/monolog\" target=\"_blank\" rel=\"noopener\">Seldaek/monolog</a> 记录日志的插件</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"净化、验证、转义输入输出\"><a href=\"#净化、验证、转义输入输出\" class=\"headerlink\" title=\"净化、验证、转义输入输出\"></a>净化、验证、转义输入输出</h3><h4 id=\"需要注意的几个外部数据源\"><a href=\"#需要注意的几个外部数据源\" class=\"headerlink\" title=\"需要注意的几个外部数据源\"></a>需要注意的几个外部数据源</h4><ul>\n<li>$_GET</li>\n<li>$_POST</li>\n<li>$_REQUEST</li>\n<li>$_COOKIE</li>\n<li>$argv</li>\n<li>php://stdin</li>\n<li>php://input</li>\n<li>file_get_contents()</li>\n<li>远程数据库</li>\n<li>远程 APIs</li>\n<li>远程客户端获取的数据</li>\n</ul>\n<h4 id=\"净化输入\"><a href=\"#净化输入\" class=\"headerlink\" title=\"净化输入\"></a>净化输入</h4><ul>\n<li><p>HTML </p>\n<ul>\n<li><p>在接触存储层之前，使用 htmlentities() 来净化 HTML 的特殊字符:</p>\n<pre><code>&lt;?php $input = &apos;&lt;p&gt;&lt;script&gt;alert(&quot;You won the Nigerian lottery!&quot;);&lt;/script&gt;&lt;/p&gt;&apos;; \necho htmlentities($input, ENT_QUOTES, &apos;UTF-8&apos;);</code></pre></li>\n<li><p>避免使用 preg_replace(), preg_replace_all() 和 preg_replace_callback() 等正则函数在HTML代码里。</p>\n</li>\n</ul>\n</li>\n<li><p>SQL 查询</p>\n<ul>\n<li>使用 PDO prepared statement 的形式，避免SQL注入等问题。</li>\n</ul>\n</li>\n<li><p>用户信息收集</p>\n<ul>\n<li><p>使用 filter_var() 和 filter_input() 来净化用户信息数据，如 emails, URL-encoded strings, integers, floats, HTML characters, URLs 等，例：</p>\n<pre><code>&lt;?php $email = &apos;john@example.com&apos;; \n$emailSafe = filter_var($email, FILTER_SANITIZE_EMAIL);</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"验证数据\"><a href=\"#验证数据\" class=\"headerlink\" title=\"验证数据\"></a>验证数据</h4><ul>\n<li><p>可以使用内置函数 filter_var() 来做简单的验证：</p>\n<pre><code>&lt;?php \n$input = &apos;john@example.com&apos;; \n$isEmail = filter_var($input, FILTER_VALIDATE_EMAIL); \nif ($isEmail !== false) {\n    echo &quot;Success&quot;; \n} else {\n    echo &quot;Fail&quot;; \n}</code></pre></li>\n<li><p>几个推荐的扩展库</p>\n<ul>\n<li><a href=\"https://packagist.org/packages/aura/filter\" target=\"_blank\" rel=\"noopener\">aura/filter</a></li>\n<li><a href=\"https://packagist.org/packages/respect/validation\" target=\"_blank\" rel=\"noopener\">respect/validation</a></li>\n<li><a href=\"https://packagist.org/packages/symfony/validator\" target=\"_blank\" rel=\"noopener\">symfony/validator</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"转义输出\"><a href=\"#转义输出\" class=\"headerlink\" title=\"转义输出\"></a>转义输出</h4><ul>\n<li><p>使用 htmlentities() ：</p>\n<pre><code>&lt;?php \n$output = &apos;&lt;p&gt;&lt;script&gt;alert(&quot;NSA backdoor installed&quot;);&lt;/script&gt;&apos;; \necho htmlentities($output, ENT_QUOTES, &apos;UTF-8&apos;);</code></pre></li>\n<li><p>使用模板引擎，比如：</p>\n<p>  <a href=\"https://packagist.org/packages/twig/twig\" target=\"_blank\" rel=\"noopener\">twig/twig</a></p>\n</li>\n</ul>\n<h3 id=\"密码\"><a href=\"#密码\" class=\"headerlink\" title=\"密码\"></a>密码</h3><h4 id=\"几个重要的准则\"><a href=\"#几个重要的准则\" class=\"headerlink\" title=\"几个重要的准则\"></a>几个重要的准则</h4><ul>\n<li><p>不要记录用户的密码</p>\n</li>\n<li><p>不要过多限制用户的密码，仅推荐限制长度即可</p>\n</li>\n<li><p>不要通过邮件发送用户密码</p>\n</li>\n<li><p>使用 bcrypt 函数单向加密用户密码，个人推荐 <a href=\"http://www.openwall.com/phpass/\" target=\"_blank\" rel=\"noopener\">phpass</a> 第三方扩展</p>\n</li>\n<li><p>用户注册和登录示例</p>\n<ul>\n<li><p>注册时使用 password_hash() 来加密用户密码, 源代码: <a href=\"https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/register.php\" target=\"_blank\" rel=\"noopener\">codeguy/modern-php</a></p>\n</li>\n<li><p>注：CRYPT_BLOWFISH 加密方式的salt的组成依次是：</p>\n<ul>\n<li><p>(“$2a$”, “$2x$” 或者 “$2y$”) + “xx”(04&lt;xx&lt;31) + “$” + “22个字符”(“./0-9A-Za-z”)， </p>\n</li>\n<li><p>例如：”$2a$07$usesomesillystringfor”</p>\n</li>\n<li><p>PHP 5.3.7 之后应使用”$2y$”作为前缀</p>\n<pre><code>&lt;?php\ntry {\n    // Validate email\n    $email = filter_input(INPUT_POST, &apos;email&apos;, FILTER_VALIDATE_EMAIL);\n    if (!$email) {\n        throw new Exception(&apos;Invalid email&apos;);\n    }\n\n    // Validate password\n    $password = filter_input(INPUT_POST, &apos;password&apos;);\n    if (!$password || mb_strlen($password) &lt; 8) {\n        throw new Exception(&apos;Password must contain 8+ characters&apos;);\n    }\n\n    // Create password hash\n    $passwordHash = password_hash(\n       $password,\n       CRYPT_BLOWFISH, // 加密方式\n       [&apos;cost&apos; =&gt; 12] // 递归次数\n    );\n    if ($passwordHash === false) {\n        throw new Exception(&apos;Password hash failed&apos;);\n    }\n\n    // Create user account (THIS IS PSUEDO-CODE)\n    // $user = new User();\n    // $user-&gt;email = $email;\n    // $user-&gt;password_hash = $passwordHash;\n    // $user-&gt;save();\n    // Redirect to login page\n\n    header(&apos;HTTP/1.1 302 Redirect&apos;);\n    header(&apos;Location: /login.php&apos;);\n} catch (Exception $e) {\n    // Report error\n    header(&apos;HTTP/1.1 400 Bad request&apos;);\n    echo $e-&gt;getMessage();\n}</code></pre></li>\n</ul>\n</li>\n<li><p>登录，不要忘了 rehash password ，源代码: <a href=\"https://github.com/codeguy/modern-php/blob/master/05-good-practices/passwords/login.php\" target=\"_blank\" rel=\"noopener\">codeguy/modern-php</a></p>\n<pre><code>&lt;?php\nsession_start();\ntry {\n    // Get email address from request body\n    $email = filter_input(INPUT_POST, &apos;email&apos;);\n\n    // Get password from request body\n    $password = filter_input(INPUT_POST, &apos;password&apos;);\n\n    // Find account with email address (THIS IS PSUEDO-CODE)\n    $user = User::findByEmail($email);\n\n    // Verify password with account password hash\n    if (password_verify($password, $user-&gt;password_hash) === false) {\n        throw new Exception(&apos;Invalid password&apos;);\n    }\n\n    // Re-hash password if necessary (see note below)\n    $currentHashAlgorithm = CRYPT_BLOWFISH;\n    $currentHashOptions = array(&apos;cost&apos; =&gt; 15);\n    $passwordNeedsRehash = password_needs_rehash(\n        $user-&gt;password_hash,\n        $currentHashAlgorithm,\n        $currentHashOptions\n    );\n    if ($passwordNeedsRehash === true) {\n\n        // Save new password hash (THIS IS PSUEDO-CODE)\n        $user-&gt;password_hash = password_hash(\n            $password,\n            $currentHashAlgorithm,\n            $currentHashOptions\n        );\n        $user-&gt;save();\n    }\n\n    // Save login status to session\n    $_SESSION[&apos;user_logged_in&apos;] = &apos;yes&apos;;\n    $_SESSION[&apos;user_email&apos;] = $email;\n\n    // Redirect to profile page\n    header(&apos;HTTP/1.1 302 Redirect&apos;);\n    header(&apos;Location: /user-profile.php&apos;);\n} catch (Exception $e) {\n    header(&apos;HTTP/1.1 401 Unauthorized&apos;);\n    echo $e-&gt;getMessage();\n}</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"流\"><a href=\"#流\" class=\"headerlink\" title=\"流\"></a>流</h3><ul>\n<li>在源与目的地之间传输数据。源和目的地可以是文件、内存、命令行、标准输入输入等。</li>\n</ul>\n<h4 id=\"封装器\"><a href=\"#封装器\" class=\"headerlink\" title=\"封装器\"></a>封装器</h4><ul>\n<li>每个流都有协议和目标，格式为<code>&lt;scheme&gt;://&lt;target&gt;</code>，协议<scheme>即为封装器，目标<target>为数据源。常用的封装器有：<ul>\n<li><code>file://</code>. 我们常用的函数如 <code>file_get_contents()</code>, <code>fopen()</code>, <code>fwrite()</code>, <code>fclose()</code> 都是流的封装器。</li>\n<li><code>php://</code>. 标准输入输出的封装器。比如：<code>php://stdin</code>, <code>php://stdout</code>, <code>php://memory</code>, <code>php://temp</code>(类似<code>php://memory</code>, 只是这个写入的是临时文件)。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"上下文\"><a href=\"#上下文\" class=\"headerlink\" title=\"上下文\"></a>上下文</h4><ul>\n<li><p>用于定义流的行为。比如使用<code>stream_context_create()</code>可以让<code>file_get_contents()</code>发送 POST 请求：</p>\n<pre><code>&lt;?php\n$requestBody = &apos;{&quot;username&quot;:&quot;josh&quot;}&apos;; \n$context = stream_context_create(array(\n    &apos;http&apos; =&gt; array( \n        &apos;method&apos; =&gt; &apos;POST&apos;, \n            &apos;header&apos; =&gt; &quot;Content-Type: application/json;charset=utf-8;\\r\\n&quot; . \n                        &quot;Content-Length: &quot; . mb_strlen($requestBody), \n            &apos;content&apos; =&gt; $requestBody\n       )\n)); \n$response = file_get_contents(&apos;https://my-api.com/users&apos;, false, $context);</code></pre></li>\n</ul>\n<h4 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h4><ul>\n<li><p>在传输的过程中进行过滤、转换、增加、删除操作。</p>\n</li>\n<li><p>简单的例子，将传输过来的数据全都大写化：</p>\n<pre><code>&lt;?php \n$handle = fopen(&apos;data.txt&apos;, &apos;rb&apos;); \nstream_filter_append($handle, &apos;string.toupper&apos;); \nwhile(feof($handle) !== true) { \n    echo fgets($handle); // &lt;-- Outputs all uppercase characters \n} \nfclose($handle);</code></pre></li>\n<li><p>另一个例子：</p>\n<pre><code>&lt;?php \n$handle = fopen(&apos;php://filter/read=string.toupper/resource=data.txt&apos;, &apos;rb&apos;);\nwhile(feof($handle) !== true) { \n    echo fgets($handle); // &lt;-- Outputs all uppercase characters \n} \nfclose($handle);</code></pre><ul>\n<li>过滤器写在<code>php://</code>的流封装器里，其标准格式为：<code>filter/read=&lt;filter_name&gt;/resource=&lt;scheme&gt;://&lt;target&gt;</code></li>\n</ul>\n</li>\n<li><p>例子3, 使用bzip分开压缩过去30天的日志文件，每天一个压缩包:</p>\n<pre><code>&lt;?php\n$dateStart = new \\DateTime();\n$dateInterval = \\DateInterval::createFromDateString(&apos;-1 day&apos;);\n$datePeriod = new \\DatePeriod($dateStart, $dateInterval, 30);\nforeach ($datePeriod as $date) {\n    $file = &apos;sftp://USER:PASS@rsync.net/&apos; . $date-&gt;format(&apos;Y-m-d&apos;) . &apos;.log.bz2&apos;;\n    if (file_exists($file)) {\n        $handle = fopen($file, &apos;rb&apos;);\n        stream_filter_append($handle, &apos;bzip2.decompress&apos;);\n        while (feof($handle) !== true) {\n            $line = fgets($handle);\n            if (strpos($line, &apos;www.example.com&apos;) !== false) {\n                fwrite(STDOUT, $line);\n           }\n        }\n        fclose($handle);\n    }\n}</code></pre></li>\n<li><p>自定义过滤器。需完成以下三点：(参考实例：<a href=\"https://github.com/codeguy/modern-php/blob/master/05-good-practices/streams/DirtyWordsFilter.php\" target=\"_blank\" rel=\"noopener\">DirtyWordsFilter.php</a>)</p>\n<ul>\n<li>继承内置类<code>php_user_filter</code></li>\n<li>实现<code>filter()</code>, <code>onCreate()</code>, <code>onClose()</code>三个方法</li>\n<li>使用<code>stream_filter_register()</code>注册自定义的过滤器</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"错误和异常处理\"><a href=\"#错误和异常处理\" class=\"headerlink\" title=\"错误和异常处理\"></a>错误和异常处理</h3><h4 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h4><ul>\n<li><p>设置全局性的异常捕获来保证程序中未捕获的异常最后都会被记录下来。</p>\n<pre><code>&lt;?php // Register your exception handler \nset_exception_handler(function (Exception $e) { \n    // Handle and log exception \n}); \n\n// Your code goes here...\n\n// Restore previous exception handler \nrestore_exception_handler();</code></pre></li>\n<li><p>在开发环境中使用异常捕获以及日志来显示所有的DEBUG信息，在生产环境使用用户友好的提示信息。</p>\n</li>\n</ul>\n<h4 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h4><ul>\n<li><p>四个准则</p>\n<ul>\n<li>打开错误报告</li>\n<li>在测试环境中显示错误信息</li>\n<li>不在生产环境中显示错误信息</li>\n<li>无论生产还是开发都应该在日志中记录错误</li>\n</ul>\n</li>\n<li><p>生产环境<code>php.ini</code>示例：</p>\n<pre><code>; DO NOT display errors \ndisplay_startup_errors = Off    \ndisplay_errors = Off\n\n; Report all errors EXCEPT notices \nerror_reporting = E_ALL &amp; ~E_NOTICE\n\n; Turn on error logging \nlog_errors = On</code></pre></li>\n<li><p>开发环境示例：</p>\n<pre><code>; Display errors \ndisplay_startup_errors = On \ndisplay_errors = On\n\n; Report all errors \nerror_reporting = -1\n\n; Turn on error logging \nlog_errors = On</code></pre></li>\n</ul>\n<h4 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h4><ul>\n<li><p>等同于异常处理，错误也是可以被捕获的。如果只是临时使用错误捕获，一定不要忘了在自己的代码完成后恢复：</p>\n<pre><code>&lt;?php // Register error handler \nset_error_handler(function ($errno, $errstr, $errfile, $errline) { \n    if (!(error_reporting() &amp; $errno)) { \n        // Error is not specified in the error_reporting \n        // setting, so we ignore it.\n        return; \n    }\n    throw new ErrorException($errstr, $errno, 0, $errfile, $errline);\n});\n\n// Your code goes here...\n\n// Restore previous error handler \nrestore_error_handler();</code></pre></li>\n</ul>\n<h4 id=\"第三方扩展推荐\"><a href=\"#第三方扩展推荐\" class=\"headerlink\" title=\"第三方扩展推荐\"></a>第三方扩展推荐</h4><ul>\n<li><a href=\"https://github.com/filp/whoops\" target=\"_blank\" rel=\"noopener\">filp/whoops</a> 是一个错误处理框架，提供一个优雅的错误界面帮助DEBUG。目前很多主流的框架比如Laraval 5, CakePHP 3等都已经内置了。</li>\n<li><a href=\"https://github.com/Seldaek/monolog\" target=\"_blank\" rel=\"noopener\">Seldaek/monolog</a> 记录日志的插件</li>\n</ul>\n"},{"layout":"post","title":"服务器配置及性能调优 - PHP进阶 (4)","date":"2017-02-25T05:00:00.000Z","description":"服务器配置及性能调优","keywords":"性能调优, PHP, Note, 服务器","_content":"\n### PHP-FPM 配置\n\n#### 全局配置\n* `emergency_restart_threshold = 10`\n    * 如果子进程在 `emergency_restart_interval` 设定的时间内收到该参数设定次数的 `SIGSEGV` 或者 `SIGBUS`退出信息号，则`FPM`会重新启动。0 表示“关闭该功能”。默认值：0（关闭）。\n* `emergency_restart_interval = 1m`\n    * 用于设定平滑重启的间隔时间。这么做有助于解决加速器中共享内存的使用问题。   \n\n#### 进程池配置\n* `pm.max_requests = 1000`\n    * 设置每个子进程重生之前服务的请求数。对于可能存在内存泄漏的第三方模块来说是非常有用的。如果设置为 '0' 则一直接受请求，等同于 `PHP_FCGI_MAX_REQUESTS` 环境变量。默认值：0。\n* `request_slowlog_timeout = 5s`\n    * 当一个请求该设置的超时时间后，就会将对应的 PHP 调用堆栈信息完整写入到慢日志中。设置为 '0' 表示 'Off'。\n\n#### 确定 PHP-FPM 的进程数\n* 首先确定服务器可以分配给PHP的内存大小\n* 其次确定单个PHP进程的内存消耗\n* 最后确定进程数\n* 上线前别忘了使用 Apache Bench 或者 Seige 来做压力测试\n\n### Zend OPcache\n* 通俗来讲，OPcache 是用来预编译PHP的代码到缓存里来加速HTTP的请求。\n\n### Session 处理\n* 由于PHP默认会将session以文件的形式存储在磁盘上，必然会加大磁盘的I/O，拖慢系统。使用内存存储的方式，比如 Memcached 或者 Redis 会是更好的选择。而且这种方式会便于以后扩展分布式系统时保证 Session 共享。\n\n","source":"_posts/2017-02-25-php-advance-4-tuning.md","raw":"---\nlayout: post\ntitle: 服务器配置及性能调优 - PHP进阶 (4)\ncategory: 编程学习\ntags: [PHP]\ndate: 2017-02-25\ndescription: 服务器配置及性能调优\nkeywords: 性能调优, PHP, Note, 服务器\n---\n\n### PHP-FPM 配置\n\n#### 全局配置\n* `emergency_restart_threshold = 10`\n    * 如果子进程在 `emergency_restart_interval` 设定的时间内收到该参数设定次数的 `SIGSEGV` 或者 `SIGBUS`退出信息号，则`FPM`会重新启动。0 表示“关闭该功能”。默认值：0（关闭）。\n* `emergency_restart_interval = 1m`\n    * 用于设定平滑重启的间隔时间。这么做有助于解决加速器中共享内存的使用问题。   \n\n#### 进程池配置\n* `pm.max_requests = 1000`\n    * 设置每个子进程重生之前服务的请求数。对于可能存在内存泄漏的第三方模块来说是非常有用的。如果设置为 '0' 则一直接受请求，等同于 `PHP_FCGI_MAX_REQUESTS` 环境变量。默认值：0。\n* `request_slowlog_timeout = 5s`\n    * 当一个请求该设置的超时时间后，就会将对应的 PHP 调用堆栈信息完整写入到慢日志中。设置为 '0' 表示 'Off'。\n\n#### 确定 PHP-FPM 的进程数\n* 首先确定服务器可以分配给PHP的内存大小\n* 其次确定单个PHP进程的内存消耗\n* 最后确定进程数\n* 上线前别忘了使用 Apache Bench 或者 Seige 来做压力测试\n\n### Zend OPcache\n* 通俗来讲，OPcache 是用来预编译PHP的代码到缓存里来加速HTTP的请求。\n\n### Session 处理\n* 由于PHP默认会将session以文件的形式存储在磁盘上，必然会加大磁盘的I/O，拖慢系统。使用内存存储的方式，比如 Memcached 或者 Redis 会是更好的选择。而且这种方式会便于以后扩展分布式系统时保证 Session 共享。\n\n","slug":"2017-02-25-php-advance-4-tuning","published":1,"updated":"2020-04-19T02:55:53.141Z","_id":"ck96ffjaz0023rmp9a6ge1396","comments":1,"photos":[],"link":"","content":"<h3 id=\"PHP-FPM-配置\"><a href=\"#PHP-FPM-配置\" class=\"headerlink\" title=\"PHP-FPM 配置\"></a>PHP-FPM 配置</h3><h4 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h4><ul>\n<li><code>emergency_restart_threshold = 10</code><ul>\n<li>如果子进程在 <code>emergency_restart_interval</code> 设定的时间内收到该参数设定次数的 <code>SIGSEGV</code> 或者 <code>SIGBUS</code>退出信息号，则<code>FPM</code>会重新启动。0 表示“关闭该功能”。默认值：0（关闭）。</li>\n</ul>\n</li>\n<li><code>emergency_restart_interval = 1m</code><ul>\n<li>用于设定平滑重启的间隔时间。这么做有助于解决加速器中共享内存的使用问题。   </li>\n</ul>\n</li>\n</ul>\n<h4 id=\"进程池配置\"><a href=\"#进程池配置\" class=\"headerlink\" title=\"进程池配置\"></a>进程池配置</h4><ul>\n<li><code>pm.max_requests = 1000</code><ul>\n<li>设置每个子进程重生之前服务的请求数。对于可能存在内存泄漏的第三方模块来说是非常有用的。如果设置为 ‘0’ 则一直接受请求，等同于 <code>PHP_FCGI_MAX_REQUESTS</code> 环境变量。默认值：0。</li>\n</ul>\n</li>\n<li><code>request_slowlog_timeout = 5s</code><ul>\n<li>当一个请求该设置的超时时间后，就会将对应的 PHP 调用堆栈信息完整写入到慢日志中。设置为 ‘0’ 表示 ‘Off’。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"确定-PHP-FPM-的进程数\"><a href=\"#确定-PHP-FPM-的进程数\" class=\"headerlink\" title=\"确定 PHP-FPM 的进程数\"></a>确定 PHP-FPM 的进程数</h4><ul>\n<li>首先确定服务器可以分配给PHP的内存大小</li>\n<li>其次确定单个PHP进程的内存消耗</li>\n<li>最后确定进程数</li>\n<li>上线前别忘了使用 Apache Bench 或者 Seige 来做压力测试</li>\n</ul>\n<h3 id=\"Zend-OPcache\"><a href=\"#Zend-OPcache\" class=\"headerlink\" title=\"Zend OPcache\"></a>Zend OPcache</h3><ul>\n<li>通俗来讲，OPcache 是用来预编译PHP的代码到缓存里来加速HTTP的请求。</li>\n</ul>\n<h3 id=\"Session-处理\"><a href=\"#Session-处理\" class=\"headerlink\" title=\"Session 处理\"></a>Session 处理</h3><ul>\n<li>由于PHP默认会将session以文件的形式存储在磁盘上，必然会加大磁盘的I/O，拖慢系统。使用内存存储的方式，比如 Memcached 或者 Redis 会是更好的选择。而且这种方式会便于以后扩展分布式系统时保证 Session 共享。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"PHP-FPM-配置\"><a href=\"#PHP-FPM-配置\" class=\"headerlink\" title=\"PHP-FPM 配置\"></a>PHP-FPM 配置</h3><h4 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h4><ul>\n<li><code>emergency_restart_threshold = 10</code><ul>\n<li>如果子进程在 <code>emergency_restart_interval</code> 设定的时间内收到该参数设定次数的 <code>SIGSEGV</code> 或者 <code>SIGBUS</code>退出信息号，则<code>FPM</code>会重新启动。0 表示“关闭该功能”。默认值：0（关闭）。</li>\n</ul>\n</li>\n<li><code>emergency_restart_interval = 1m</code><ul>\n<li>用于设定平滑重启的间隔时间。这么做有助于解决加速器中共享内存的使用问题。   </li>\n</ul>\n</li>\n</ul>\n<h4 id=\"进程池配置\"><a href=\"#进程池配置\" class=\"headerlink\" title=\"进程池配置\"></a>进程池配置</h4><ul>\n<li><code>pm.max_requests = 1000</code><ul>\n<li>设置每个子进程重生之前服务的请求数。对于可能存在内存泄漏的第三方模块来说是非常有用的。如果设置为 ‘0’ 则一直接受请求，等同于 <code>PHP_FCGI_MAX_REQUESTS</code> 环境变量。默认值：0。</li>\n</ul>\n</li>\n<li><code>request_slowlog_timeout = 5s</code><ul>\n<li>当一个请求该设置的超时时间后，就会将对应的 PHP 调用堆栈信息完整写入到慢日志中。设置为 ‘0’ 表示 ‘Off’。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"确定-PHP-FPM-的进程数\"><a href=\"#确定-PHP-FPM-的进程数\" class=\"headerlink\" title=\"确定 PHP-FPM 的进程数\"></a>确定 PHP-FPM 的进程数</h4><ul>\n<li>首先确定服务器可以分配给PHP的内存大小</li>\n<li>其次确定单个PHP进程的内存消耗</li>\n<li>最后确定进程数</li>\n<li>上线前别忘了使用 Apache Bench 或者 Seige 来做压力测试</li>\n</ul>\n<h3 id=\"Zend-OPcache\"><a href=\"#Zend-OPcache\" class=\"headerlink\" title=\"Zend OPcache\"></a>Zend OPcache</h3><ul>\n<li>通俗来讲，OPcache 是用来预编译PHP的代码到缓存里来加速HTTP的请求。</li>\n</ul>\n<h3 id=\"Session-处理\"><a href=\"#Session-处理\" class=\"headerlink\" title=\"Session 处理\"></a>Session 处理</h3><ul>\n<li>由于PHP默认会将session以文件的形式存储在磁盘上，必然会加大磁盘的I/O，拖慢系统。使用内存存储的方式，比如 Memcached 或者 Redis 会是更好的选择。而且这种方式会便于以后扩展分布式系统时保证 Session 共享。</li>\n</ul>\n"},{"layout":"post","title":"部署和测试工具 - PHP进阶 (5)","date":"2017-02-26T05:00:00.000Z","description":"部署和测试工具","keywords":"代码部署, 测试, PHP, Note","_content":"\n### 测试\n#### 概念分类\n* 单元测试(Unit Test) - 在项目中独立测试函数、方法、类等。\n* TDD(Test-Driven Development) - 项目开始后，先写一部分测试用例，然后实现，然后继续写测试用例，继续实现，不断循环直至项目完成或终止。\n* BDD(Behavior-Driven Development) - 基于行为流程来描述程序的实现。类似于单元测试，只是在实现上应用了比较友好的表达方式便于理解。\n    * SpecBDD - 面向开发人员。使用编程语言表达。例： [phpspec](http://www.phpspec.net/en/stable/)\n    * StoryBDD - 面向产品经理。基于英语语言表达。例：[behat](http://behat.org/en/latest/)\n\n### 自动化部署工具\n* [capistrano/capistrano](https://github.com/capistrano/capistrano)\n* [magephp](http://magephp.com/)\n* [Rocketeer](http://rocketeer.autopergamene.eu/)\n\n### 代码分析工具\n* [Xdebug](https://xdebug.org/)\n* [blackfire](https://blackfire.io/)\n\n","source":"_posts/2017-02-26-php-advance-5-development-testing.md","raw":"---\nlayout: post\ntitle: 部署和测试工具 - PHP进阶 (5)\ncategory: 编程学习\ntags: [PHP]\ndate: 2017-02-26\ndescription: 部署和测试工具\nkeywords: 代码部署, 测试, PHP, Note\n---\n\n### 测试\n#### 概念分类\n* 单元测试(Unit Test) - 在项目中独立测试函数、方法、类等。\n* TDD(Test-Driven Development) - 项目开始后，先写一部分测试用例，然后实现，然后继续写测试用例，继续实现，不断循环直至项目完成或终止。\n* BDD(Behavior-Driven Development) - 基于行为流程来描述程序的实现。类似于单元测试，只是在实现上应用了比较友好的表达方式便于理解。\n    * SpecBDD - 面向开发人员。使用编程语言表达。例： [phpspec](http://www.phpspec.net/en/stable/)\n    * StoryBDD - 面向产品经理。基于英语语言表达。例：[behat](http://behat.org/en/latest/)\n\n### 自动化部署工具\n* [capistrano/capistrano](https://github.com/capistrano/capistrano)\n* [magephp](http://magephp.com/)\n* [Rocketeer](http://rocketeer.autopergamene.eu/)\n\n### 代码分析工具\n* [Xdebug](https://xdebug.org/)\n* [blackfire](https://blackfire.io/)\n\n","slug":"2017-02-26-php-advance-5-development-testing","published":1,"updated":"2020-04-19T02:55:48.911Z","_id":"ck96ffjb00026rmp9c0hv0m32","comments":1,"photos":[],"link":"","content":"<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><h4 id=\"概念分类\"><a href=\"#概念分类\" class=\"headerlink\" title=\"概念分类\"></a>概念分类</h4><ul>\n<li>单元测试(Unit Test) - 在项目中独立测试函数、方法、类等。</li>\n<li>TDD(Test-Driven Development) - 项目开始后，先写一部分测试用例，然后实现，然后继续写测试用例，继续实现，不断循环直至项目完成或终止。</li>\n<li>BDD(Behavior-Driven Development) - 基于行为流程来描述程序的实现。类似于单元测试，只是在实现上应用了比较友好的表达方式便于理解。<ul>\n<li>SpecBDD - 面向开发人员。使用编程语言表达。例： <a href=\"http://www.phpspec.net/en/stable/\" target=\"_blank\" rel=\"noopener\">phpspec</a></li>\n<li>StoryBDD - 面向产品经理。基于英语语言表达。例：<a href=\"http://behat.org/en/latest/\" target=\"_blank\" rel=\"noopener\">behat</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自动化部署工具\"><a href=\"#自动化部署工具\" class=\"headerlink\" title=\"自动化部署工具\"></a>自动化部署工具</h3><ul>\n<li><a href=\"https://github.com/capistrano/capistrano\" target=\"_blank\" rel=\"noopener\">capistrano/capistrano</a></li>\n<li><a href=\"http://magephp.com/\" target=\"_blank\" rel=\"noopener\">magephp</a></li>\n<li><a href=\"http://rocketeer.autopergamene.eu/\" target=\"_blank\" rel=\"noopener\">Rocketeer</a></li>\n</ul>\n<h3 id=\"代码分析工具\"><a href=\"#代码分析工具\" class=\"headerlink\" title=\"代码分析工具\"></a>代码分析工具</h3><ul>\n<li><a href=\"https://xdebug.org/\" target=\"_blank\" rel=\"noopener\">Xdebug</a></li>\n<li><a href=\"https://blackfire.io/\" target=\"_blank\" rel=\"noopener\">blackfire</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><h4 id=\"概念分类\"><a href=\"#概念分类\" class=\"headerlink\" title=\"概念分类\"></a>概念分类</h4><ul>\n<li>单元测试(Unit Test) - 在项目中独立测试函数、方法、类等。</li>\n<li>TDD(Test-Driven Development) - 项目开始后，先写一部分测试用例，然后实现，然后继续写测试用例，继续实现，不断循环直至项目完成或终止。</li>\n<li>BDD(Behavior-Driven Development) - 基于行为流程来描述程序的实现。类似于单元测试，只是在实现上应用了比较友好的表达方式便于理解。<ul>\n<li>SpecBDD - 面向开发人员。使用编程语言表达。例： <a href=\"http://www.phpspec.net/en/stable/\" target=\"_blank\" rel=\"noopener\">phpspec</a></li>\n<li>StoryBDD - 面向产品经理。基于英语语言表达。例：<a href=\"http://behat.org/en/latest/\" target=\"_blank\" rel=\"noopener\">behat</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自动化部署工具\"><a href=\"#自动化部署工具\" class=\"headerlink\" title=\"自动化部署工具\"></a>自动化部署工具</h3><ul>\n<li><a href=\"https://github.com/capistrano/capistrano\" target=\"_blank\" rel=\"noopener\">capistrano/capistrano</a></li>\n<li><a href=\"http://magephp.com/\" target=\"_blank\" rel=\"noopener\">magephp</a></li>\n<li><a href=\"http://rocketeer.autopergamene.eu/\" target=\"_blank\" rel=\"noopener\">Rocketeer</a></li>\n</ul>\n<h3 id=\"代码分析工具\"><a href=\"#代码分析工具\" class=\"headerlink\" title=\"代码分析工具\"></a>代码分析工具</h3><ul>\n<li><a href=\"https://xdebug.org/\" target=\"_blank\" rel=\"noopener\">Xdebug</a></li>\n<li><a href=\"https://blackfire.io/\" target=\"_blank\" rel=\"noopener\">blackfire</a></li>\n</ul>\n"},{"layout":"post","title":"VIM的基本命令使用以及插件配置","date":"2017-01-04T05:00:00.000Z","description":"VIM的基本命令使用以及插件配置","keywords":"VIM, Plugin, CtrlSpace, 基本命令, 插件配置","_content":"\n* 好不容易用英语写完了， 懒得翻译了\n\n## Basic Usage\n\n### Normal Mode:\n* First Open file with VIM command, with get into Normal Mode\n* `h``j``k``l` : `←``↓``↑``→`\n* `dd` : delete current line\n* `x` : delete current character\n* `yy` : copy current line\n* `p` : paste. It will paste last copied, cut or deleted texts.\n* `^` : go to first non-blank character in current line, `$` to the end\n* `u` : undo, `<C-r>` : redo. `g-`/`g+` : go to older/newer text state\n* `.` : repeat last action\n* `N<command>` : repeat `Command` `N` times. For example, `2dd` : delete two line\n* `gg`: go to first line, `G` : Go to last line, `NG` : Go to line `N` (`N` stands for a number, for example, `10G`)\n* `w` : move cursor to the beginning of next word, `e` : move cursor to the end of next word\n* `%` : match the closest `{`, `[`, `(`\n* `*` : search forward for the occurrence of the word nearest to the cursor., `#` : search backward.\n\n### Insert Mode:\n* `i` : Get into Insert Mode, `Esc` back to Normal Mode\n* `I` : Start to insert text at the beginning of the current line\n* `o` : Begin a new line below the cursor and insert text\n* `O` : Begin a new line above the cursor and insert text\n\n### Command Mode:\n* Execute command (`:`), search patterns\n(`/` and `?`), and filter commands (`!`)\n* `:wq` : Save then quit, `:q`: Quit, `:w`: Save, `:q!`: Quit current file without saving, `:qa!` Quit all files without saving\n* `:e <path/to/file>` : Open another file\n* `:saveas <path/to/file>` : Save as another file\n\n## Advance Usage\n\n### Insert Mode:\n* `gi` : goto Insert mode where you left it last time\n\n### Normal Mode:\n* `<C-y>`, `<C-e>` : check the text above or below the cursor\n* `<C-w>w` : Switch windows between last one and current one\n* `<C-w><dir>` : `<dir>` can be `h``j``k``l`, switch windows to left, down, up or right.\n* to move at current line\n    * `0` → head\n    * `^` → non-blank head\n    * `$` → end\n    * `g_` → non-blank end\n    * `fa` → to next character `a`\n    * `t,` → to the character right before the next `,`\n    * `3fa` → to the third `a`\n    * `F`, `T` → same as `f`, `t` with reverse direction\n\n        ![line_moves](/public/img/media/line_moves-1.jpg)\n\n* manipulate a text block `<C-v>`, for example:\n\n    * add prefixes to multi lines\n\n        ![rectangular-blocks](/public/img/media/rectangular-blocks.gif)\n`\n        * `^` → to the head of the line\n        * `<C-v>` → Start to select a block of text\n        * `<C-d>` → to move downward, you also can use `h``j``k``l` or `%` instead\n        * `I--`  → Insert `--`\n        * `[ESC]` → to make effects to every line\n\n    * append text to multi lines\n\n        ![append-to-many-lines](/public/img/media/append-to-many-lines.gif)\n\n        * `<C-v>` → Choose lines (You can also use `j`, `<C-d>`, `/pattern`, `%`, etc.\n        * `$` → move cursor to the end\n        * `A` → start to input text, type press `ESC`\n\n    * indentation\n\n        ![autoindent](/public/img/media/autoindent.gif)\n\n        * `J` → convert multi lines to single line\n        * `<` `>` → indent to left or right\n        * `=` → auto indent\n\n### Visual Mode:\n* Block Choosing `<action>a<object>` or `<action>i<object>`\n    * `<action>` can be any actions, like `d`(delete), `y`(copy), `v`(text selecting).\n    * `<object>` can be `w`(a word), `W`(a phrase), `s`(a sentance), `p`(a paragraph), or a special symbol like `\"`, `'`, `)`, `}`, `]`.\n    * For example:\n\n       ![textobjects](/public/img/media/textobjects.png)\n\n        * `vi\"` → foo\n        * `va\"` → \"foo\"\n        * `vi)` → \"foo\"\n        * `va)` → (\"foo\")\n        * `v2i)` → map (+) (\"foo\")\n        * `v2a)` → (map (+) (\"foo\"))\n\n### Command Mode:\n* `:split` : split window horizontally, `:vsplit` : split window vertically.\n* `q` : Record typed characters into register, then repeat them.\n    * `qa` : record every action into register `a`\n    * `@a` : replay it\n    * `@@` : to replay the latest register\n    * For example:\n\n        ![macros](/public/img/media/macros.gif)\n\n        * In this text file, only have \"1\" in it, start to input: `qaYp<C-a>q`\n\n            * `qa` → start to record\n            * `yyp` → copy current line to next line\n            * `<C-a>` → add 1\n            * `q` → stop recording\n            * `@a` → write down 2 under 1\n            * `@@` → write down 3 under 2\n            * `100@@` → repeat it 100 times.\n* `:[range]s/<pattern>/<replace>/{flags}` : replace text\n    * TODO\n    * `[range]`\n\n## Plugins\n\n### Explanations of Important Keywords\n* `<Leader>`: default is `\\`, you can change it by using `let mapleader = ','` in `.vimrc` file.\n* `<CR>`: equals `<Return>`\t\\& `<Enter>`\n* `<S-...>`\t: shift-key\n* `<C-...>`: control-key\n* `<M-...>` & `<A-...>`: alt-key\n* `<D-...>`: command-key (Mac only)\n* `g:`: means globally. Example:\n    * `let g:last_active_tab = 1` toggle switch between current tab and the last one globally.\n* `remap`: Allows for mappings to work recursively.\n* `noremap`: Only a single entry. Can NOT be remapped.\n* `n` & `v` & `s` & `i`: prefixes, `n` stands for Normal mode, `v` stands for Visual mode, `s` stands for Select Mode, `i` stands for Insert Mode. Example:\n    * `nnoremap <C-t> :tabnew<CR>`: remap `Ctrl + t` to create a new tab\n    * `inoremap <C-t> <Esc>:tabnew<CR>`: same as last one, with an escape action additionally.\n* `<Plug>`: in `.vimrc` file, it has two meanings. First, it's visible out of the plugin scripts. And the second, use structure `<Plug> scriptname mapname` to avoid confliction with other plugins. For example: `<Plug>TypecorrAdd`, `Typecorr` is the script name, and `Add` is the function name.\n* `<SID>`: is the script ID and not visible outside. Compare with `<Plug>`, it's more like `private` function to other scrips. So can't use it out of the script. Example:\n\n  ```vim\n  \" ,en ,ep to jump between errors\n  function! <SID>LocationPrevious()\n    try\n        lprev\n    catch /^Vim\\%((\\a\\+)\\)\\=:E553/\n        llast\n    endtry\n  endfunction\n\n  function! <SID>LocationNext()\n    try\n        lnext\n    catch /^Vim\\%((\\a\\+)\\)\\=:E553/\n        lfirst\n    endtry\n  endfunction\n\n  nnoremap <silent> <Plug>LocationPrevious :<C-u>exe 'call <SID>LocationPrevious()'<CR>\n  nnoremap <silent> <Plug>LocationNext :<C-u>exe 'call <SID>LocationNext()'<CR>\n  nmap <silent> <Leader>ep <Plug>LocationPrevious\n  nmap <silent> <Leader>en <Plug>LocationNext\n  ```\n\n* `<silence>`:  to make a key mapping can`t be echoed on the command line\n* `<expr>` take the argument as expression. For example: `inoremap <expr> <C-L> ListItem()`, ListItem is a function which is mapped with `Ctrl + L`.\n\n### unblevable/quick-scope\n\n* Github Repo: [unblevable/quick-scope](https://github.com/unblevable/quick-scope)\n* Useage: highlights which characters to target for `f`, `F` and family.\n* Key Mapping:\n\n      let g:qs_highlight_on_keys = ['f', 'F', 't', 'T'] //\n\n### ntpeters/vim-better-whitespace\n\n* Github Repo: [ntpeters/vim-better-whitespace](ntpeters/vim-better-whitespace)\n* Useage: clean extra whitespace.\n* Key Mapping:\n\n      nnoremap <silent> <Leader><Space> :StripWhitespace<CR>\n      autocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre <buffer> StripWhitespace\n      let g:better_whitespace_filetypes_blacklist=['diff', 'gitcommit', 'unite', 'qf', 'help']\n\n### Vim-CtrlSpace\n* Github Repo: [vim-ctrlspace/vim-ctrlspace](https://github.com/vim-ctrlspace/vim-ctrlspace)\n* Useage:\n    * bookmarks for your favorite projects\n    * workspaces (sessions)\n    * tabs / buffers / files management\n    * fast fuzzy searching powered by Go\n* Shortkeys:\n    * `Ctrl + Space` : open ctrl space command line\n    * `b` : bookmark list\n    * `w` : workspace list in current bookmark\n    * `l` : tab list in current workspace\n    * `o` : file list in current workspace\n    * `h` : buffer list in current workspace, this is default list when you hit ctrl + space\n    * `/` : Into Search Mode, type it again will close search mode. Aka,  `B`, `W`, `L`, `O`, `H` with uppercase will open the same list with Search Mode\n    * `i` : switch directory (when you on the buffer list)\n    * `a` : all the files are opend in current workspace\n    * `s` : save current workspace/bookmark, then `<CR>` to confirm\n    * `d` : delete a file from current buffer or file list\n    * `j`,`k` : switch items, then `<CR>` to confirm\n    * `m` : rename bookmark or workspace(when you on the workspace list or bookmark list)\n* Key Mapping:\n\n  ```vim  \n  if has(\"gui_running\")\n  \" Settings for MacVim and Inconsolata font\n    let g:CtrlSpaceSymbols = { \"File\": \"◯\", \"CTab\": \"▣\", \"Tabs\": \"▢\" }\n  endif\n  if executable(\"ag\")\n    let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g \"\"'\n  endif\n  let g:CtrlSpaceSearchTiming = 500\n  hi link CtrlSpaceNormal   PMenu\n  hi link CtrlSpaceSelected PMenuSel\n  hi link CtrlSpaceSearch   Search\n  hi link CtrlSpaceStatus   StatusLine\n  nnoremap <silent><C-p> :CtrlSpace O<CR>\n  let g:CtrlSpaceLoadLastWorkspaceOnStart = 1\n  let g:CtrlSpaceSaveWorkspaceOnSwitch = 1\n  let g:CtrlSpaceSaveWorkspaceOnExit = 1\n  ```\n\n### scrooloose/nerdtree & jistr/vim-nerdtree-tabs\n* TODO\n\n* Github Repo: [scrooloose/nerdtree](https://github.com/scrooloose/nerdtree) & [jistr/vim-nerdtree-tabs](https://github.com/jistr/vim-nerdtree-tabs)\n* Useage: to explore filesystem and to open files and directories.\n* Key Mapping:\n\n  ```vim\n  \" nerdtree\n  map <C-n> :NERDTreeToggle<CR>\n  let NERDTreeHighlightCursorline=1\n  let NERDTreeIgnore=[ '\\.pyc$', '\\.pyo$', '\\.obj$', '\\.o$', '\\.so$', '\\.egg$', '^\\.git$', '^\\.svn$', '^\\.hg$' ]\n  \"close vim if the only window left open is a NERDTree\n  autocmd bufenter * if (winnr(\"$\") == 1 && exists(\"b:NERDTreeType\") && b:NERDTreeType == \"primary\") | q | end\n  let g:NERDTreeMapOpenSplit = 's'\n  let g:NERDTreeMapOpenVSplit = 'v'\n  let g:NERDTreeWinSize=26\n\n  \" nerdtreetabs\n  map <C-n> <plug>NERDTreeTabsToggle<CR>\n  let g:nerdtree_tabs_synchronize_view=0\n  let g:nerdtree_tabs_synchronize_focus=0\n  let g:nerdtree_tabs_open_on_console_startup=0\n  let g:nerdtree_tabs_open_on_gui_startup=0\n  ```\n\n### syntastic\n\n* Github Repo: [vim-syntastic/syntastic](https://github.com/vim-syntastic/syntastic#introduction)\n* Useage: a syntax checking plugin\n* Key Mapping:\n\n  ```vim\n  execute pathogen#infect()\n\n  let g:syntastic_error_symbol='>>'\n  let g:syntastic_warning_symbol='>'\n  let g:syntastic_check_on_open=1\n  let g:syntastic_check_on_wq=0\n  let g:syntastic_enable_highlighting=1\n\n  \" checkers\n  let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']\n  let g:syntastic_python_checkers=['pyflakes', 'pep8'] \" 使用pyflakes,速度比pylint快\n  let g:syntastic_python_pep8_args='--ignore=E501,E225,E124,E712'\n  let g:syntastic_javascript_checkers = ['jsl', 'jshint']\n  \" let g:syntastic_markdown_checkers = ['proselint']\n  let g:syntastic_html_checkers=['tidy', 'jshint']\n\n  set statusline+=%#warningmsg#\n  set statusline+=%{SyntasticStatuslineFlag()}\n  set statusline+=%*\n\n  \" to see error location list\n  let g:syntastic_always_populate_loc_list = 1\n  let g:syntastic_enable_signs = 1\n  let g:syntastic_auto_loc_list = 0\n  let g:syntastic_auto_jump = 0\n\n  highlight SyntasticErrorSign guifg=white guibg=black\n  ```\n\n### YouCompleteMe\n\n* Github Repo: [Valloric/YouCompleteMe](https://github.com/Valloric/YouCompleteMe)\n* Useage: code completion\n* Key Mapping:\n\n  ```vim\n  let g:ycm_key_list_select_completion=['<C-j>']\n  let g:ycm_key_list_previous_completion=['<C-k>']\n  let g:ycm_complete_in_comments = 1\n  let g:ycm_complete_in_strings = 1\n  let g:ycm_use_ultisnips_completer = 1\n  let g:ycm_collect_identifiers_from_comments_and_strings = 1\n  let g:ycm_collect_identifiers_from_tags_files = 1\n  let g:ycm_seed_identifiers_with_syntax=1\n  let g:ycm_goto_buffer_command = 'horizontal-split'\n\n  nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>\n  nnoremap <leader>gd :YcmCompleter GoToDeclaration<CR>\n\n  if !empty(glob(\"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"))\n      let g:ycm_global_ycm_extra_conf = \"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"\n  endif\n  ```\n\n### vim-easymotion\n\n* Github Repo: [easymotion/vim-easymotion](https://github.com/easymotion/vim-easymotion)\n* Usage: Provides a much simpler way to use some motions in vim.\n* Keys Mapping:\n\n  ```vim\n  let g:EasyMotion_smartcase = 1\n\n  \" <Leader>f{char} to move to {char}\n  map  <Leader><Leader>f <Plug>(easymotion-bd-f)\n  nmap <Leader><Leader>f <Plug>(easymotion-overwin-f)\n\n  \" s{char}{char} to move to {char}{char}\n  nmap s <Plug>(easymotion-overwin-f2)\n\n  \" Move to line\n  map  <Leader><Leader>l <Plug>(easymotion-bd-jk)\n  nmap <Leader><Leader>l <Plug>(easymotion-overwin-line)\n  ```\n\n### easyalign\n\n* Github Repo: [junegunn/vim-easy-align](https://github.com/junegunn/vim-easy-align)\n* Usage: alignment\n* Keys Mapping:\n\n  ```vim\n  vmap ga <Plug>(EasyAlign)\n  nmap ga <Plug>(EasyAlign)\n  let g:easy_align_ignore_groups = ['Comment', 'String']\n  let g:easy_align_delimiters = {\n     \\ '>': { 'pattern': '>>\\|=>\\|>' },\n     \\ '/': {\n     \\     'pattern':         '//\\+\\|/\\*\\|\\*/',\n     \\     'delimiter_align': 'l',\n     \\     'ignore_groups':   ['!Comment'] },\n     \\ ']': {\n     \\     'pattern':       '[[\\]]',\n     \\     'left_margin':   0,\n     \\     'right_margin':  0,\n     \\     'stick_to_left': 0\n     \\   },\n     \\ ')': {\n     \\     'pattern':       '[()]',\n     \\     'left_margin':   0,\n     \\     'right_margin':  0,\n     \\     'stick_to_left': 0\n     \\   },\n     \\ 'd': {\n     \\     'pattern':      ' \\(\\S\\+\\s*[;=]\\)\\@=',\n     \\     'left_margin':  0,\n     \\     'right_margin': 0\n     \\   }\n     \\ }\n  ```\n\n### NerdTree\n\n* Github Repo: [scrooloose/nerdtree](https://github.com/scrooloose/nerdtree)\n* Usage: to explore your filesystem and to open files and directories.\n* Keys Mapping:\n\n  ```vim\n  map <leader>n :NERDTreeToggle<CR>\n  let NERDTreeShowBookmarks=1\n  let NERDTreeHighlightCursorline=1\n  let NERDTreeIgnore=[ '\\.pyc$', '\\.pyo$', '\\.obj$', '\\.o$', '\\.so$', '\\.egg$', '^\\.git$', '^\\.svn$', '^\\.hg$' ]\n  \"close vim if the only window left open is a NERDTree\n  autocmd bufenter * if (winnr(\"$\") == 1 && exists(\"b:NERDTreeType\") && b:NERDTreeType == \"primary\") | q | end\n  let g:NERDTreeMapOpenSplit = 's'\n  let g:NERDTreeMapOpenVSplit = 'v'\n  let g:NERDTreeWinSize=26\n  ```\n\n### NERDCommenter\n\n* Github Repo: [scrooloose/nerdcommenter](https://github.com/scrooloose/nerdcommenter)\n* Usage: to wrangle your code comments.\n* Shortkeys:\n  * `[count]<leader>cc` : Comment out the current line or text selected in visual mode.\n  * `[count]<leader>c<space>` : Toggles the comment state of the selected line(s). If the topmost selected line is commented, all selected lines are uncommented and vice versa.\n  * `[count]<leader>cs` : Comments out the selected lines with a pretty block formatted layout.\n  * `[count]<leader>ci` : Toggles the comment state of the selected line(s) individually.\n\n* Keys Mapping:\n\n  ```vim    \n  \" Add spaces after comment delimiters by default\n  let g:NERDSpaceDelims = 1\n  \" Use compact syntax for prettified multi-line comments\n  let g:NERDCompactSexyComs = 1\n  \" Align line-wise comment delimiters flush left instead of following code indentation\n  let g:NERDDefaultAlign = 'left'\n  \" Allow commenting and inverting empty lines (useful when commenting a region)\n  let g:NERDCommentEmptyLines = 1\n  ```\n\n### Airline\n\n* Github Repo: [vim-airline/vim-airline](https://github.com/vim-airline/vim-airline)\n* Usage: rich statusbar.\n\n* Keys Mapping:\n\n  ```vim\n  if !exists('g:airline_symbols')\n      let g:airline_symbols = {}\n  endif\n\n  let g:airline_mode_map = {\n      \\ '__' : '-',\n      \\ 'n'  : 'N',\n      \\ 'i'  : 'I',\n      \\ 'R'  : 'R',\n      \\ 'c'  : 'C',\n      \\ 'v'  : 'V',\n      \\ 'V'  : 'V',\n      \\ '\u0016' : 'V',\n      \\ 's'  : 'S',\n      \\ 'S'  : 'S',\n      \\ '\u0013' : 'S',\n      \\ }\n\n  let g:airline_left_sep = '❯'\n  let g:airline_right_sep = '❮'\n  let g:airline_symbols.linenr = '¶'\n  let g:airline_symbols.branch = '⎇'\n  ```\n\n<!---\n### a\n* Github Repo: [b](c)\n* Useage: d\n* Key Mapping:\n\n        e\n-->\n\n[//]: # (hidden text)\n\n\n","source":"_posts/2017-01-04-vim-configuration.md","raw":"---\nlayout: post\ntitle: VIM的基本命令使用以及插件配置\ncategory: 编程学习\ntags: [Mac, VIM]\ndate: 2017-01-04\ndescription: VIM的基本命令使用以及插件配置\nkeywords: VIM, Plugin, CtrlSpace, 基本命令, 插件配置\n---\n\n* 好不容易用英语写完了， 懒得翻译了\n\n## Basic Usage\n\n### Normal Mode:\n* First Open file with VIM command, with get into Normal Mode\n* `h``j``k``l` : `←``↓``↑``→`\n* `dd` : delete current line\n* `x` : delete current character\n* `yy` : copy current line\n* `p` : paste. It will paste last copied, cut or deleted texts.\n* `^` : go to first non-blank character in current line, `$` to the end\n* `u` : undo, `<C-r>` : redo. `g-`/`g+` : go to older/newer text state\n* `.` : repeat last action\n* `N<command>` : repeat `Command` `N` times. For example, `2dd` : delete two line\n* `gg`: go to first line, `G` : Go to last line, `NG` : Go to line `N` (`N` stands for a number, for example, `10G`)\n* `w` : move cursor to the beginning of next word, `e` : move cursor to the end of next word\n* `%` : match the closest `{`, `[`, `(`\n* `*` : search forward for the occurrence of the word nearest to the cursor., `#` : search backward.\n\n### Insert Mode:\n* `i` : Get into Insert Mode, `Esc` back to Normal Mode\n* `I` : Start to insert text at the beginning of the current line\n* `o` : Begin a new line below the cursor and insert text\n* `O` : Begin a new line above the cursor and insert text\n\n### Command Mode:\n* Execute command (`:`), search patterns\n(`/` and `?`), and filter commands (`!`)\n* `:wq` : Save then quit, `:q`: Quit, `:w`: Save, `:q!`: Quit current file without saving, `:qa!` Quit all files without saving\n* `:e <path/to/file>` : Open another file\n* `:saveas <path/to/file>` : Save as another file\n\n## Advance Usage\n\n### Insert Mode:\n* `gi` : goto Insert mode where you left it last time\n\n### Normal Mode:\n* `<C-y>`, `<C-e>` : check the text above or below the cursor\n* `<C-w>w` : Switch windows between last one and current one\n* `<C-w><dir>` : `<dir>` can be `h``j``k``l`, switch windows to left, down, up or right.\n* to move at current line\n    * `0` → head\n    * `^` → non-blank head\n    * `$` → end\n    * `g_` → non-blank end\n    * `fa` → to next character `a`\n    * `t,` → to the character right before the next `,`\n    * `3fa` → to the third `a`\n    * `F`, `T` → same as `f`, `t` with reverse direction\n\n        ![line_moves](/public/img/media/line_moves-1.jpg)\n\n* manipulate a text block `<C-v>`, for example:\n\n    * add prefixes to multi lines\n\n        ![rectangular-blocks](/public/img/media/rectangular-blocks.gif)\n`\n        * `^` → to the head of the line\n        * `<C-v>` → Start to select a block of text\n        * `<C-d>` → to move downward, you also can use `h``j``k``l` or `%` instead\n        * `I--`  → Insert `--`\n        * `[ESC]` → to make effects to every line\n\n    * append text to multi lines\n\n        ![append-to-many-lines](/public/img/media/append-to-many-lines.gif)\n\n        * `<C-v>` → Choose lines (You can also use `j`, `<C-d>`, `/pattern`, `%`, etc.\n        * `$` → move cursor to the end\n        * `A` → start to input text, type press `ESC`\n\n    * indentation\n\n        ![autoindent](/public/img/media/autoindent.gif)\n\n        * `J` → convert multi lines to single line\n        * `<` `>` → indent to left or right\n        * `=` → auto indent\n\n### Visual Mode:\n* Block Choosing `<action>a<object>` or `<action>i<object>`\n    * `<action>` can be any actions, like `d`(delete), `y`(copy), `v`(text selecting).\n    * `<object>` can be `w`(a word), `W`(a phrase), `s`(a sentance), `p`(a paragraph), or a special symbol like `\"`, `'`, `)`, `}`, `]`.\n    * For example:\n\n       ![textobjects](/public/img/media/textobjects.png)\n\n        * `vi\"` → foo\n        * `va\"` → \"foo\"\n        * `vi)` → \"foo\"\n        * `va)` → (\"foo\")\n        * `v2i)` → map (+) (\"foo\")\n        * `v2a)` → (map (+) (\"foo\"))\n\n### Command Mode:\n* `:split` : split window horizontally, `:vsplit` : split window vertically.\n* `q` : Record typed characters into register, then repeat them.\n    * `qa` : record every action into register `a`\n    * `@a` : replay it\n    * `@@` : to replay the latest register\n    * For example:\n\n        ![macros](/public/img/media/macros.gif)\n\n        * In this text file, only have \"1\" in it, start to input: `qaYp<C-a>q`\n\n            * `qa` → start to record\n            * `yyp` → copy current line to next line\n            * `<C-a>` → add 1\n            * `q` → stop recording\n            * `@a` → write down 2 under 1\n            * `@@` → write down 3 under 2\n            * `100@@` → repeat it 100 times.\n* `:[range]s/<pattern>/<replace>/{flags}` : replace text\n    * TODO\n    * `[range]`\n\n## Plugins\n\n### Explanations of Important Keywords\n* `<Leader>`: default is `\\`, you can change it by using `let mapleader = ','` in `.vimrc` file.\n* `<CR>`: equals `<Return>`\t\\& `<Enter>`\n* `<S-...>`\t: shift-key\n* `<C-...>`: control-key\n* `<M-...>` & `<A-...>`: alt-key\n* `<D-...>`: command-key (Mac only)\n* `g:`: means globally. Example:\n    * `let g:last_active_tab = 1` toggle switch between current tab and the last one globally.\n* `remap`: Allows for mappings to work recursively.\n* `noremap`: Only a single entry. Can NOT be remapped.\n* `n` & `v` & `s` & `i`: prefixes, `n` stands for Normal mode, `v` stands for Visual mode, `s` stands for Select Mode, `i` stands for Insert Mode. Example:\n    * `nnoremap <C-t> :tabnew<CR>`: remap `Ctrl + t` to create a new tab\n    * `inoremap <C-t> <Esc>:tabnew<CR>`: same as last one, with an escape action additionally.\n* `<Plug>`: in `.vimrc` file, it has two meanings. First, it's visible out of the plugin scripts. And the second, use structure `<Plug> scriptname mapname` to avoid confliction with other plugins. For example: `<Plug>TypecorrAdd`, `Typecorr` is the script name, and `Add` is the function name.\n* `<SID>`: is the script ID and not visible outside. Compare with `<Plug>`, it's more like `private` function to other scrips. So can't use it out of the script. Example:\n\n  ```vim\n  \" ,en ,ep to jump between errors\n  function! <SID>LocationPrevious()\n    try\n        lprev\n    catch /^Vim\\%((\\a\\+)\\)\\=:E553/\n        llast\n    endtry\n  endfunction\n\n  function! <SID>LocationNext()\n    try\n        lnext\n    catch /^Vim\\%((\\a\\+)\\)\\=:E553/\n        lfirst\n    endtry\n  endfunction\n\n  nnoremap <silent> <Plug>LocationPrevious :<C-u>exe 'call <SID>LocationPrevious()'<CR>\n  nnoremap <silent> <Plug>LocationNext :<C-u>exe 'call <SID>LocationNext()'<CR>\n  nmap <silent> <Leader>ep <Plug>LocationPrevious\n  nmap <silent> <Leader>en <Plug>LocationNext\n  ```\n\n* `<silence>`:  to make a key mapping can`t be echoed on the command line\n* `<expr>` take the argument as expression. For example: `inoremap <expr> <C-L> ListItem()`, ListItem is a function which is mapped with `Ctrl + L`.\n\n### unblevable/quick-scope\n\n* Github Repo: [unblevable/quick-scope](https://github.com/unblevable/quick-scope)\n* Useage: highlights which characters to target for `f`, `F` and family.\n* Key Mapping:\n\n      let g:qs_highlight_on_keys = ['f', 'F', 't', 'T'] //\n\n### ntpeters/vim-better-whitespace\n\n* Github Repo: [ntpeters/vim-better-whitespace](ntpeters/vim-better-whitespace)\n* Useage: clean extra whitespace.\n* Key Mapping:\n\n      nnoremap <silent> <Leader><Space> :StripWhitespace<CR>\n      autocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre <buffer> StripWhitespace\n      let g:better_whitespace_filetypes_blacklist=['diff', 'gitcommit', 'unite', 'qf', 'help']\n\n### Vim-CtrlSpace\n* Github Repo: [vim-ctrlspace/vim-ctrlspace](https://github.com/vim-ctrlspace/vim-ctrlspace)\n* Useage:\n    * bookmarks for your favorite projects\n    * workspaces (sessions)\n    * tabs / buffers / files management\n    * fast fuzzy searching powered by Go\n* Shortkeys:\n    * `Ctrl + Space` : open ctrl space command line\n    * `b` : bookmark list\n    * `w` : workspace list in current bookmark\n    * `l` : tab list in current workspace\n    * `o` : file list in current workspace\n    * `h` : buffer list in current workspace, this is default list when you hit ctrl + space\n    * `/` : Into Search Mode, type it again will close search mode. Aka,  `B`, `W`, `L`, `O`, `H` with uppercase will open the same list with Search Mode\n    * `i` : switch directory (when you on the buffer list)\n    * `a` : all the files are opend in current workspace\n    * `s` : save current workspace/bookmark, then `<CR>` to confirm\n    * `d` : delete a file from current buffer or file list\n    * `j`,`k` : switch items, then `<CR>` to confirm\n    * `m` : rename bookmark or workspace(when you on the workspace list or bookmark list)\n* Key Mapping:\n\n  ```vim  \n  if has(\"gui_running\")\n  \" Settings for MacVim and Inconsolata font\n    let g:CtrlSpaceSymbols = { \"File\": \"◯\", \"CTab\": \"▣\", \"Tabs\": \"▢\" }\n  endif\n  if executable(\"ag\")\n    let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g \"\"'\n  endif\n  let g:CtrlSpaceSearchTiming = 500\n  hi link CtrlSpaceNormal   PMenu\n  hi link CtrlSpaceSelected PMenuSel\n  hi link CtrlSpaceSearch   Search\n  hi link CtrlSpaceStatus   StatusLine\n  nnoremap <silent><C-p> :CtrlSpace O<CR>\n  let g:CtrlSpaceLoadLastWorkspaceOnStart = 1\n  let g:CtrlSpaceSaveWorkspaceOnSwitch = 1\n  let g:CtrlSpaceSaveWorkspaceOnExit = 1\n  ```\n\n### scrooloose/nerdtree & jistr/vim-nerdtree-tabs\n* TODO\n\n* Github Repo: [scrooloose/nerdtree](https://github.com/scrooloose/nerdtree) & [jistr/vim-nerdtree-tabs](https://github.com/jistr/vim-nerdtree-tabs)\n* Useage: to explore filesystem and to open files and directories.\n* Key Mapping:\n\n  ```vim\n  \" nerdtree\n  map <C-n> :NERDTreeToggle<CR>\n  let NERDTreeHighlightCursorline=1\n  let NERDTreeIgnore=[ '\\.pyc$', '\\.pyo$', '\\.obj$', '\\.o$', '\\.so$', '\\.egg$', '^\\.git$', '^\\.svn$', '^\\.hg$' ]\n  \"close vim if the only window left open is a NERDTree\n  autocmd bufenter * if (winnr(\"$\") == 1 && exists(\"b:NERDTreeType\") && b:NERDTreeType == \"primary\") | q | end\n  let g:NERDTreeMapOpenSplit = 's'\n  let g:NERDTreeMapOpenVSplit = 'v'\n  let g:NERDTreeWinSize=26\n\n  \" nerdtreetabs\n  map <C-n> <plug>NERDTreeTabsToggle<CR>\n  let g:nerdtree_tabs_synchronize_view=0\n  let g:nerdtree_tabs_synchronize_focus=0\n  let g:nerdtree_tabs_open_on_console_startup=0\n  let g:nerdtree_tabs_open_on_gui_startup=0\n  ```\n\n### syntastic\n\n* Github Repo: [vim-syntastic/syntastic](https://github.com/vim-syntastic/syntastic#introduction)\n* Useage: a syntax checking plugin\n* Key Mapping:\n\n  ```vim\n  execute pathogen#infect()\n\n  let g:syntastic_error_symbol='>>'\n  let g:syntastic_warning_symbol='>'\n  let g:syntastic_check_on_open=1\n  let g:syntastic_check_on_wq=0\n  let g:syntastic_enable_highlighting=1\n\n  \" checkers\n  let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']\n  let g:syntastic_python_checkers=['pyflakes', 'pep8'] \" 使用pyflakes,速度比pylint快\n  let g:syntastic_python_pep8_args='--ignore=E501,E225,E124,E712'\n  let g:syntastic_javascript_checkers = ['jsl', 'jshint']\n  \" let g:syntastic_markdown_checkers = ['proselint']\n  let g:syntastic_html_checkers=['tidy', 'jshint']\n\n  set statusline+=%#warningmsg#\n  set statusline+=%{SyntasticStatuslineFlag()}\n  set statusline+=%*\n\n  \" to see error location list\n  let g:syntastic_always_populate_loc_list = 1\n  let g:syntastic_enable_signs = 1\n  let g:syntastic_auto_loc_list = 0\n  let g:syntastic_auto_jump = 0\n\n  highlight SyntasticErrorSign guifg=white guibg=black\n  ```\n\n### YouCompleteMe\n\n* Github Repo: [Valloric/YouCompleteMe](https://github.com/Valloric/YouCompleteMe)\n* Useage: code completion\n* Key Mapping:\n\n  ```vim\n  let g:ycm_key_list_select_completion=['<C-j>']\n  let g:ycm_key_list_previous_completion=['<C-k>']\n  let g:ycm_complete_in_comments = 1\n  let g:ycm_complete_in_strings = 1\n  let g:ycm_use_ultisnips_completer = 1\n  let g:ycm_collect_identifiers_from_comments_and_strings = 1\n  let g:ycm_collect_identifiers_from_tags_files = 1\n  let g:ycm_seed_identifiers_with_syntax=1\n  let g:ycm_goto_buffer_command = 'horizontal-split'\n\n  nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>\n  nnoremap <leader>gd :YcmCompleter GoToDeclaration<CR>\n\n  if !empty(glob(\"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"))\n      let g:ycm_global_ycm_extra_conf = \"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"\n  endif\n  ```\n\n### vim-easymotion\n\n* Github Repo: [easymotion/vim-easymotion](https://github.com/easymotion/vim-easymotion)\n* Usage: Provides a much simpler way to use some motions in vim.\n* Keys Mapping:\n\n  ```vim\n  let g:EasyMotion_smartcase = 1\n\n  \" <Leader>f{char} to move to {char}\n  map  <Leader><Leader>f <Plug>(easymotion-bd-f)\n  nmap <Leader><Leader>f <Plug>(easymotion-overwin-f)\n\n  \" s{char}{char} to move to {char}{char}\n  nmap s <Plug>(easymotion-overwin-f2)\n\n  \" Move to line\n  map  <Leader><Leader>l <Plug>(easymotion-bd-jk)\n  nmap <Leader><Leader>l <Plug>(easymotion-overwin-line)\n  ```\n\n### easyalign\n\n* Github Repo: [junegunn/vim-easy-align](https://github.com/junegunn/vim-easy-align)\n* Usage: alignment\n* Keys Mapping:\n\n  ```vim\n  vmap ga <Plug>(EasyAlign)\n  nmap ga <Plug>(EasyAlign)\n  let g:easy_align_ignore_groups = ['Comment', 'String']\n  let g:easy_align_delimiters = {\n     \\ '>': { 'pattern': '>>\\|=>\\|>' },\n     \\ '/': {\n     \\     'pattern':         '//\\+\\|/\\*\\|\\*/',\n     \\     'delimiter_align': 'l',\n     \\     'ignore_groups':   ['!Comment'] },\n     \\ ']': {\n     \\     'pattern':       '[[\\]]',\n     \\     'left_margin':   0,\n     \\     'right_margin':  0,\n     \\     'stick_to_left': 0\n     \\   },\n     \\ ')': {\n     \\     'pattern':       '[()]',\n     \\     'left_margin':   0,\n     \\     'right_margin':  0,\n     \\     'stick_to_left': 0\n     \\   },\n     \\ 'd': {\n     \\     'pattern':      ' \\(\\S\\+\\s*[;=]\\)\\@=',\n     \\     'left_margin':  0,\n     \\     'right_margin': 0\n     \\   }\n     \\ }\n  ```\n\n### NerdTree\n\n* Github Repo: [scrooloose/nerdtree](https://github.com/scrooloose/nerdtree)\n* Usage: to explore your filesystem and to open files and directories.\n* Keys Mapping:\n\n  ```vim\n  map <leader>n :NERDTreeToggle<CR>\n  let NERDTreeShowBookmarks=1\n  let NERDTreeHighlightCursorline=1\n  let NERDTreeIgnore=[ '\\.pyc$', '\\.pyo$', '\\.obj$', '\\.o$', '\\.so$', '\\.egg$', '^\\.git$', '^\\.svn$', '^\\.hg$' ]\n  \"close vim if the only window left open is a NERDTree\n  autocmd bufenter * if (winnr(\"$\") == 1 && exists(\"b:NERDTreeType\") && b:NERDTreeType == \"primary\") | q | end\n  let g:NERDTreeMapOpenSplit = 's'\n  let g:NERDTreeMapOpenVSplit = 'v'\n  let g:NERDTreeWinSize=26\n  ```\n\n### NERDCommenter\n\n* Github Repo: [scrooloose/nerdcommenter](https://github.com/scrooloose/nerdcommenter)\n* Usage: to wrangle your code comments.\n* Shortkeys:\n  * `[count]<leader>cc` : Comment out the current line or text selected in visual mode.\n  * `[count]<leader>c<space>` : Toggles the comment state of the selected line(s). If the topmost selected line is commented, all selected lines are uncommented and vice versa.\n  * `[count]<leader>cs` : Comments out the selected lines with a pretty block formatted layout.\n  * `[count]<leader>ci` : Toggles the comment state of the selected line(s) individually.\n\n* Keys Mapping:\n\n  ```vim    \n  \" Add spaces after comment delimiters by default\n  let g:NERDSpaceDelims = 1\n  \" Use compact syntax for prettified multi-line comments\n  let g:NERDCompactSexyComs = 1\n  \" Align line-wise comment delimiters flush left instead of following code indentation\n  let g:NERDDefaultAlign = 'left'\n  \" Allow commenting and inverting empty lines (useful when commenting a region)\n  let g:NERDCommentEmptyLines = 1\n  ```\n\n### Airline\n\n* Github Repo: [vim-airline/vim-airline](https://github.com/vim-airline/vim-airline)\n* Usage: rich statusbar.\n\n* Keys Mapping:\n\n  ```vim\n  if !exists('g:airline_symbols')\n      let g:airline_symbols = {}\n  endif\n\n  let g:airline_mode_map = {\n      \\ '__' : '-',\n      \\ 'n'  : 'N',\n      \\ 'i'  : 'I',\n      \\ 'R'  : 'R',\n      \\ 'c'  : 'C',\n      \\ 'v'  : 'V',\n      \\ 'V'  : 'V',\n      \\ '\u0016' : 'V',\n      \\ 's'  : 'S',\n      \\ 'S'  : 'S',\n      \\ '\u0013' : 'S',\n      \\ }\n\n  let g:airline_left_sep = '❯'\n  let g:airline_right_sep = '❮'\n  let g:airline_symbols.linenr = '¶'\n  let g:airline_symbols.branch = '⎇'\n  ```\n\n<!---\n### a\n* Github Repo: [b](c)\n* Useage: d\n* Key Mapping:\n\n        e\n-->\n\n[//]: # (hidden text)\n\n\n","slug":"2017-01-04-vim-configuration","published":1,"updated":"2020-04-19T02:56:01.555Z","_id":"ck96ffjb2002armp9fnemd871","comments":1,"photos":[],"link":"","content":"<ul>\n<li>好不容易用英语写完了， 懒得翻译了</li>\n</ul>\n<h2 id=\"Basic-Usage\"><a href=\"#Basic-Usage\" class=\"headerlink\" title=\"Basic Usage\"></a>Basic Usage</h2><h3 id=\"Normal-Mode\"><a href=\"#Normal-Mode\" class=\"headerlink\" title=\"Normal Mode:\"></a>Normal Mode:</h3><ul>\n<li>First Open file with VIM command, with get into Normal Mode</li>\n<li><code>h``j``k``l</code> : <code>←``↓``↑``→</code></li>\n<li><code>dd</code> : delete current line</li>\n<li><code>x</code> : delete current character</li>\n<li><code>yy</code> : copy current line</li>\n<li><code>p</code> : paste. It will paste last copied, cut or deleted texts.</li>\n<li><code>^</code> : go to first non-blank character in current line, <code>$</code> to the end</li>\n<li><code>u</code> : undo, <code>&lt;C-r&gt;</code> : redo. <code>g-</code>/<code>g+</code> : go to older/newer text state</li>\n<li><code>.</code> : repeat last action</li>\n<li><code>N&lt;command&gt;</code> : repeat <code>Command</code> <code>N</code> times. For example, <code>2dd</code> : delete two line</li>\n<li><code>gg</code>: go to first line, <code>G</code> : Go to last line, <code>NG</code> : Go to line <code>N</code> (<code>N</code> stands for a number, for example, <code>10G</code>)</li>\n<li><code>w</code> : move cursor to the beginning of next word, <code>e</code> : move cursor to the end of next word</li>\n<li><code>%</code> : match the closest <code>{</code>, <code>[</code>, <code>(</code></li>\n<li><code>*</code> : search forward for the occurrence of the word nearest to the cursor., <code>#</code> : search backward.</li>\n</ul>\n<h3 id=\"Insert-Mode\"><a href=\"#Insert-Mode\" class=\"headerlink\" title=\"Insert Mode:\"></a>Insert Mode:</h3><ul>\n<li><code>i</code> : Get into Insert Mode, <code>Esc</code> back to Normal Mode</li>\n<li><code>I</code> : Start to insert text at the beginning of the current line</li>\n<li><code>o</code> : Begin a new line below the cursor and insert text</li>\n<li><code>O</code> : Begin a new line above the cursor and insert text</li>\n</ul>\n<h3 id=\"Command-Mode\"><a href=\"#Command-Mode\" class=\"headerlink\" title=\"Command Mode:\"></a>Command Mode:</h3><ul>\n<li>Execute command (<code>:</code>), search patterns<br>(<code>/</code> and <code>?</code>), and filter commands (<code>!</code>)</li>\n<li><code>:wq</code> : Save then quit, <code>:q</code>: Quit, <code>:w</code>: Save, <code>:q!</code>: Quit current file without saving, <code>:qa!</code> Quit all files without saving</li>\n<li><code>:e &lt;path/to/file&gt;</code> : Open another file</li>\n<li><code>:saveas &lt;path/to/file&gt;</code> : Save as another file</li>\n</ul>\n<h2 id=\"Advance-Usage\"><a href=\"#Advance-Usage\" class=\"headerlink\" title=\"Advance Usage\"></a>Advance Usage</h2><h3 id=\"Insert-Mode-1\"><a href=\"#Insert-Mode-1\" class=\"headerlink\" title=\"Insert Mode:\"></a>Insert Mode:</h3><ul>\n<li><code>gi</code> : goto Insert mode where you left it last time</li>\n</ul>\n<h3 id=\"Normal-Mode-1\"><a href=\"#Normal-Mode-1\" class=\"headerlink\" title=\"Normal Mode:\"></a>Normal Mode:</h3><ul>\n<li><p><code>&lt;C-y&gt;</code>, <code>&lt;C-e&gt;</code> : check the text above or below the cursor</p>\n</li>\n<li><p><code>&lt;C-w&gt;w</code> : Switch windows between last one and current one</p>\n</li>\n<li><p><code>&lt;C-w&gt;&lt;dir&gt;</code> : <code>&lt;dir&gt;</code> can be <code>h``j``k``l</code>, switch windows to left, down, up or right.</p>\n</li>\n<li><p>to move at current line</p>\n<ul>\n<li><p><code>0</code> → head</p>\n</li>\n<li><p><code>^</code> → non-blank head</p>\n</li>\n<li><p><code>$</code> → end</p>\n</li>\n<li><p><code>g_</code> → non-blank end</p>\n</li>\n<li><p><code>fa</code> → to next character <code>a</code></p>\n</li>\n<li><p><code>t,</code> → to the character right before the next <code>,</code></p>\n</li>\n<li><p><code>3fa</code> → to the third <code>a</code></p>\n</li>\n<li><p><code>F</code>, <code>T</code> → same as <code>f</code>, <code>t</code> with reverse direction</p>\n<p>  <img src=\"/public/img/media/line_moves-1.jpg\" alt=\"line_moves\"></p>\n</li>\n</ul>\n</li>\n<li><p>manipulate a text block <code>&lt;C-v&gt;</code>, for example:</p>\n<ul>\n<li><p>add prefixes to multi lines</p>\n<p>  <img src=\"/public/img/media/rectangular-blocks.gif\" alt=\"rectangular-blocks\"><br>`</p>\n<ul>\n<li><code>^</code> → to the head of the line</li>\n<li><code>&lt;C-v&gt;</code> → Start to select a block of text</li>\n<li><code>&lt;C-d&gt;</code> → to move downward, you also can use <code>h``j``k``l</code> or <code>%</code> instead</li>\n<li><code>I--</code>  → Insert <code>--</code></li>\n<li><code>[ESC]</code> → to make effects to every line</li>\n</ul>\n</li>\n<li><p>append text to multi lines</p>\n<p>  <img src=\"/public/img/media/append-to-many-lines.gif\" alt=\"append-to-many-lines\"></p>\n<ul>\n<li><code>&lt;C-v&gt;</code> → Choose lines (You can also use <code>j</code>, <code>&lt;C-d&gt;</code>, <code>/pattern</code>, <code>%</code>, etc.</li>\n<li><code>$</code> → move cursor to the end</li>\n<li><code>A</code> → start to input text, type press <code>ESC</code></li>\n</ul>\n</li>\n<li><p>indentation</p>\n<p>  <img src=\"/public/img/media/autoindent.gif\" alt=\"autoindent\"></p>\n<ul>\n<li><code>J</code> → convert multi lines to single line</li>\n<li><code>&lt;</code> <code>&gt;</code> → indent to left or right</li>\n<li><code>=</code> → auto indent</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Visual-Mode\"><a href=\"#Visual-Mode\" class=\"headerlink\" title=\"Visual Mode:\"></a>Visual Mode:</h3><ul>\n<li><p>Block Choosing <code>&lt;action&gt;a&lt;object&gt;</code> or <code>&lt;action&gt;i&lt;object&gt;</code></p>\n<ul>\n<li><p><code>&lt;action&gt;</code> can be any actions, like <code>d</code>(delete), <code>y</code>(copy), <code>v</code>(text selecting).</p>\n</li>\n<li><p><code>&lt;object&gt;</code> can be <code>w</code>(a word), <code>W</code>(a phrase), <code>s</code>(a sentance), <code>p</code>(a paragraph), or a special symbol like <code>&quot;</code>, <code>&#39;</code>, <code>)</code>, <code>}</code>, <code>]</code>.</p>\n</li>\n<li><p>For example:</p>\n<p> <img src=\"/public/img/media/textobjects.png\" alt=\"textobjects\"></p>\n<ul>\n<li><code>vi&quot;</code> → foo</li>\n<li><code>va&quot;</code> → “foo”</li>\n<li><code>vi)</code> → “foo”</li>\n<li><code>va)</code> → (“foo”)</li>\n<li><code>v2i)</code> → map (+) (“foo”)</li>\n<li><code>v2a)</code> → (map (+) (“foo”))</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Command-Mode-1\"><a href=\"#Command-Mode-1\" class=\"headerlink\" title=\"Command Mode:\"></a>Command Mode:</h3><ul>\n<li><p><code>:split</code> : split window horizontally, <code>:vsplit</code> : split window vertically.</p>\n</li>\n<li><p><code>q</code> : Record typed characters into register, then repeat them.</p>\n<ul>\n<li><p><code>qa</code> : record every action into register <code>a</code></p>\n</li>\n<li><p><code>@a</code> : replay it</p>\n</li>\n<li><p><code>@@</code> : to replay the latest register</p>\n</li>\n<li><p>For example:</p>\n<p>  <img src=\"/public/img/media/macros.gif\" alt=\"macros\"></p>\n<ul>\n<li><p>In this text file, only have “1” in it, start to input: <code>qaYp&lt;C-a&gt;q</code></p>\n<ul>\n<li><code>qa</code> → start to record</li>\n<li><code>yyp</code> → copy current line to next line</li>\n<li><code>&lt;C-a&gt;</code> → add 1</li>\n<li><code>q</code> → stop recording</li>\n<li><code>@a</code> → write down 2 under 1</li>\n<li><code>@@</code> → write down 3 under 2</li>\n<li><code>100@@</code> → repeat it 100 times.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>:[range]s/&lt;pattern&gt;/&lt;replace&gt;/{flags}</code> : replace text</p>\n<ul>\n<li>TODO</li>\n<li><code>[range]</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h2><h3 id=\"Explanations-of-Important-Keywords\"><a href=\"#Explanations-of-Important-Keywords\" class=\"headerlink\" title=\"Explanations of Important Keywords\"></a>Explanations of Important Keywords</h3><ul>\n<li><p><code>&lt;Leader&gt;</code>: default is <code>\\</code>, you can change it by using <code>let mapleader = &#39;,&#39;</code> in <code>.vimrc</code> file.</p>\n</li>\n<li><p><code>&lt;CR&gt;</code>: equals <code>&lt;Return&gt;</code>    &amp; <code>&lt;Enter&gt;</code></p>\n</li>\n<li><p><code>&lt;S-...&gt;</code>    : shift-key</p>\n</li>\n<li><p><code>&lt;C-...&gt;</code>: control-key</p>\n</li>\n<li><p><code>&lt;M-...&gt;</code> &amp; <code>&lt;A-...&gt;</code>: alt-key</p>\n</li>\n<li><p><code>&lt;D-...&gt;</code>: command-key (Mac only)</p>\n</li>\n<li><p><code>g:</code>: means globally. Example:</p>\n<ul>\n<li><code>let g:last_active_tab = 1</code> toggle switch between current tab and the last one globally.</li>\n</ul>\n</li>\n<li><p><code>remap</code>: Allows for mappings to work recursively.</p>\n</li>\n<li><p><code>noremap</code>: Only a single entry. Can NOT be remapped.</p>\n</li>\n<li><p><code>n</code> &amp; <code>v</code> &amp; <code>s</code> &amp; <code>i</code>: prefixes, <code>n</code> stands for Normal mode, <code>v</code> stands for Visual mode, <code>s</code> stands for Select Mode, <code>i</code> stands for Insert Mode. Example:</p>\n<ul>\n<li><code>nnoremap &lt;C-t&gt; :tabnew&lt;CR&gt;</code>: remap <code>Ctrl + t</code> to create a new tab</li>\n<li><code>inoremap &lt;C-t&gt; &lt;Esc&gt;:tabnew&lt;CR&gt;</code>: same as last one, with an escape action additionally.</li>\n</ul>\n</li>\n<li><p><code>&lt;Plug&gt;</code>: in <code>.vimrc</code> file, it has two meanings. First, it’s visible out of the plugin scripts. And the second, use structure <code>&lt;Plug&gt; scriptname mapname</code> to avoid confliction with other plugins. For example: <code>&lt;Plug&gt;TypecorrAdd</code>, <code>Typecorr</code> is the script name, and <code>Add</code> is the function name.</p>\n</li>\n<li><p><code>&lt;SID&gt;</code>: is the script ID and not visible outside. Compare with <code>&lt;Plug&gt;</code>, it’s more like <code>private</code> function to other scrips. So can’t use it out of the script. Example:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">\" ,en ,ep to jump between errors</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>! &lt;<span class=\"title\">SID</span>&gt;<span class=\"title\">LocationPrevious</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">try</span></span><br><span class=\"line\">      lprev</span><br><span class=\"line\">  <span class=\"keyword\">catch</span> /^Vim\\%((\\<span class=\"keyword\">a</span>\\+)\\)\\=:E553/</span><br><span class=\"line\">      <span class=\"keyword\">llast</span></span><br><span class=\"line\">  <span class=\"keyword\">endtry</span></span><br><span class=\"line\"><span class=\"keyword\">endfunction</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>! &lt;<span class=\"title\">SID</span>&gt;<span class=\"title\">LocationNext</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">lnext</span></span><br><span class=\"line\">  <span class=\"keyword\">catch</span> /^Vim\\%((\\<span class=\"keyword\">a</span>\\+)\\)\\=:E553/</span><br><span class=\"line\">      <span class=\"keyword\">lfirst</span></span><br><span class=\"line\">  <span class=\"keyword\">endtry</span></span><br><span class=\"line\"><span class=\"keyword\">endfunction</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Plug&gt;</span>LocationPrevious :<span class=\"symbol\">&lt;C-u&gt;</span><span class=\"keyword\">exe</span> <span class=\"string\">'call &lt;SID&gt;LocationPrevious()'</span><span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Plug&gt;</span>LocationNext :<span class=\"symbol\">&lt;C-u&gt;</span><span class=\"keyword\">exe</span> <span class=\"string\">'call &lt;SID&gt;LocationNext()'</span><span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Leader&gt;</span>ep <span class=\"symbol\">&lt;Plug&gt;</span>LocationPrevious</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">en</span> <span class=\"symbol\">&lt;Plug&gt;</span>LocationNext</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>&lt;silence&gt;</code>:  to make a key mapping can`t be echoed on the command line</p>\n</li>\n<li><p><code>&lt;expr&gt;</code> take the argument as expression. For example: <code>inoremap &lt;expr&gt; &lt;C-L&gt; ListItem()</code>, ListItem is a function which is mapped with <code>Ctrl + L</code>.</p>\n</li>\n</ul>\n<h3 id=\"unblevable-quick-scope\"><a href=\"#unblevable-quick-scope\" class=\"headerlink\" title=\"unblevable/quick-scope\"></a>unblevable/quick-scope</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/unblevable/quick-scope\" target=\"_blank\" rel=\"noopener\">unblevable/quick-scope</a></p>\n</li>\n<li><p>Useage: highlights which characters to target for <code>f</code>, <code>F</code> and family.</p>\n</li>\n<li><p>Key Mapping:</p>\n<pre><code>let g:qs_highlight_on_keys = [&apos;f&apos;, &apos;F&apos;, &apos;t&apos;, &apos;T&apos;] //</code></pre></li>\n</ul>\n<h3 id=\"ntpeters-vim-better-whitespace\"><a href=\"#ntpeters-vim-better-whitespace\" class=\"headerlink\" title=\"ntpeters/vim-better-whitespace\"></a>ntpeters/vim-better-whitespace</h3><ul>\n<li><p>Github Repo: <a href=\"ntpeters/vim-better-whitespace\">ntpeters/vim-better-whitespace</a></p>\n</li>\n<li><p>Useage: clean extra whitespace.</p>\n</li>\n<li><p>Key Mapping:</p>\n<pre><code>nnoremap &lt;silent&gt; &lt;Leader&gt;&lt;Space&gt; :StripWhitespace&lt;CR&gt;\nautocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre &lt;buffer&gt; StripWhitespace\nlet g:better_whitespace_filetypes_blacklist=[&apos;diff&apos;, &apos;gitcommit&apos;, &apos;unite&apos;, &apos;qf&apos;, &apos;help&apos;]</code></pre></li>\n</ul>\n<h3 id=\"Vim-CtrlSpace\"><a href=\"#Vim-CtrlSpace\" class=\"headerlink\" title=\"Vim-CtrlSpace\"></a>Vim-CtrlSpace</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/vim-ctrlspace/vim-ctrlspace\" target=\"_blank\" rel=\"noopener\">vim-ctrlspace/vim-ctrlspace</a></p>\n</li>\n<li><p>Useage:</p>\n<ul>\n<li>bookmarks for your favorite projects</li>\n<li>workspaces (sessions)</li>\n<li>tabs / buffers / files management</li>\n<li>fast fuzzy searching powered by Go</li>\n</ul>\n</li>\n<li><p>Shortkeys:</p>\n<ul>\n<li><code>Ctrl + Space</code> : open ctrl space command line</li>\n<li><code>b</code> : bookmark list</li>\n<li><code>w</code> : workspace list in current bookmark</li>\n<li><code>l</code> : tab list in current workspace</li>\n<li><code>o</code> : file list in current workspace</li>\n<li><code>h</code> : buffer list in current workspace, this is default list when you hit ctrl + space</li>\n<li><code>/</code> : Into Search Mode, type it again will close search mode. Aka,  <code>B</code>, <code>W</code>, <code>L</code>, <code>O</code>, <code>H</code> with uppercase will open the same list with Search Mode</li>\n<li><code>i</code> : switch directory (when you on the buffer list)</li>\n<li><code>a</code> : all the files are opend in current workspace</li>\n<li><code>s</code> : save current workspace/bookmark, then <code>&lt;CR&gt;</code> to confirm</li>\n<li><code>d</code> : delete a file from current buffer or file list</li>\n<li><code>j</code>,<code>k</code> : switch items, then <code>&lt;CR&gt;</code> to confirm</li>\n<li><code>m</code> : rename bookmark or workspace(when you on the workspace list or bookmark list)</li>\n</ul>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">has</span>(<span class=\"string\">\"gui_running\"</span>)</span><br><span class=\"line\"><span class=\"comment\">\" Settings for MacVim and Inconsolata font</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSymbols</span> = &#123; <span class=\"string\">\"File\"</span>: <span class=\"string\">\"◯\"</span>, <span class=\"string\">\"CTab\"</span>: <span class=\"string\">\"▣\"</span>, <span class=\"string\">\"Tabs\"</span>: <span class=\"string\">\"▢\"</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">executable</span>(<span class=\"string\">\"ag\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceGlobCommand</span> = <span class=\"string\">'ag -l --nocolor -g \"\"'</span></span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSearchTiming</span> = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceNormal   PMenu</span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceSelected PMenuSel</span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceSearch   Search</span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceStatus   StatusLine</span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span><span class=\"symbol\">&lt;C-p&gt;</span> :CtrlSpace O<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceLoadLastWorkspaceOnStart</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSaveWorkspaceOnSwitch</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSaveWorkspaceOnExit</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"scrooloose-nerdtree-amp-jistr-vim-nerdtree-tabs\"><a href=\"#scrooloose-nerdtree-amp-jistr-vim-nerdtree-tabs\" class=\"headerlink\" title=\"scrooloose/nerdtree &amp; jistr/vim-nerdtree-tabs\"></a>scrooloose/nerdtree &amp; jistr/vim-nerdtree-tabs</h3><ul>\n<li><p>TODO</p>\n</li>\n<li><p>Github Repo: <a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener\">scrooloose/nerdtree</a> &amp; <a href=\"https://github.com/jistr/vim-nerdtree-tabs\" target=\"_blank\" rel=\"noopener\">jistr/vim-nerdtree-tabs</a></p>\n</li>\n<li><p>Useage: to explore filesystem and to open files and directories.</p>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">\" nerdtree</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;C-n&gt;</span> :NERDTreeToggle<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeHighlightCursorline=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeIgnore=[ <span class=\"string\">'\\.pyc$'</span>, <span class=\"string\">'\\.pyo$'</span>, <span class=\"string\">'\\.obj$'</span>, <span class=\"string\">'\\.o$'</span>, <span class=\"string\">'\\.so$'</span>, <span class=\"string\">'\\.egg$'</span>, <span class=\"string\">'^\\.git$'</span>, <span class=\"string\">'^\\.svn$'</span>, <span class=\"string\">'^\\.hg$'</span> ]</span><br><span class=\"line\"><span class=\"comment\">\"close vim if the only window left open is a NERDTree</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> bufenter * <span class=\"keyword\">if</span> (<span class=\"built_in\">winnr</span>(<span class=\"string\">\"$\"</span>) == <span class=\"number\">1</span> &amp;&amp; <span class=\"built_in\">exists</span>(<span class=\"string\">\"b:NERDTreeType\"</span>) &amp;&amp; <span class=\"variable\">b:NERDTreeType</span> == <span class=\"string\">\"primary\"</span>) | q | end</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenSplit</span> = <span class=\"string\">'s'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenVSplit</span> = <span class=\"string\">'v'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeWinSize</span>=<span class=\"number\">26</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" nerdtreetabs</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;C-n&gt;</span> <span class=\"symbol\">&lt;plug&gt;</span>NERDTreeTabsToggle<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_synchronize_view</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_synchronize_focus</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_open_on_console_startup</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_open_on_gui_startup</span>=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"syntastic\"><a href=\"#syntastic\" class=\"headerlink\" title=\"syntastic\"></a>syntastic</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/vim-syntastic/syntastic#introduction\" target=\"_blank\" rel=\"noopener\">vim-syntastic/syntastic</a></p>\n</li>\n<li><p>Useage: a syntax checking plugin</p>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">execute</span> pathogen#infect()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_error_symbol</span>=<span class=\"string\">'&gt;&gt;'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_warning_symbol</span>=<span class=\"string\">'&gt;'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_check_on_open</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_check_on_wq</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_enable_highlighting</span>=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" checkers</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_php_checkers</span> = [<span class=\"string\">'php'</span>, <span class=\"string\">'phpcs'</span>, <span class=\"string\">'phpmd'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_python_checkers</span>=[<span class=\"string\">'pyflakes'</span>, <span class=\"string\">'pep8'</span>] <span class=\"comment\">\" 使用pyflakes,速度比pylint快</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_python_pep8_args</span>=<span class=\"string\">'--ignore=E501,E225,E124,E712'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_javascript_checkers</span> = [<span class=\"string\">'jsl'</span>, <span class=\"string\">'jshint'</span>]</span><br><span class=\"line\"><span class=\"comment\">\" let g:syntastic_markdown_checkers = ['proselint']</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_html_checkers</span>=[<span class=\"string\">'tidy'</span>, <span class=\"string\">'jshint'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span> statusline+=%#warningmsg#</span><br><span class=\"line\"><span class=\"keyword\">set</span> statusline+=%&#123;SyntasticStatuslineFlag()&#125;</span><br><span class=\"line\"><span class=\"keyword\">set</span> statusline+=%*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" to see error location list</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_always_populate_loc_list</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_enable_signs</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_auto_loc_list</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_auto_jump</span> = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">highlight</span> SyntasticErrorSign guifg=white guibg=black</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"YouCompleteMe\"><a href=\"#YouCompleteMe\" class=\"headerlink\" title=\"YouCompleteMe\"></a>YouCompleteMe</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">Valloric/YouCompleteMe</a></p>\n</li>\n<li><p>Useage: code completion</p>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_key_list_select_completion</span>=[<span class=\"string\">'&lt;C-j&gt;'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_key_list_previous_completion</span>=[<span class=\"string\">'&lt;C-k&gt;'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_complete_in_comments</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_complete_in_strings</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_use_ultisnips_completer</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_collect_identifiers_from_comments_and_strings</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_collect_identifiers_from_tags_files</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_seed_identifiers_with_syntax</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_goto_buffer_command</span> = <span class=\"string\">'horizontal-split'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;leader&gt;</span>jd :YcmCompleter GoToDefinitionElseDeclaration<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;leader&gt;</span>gd :YcmCompleter GoToDeclaration<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> !empty(<span class=\"built_in\">glob</span>(<span class=\"string\">\"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"</span>))</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_global_ycm_extra_conf</span> = <span class=\"string\">\"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"</span></span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"vim-easymotion\"><a href=\"#vim-easymotion\" class=\"headerlink\" title=\"vim-easymotion\"></a>vim-easymotion</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/easymotion/vim-easymotion\" target=\"_blank\" rel=\"noopener\">easymotion/vim-easymotion</a></p>\n</li>\n<li><p>Usage: Provides a much simpler way to use some motions in vim.</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:EasyMotion_smartcase</span> = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" &lt;Leader&gt;f&#123;char&#125; to move to &#123;char&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">map</span>  <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">f</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-<span class=\"keyword\">bd</span>-<span class=\"keyword\">f</span>)</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">f</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-overwin-<span class=\"keyword\">f</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" s&#123;char&#125;&#123;char&#125; to move to &#123;char&#125;&#123;char&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">nmap</span> s <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-overwin-f2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" Move to line</span></span><br><span class=\"line\"><span class=\"keyword\">map</span>  <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">l</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-<span class=\"keyword\">bd</span>-jk)</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">l</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-overwin-<span class=\"built_in\">line</span>)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"easyalign\"><a href=\"#easyalign\" class=\"headerlink\" title=\"easyalign\"></a>easyalign</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/junegunn/vim-easy-align\" target=\"_blank\" rel=\"noopener\">junegunn/vim-easy-align</a></p>\n</li>\n<li><p>Usage: alignment</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vmap</span> ga <span class=\"symbol\">&lt;Plug&gt;</span>(EasyAlign)</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> ga <span class=\"symbol\">&lt;Plug&gt;</span>(EasyAlign)</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:easy_align_ignore_groups</span> = [<span class=\"string\">'Comment'</span>, <span class=\"string\">'String'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:easy_align_delimiters</span> = &#123;</span><br><span class=\"line\">   \\ <span class=\"string\">'&gt;'</span>: &#123; <span class=\"string\">'pattern'</span>: <span class=\"string\">'&gt;&gt;\\|=&gt;\\|&gt;'</span> &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">'/'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:         <span class=\"string\">'//\\+\\|/\\*\\|\\*/'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'delimiter_align'</span>: <span class=\"string\">'l'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'ignore_groups'</span>:   [<span class=\"string\">'!Comment'</span>] &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">']'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:       <span class=\"string\">'[[\\]]'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'left_margin'</span>:   <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'right_margin'</span>:  <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'stick_to_left'</span>: <span class=\"number\">0</span></span><br><span class=\"line\">   \\   &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">')'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:       <span class=\"string\">'[()]'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'left_margin'</span>:   <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'right_margin'</span>:  <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'stick_to_left'</span>: <span class=\"number\">0</span></span><br><span class=\"line\">   \\   &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">'d'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:      <span class=\"string\">' \\(\\S\\+\\s*[;=]\\)\\@='</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'left_margin'</span>:  <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'right_margin'</span>: <span class=\"number\">0</span></span><br><span class=\"line\">   \\   &#125;</span><br><span class=\"line\">   \\ &#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"NerdTree\"><a href=\"#NerdTree\" class=\"headerlink\" title=\"NerdTree\"></a>NerdTree</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener\">scrooloose/nerdtree</a></p>\n</li>\n<li><p>Usage: to explore your filesystem and to open files and directories.</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;leader&gt;</span>n :NERDTreeToggle<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeShowBookmarks=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeHighlightCursorline=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeIgnore=[ <span class=\"string\">'\\.pyc$'</span>, <span class=\"string\">'\\.pyo$'</span>, <span class=\"string\">'\\.obj$'</span>, <span class=\"string\">'\\.o$'</span>, <span class=\"string\">'\\.so$'</span>, <span class=\"string\">'\\.egg$'</span>, <span class=\"string\">'^\\.git$'</span>, <span class=\"string\">'^\\.svn$'</span>, <span class=\"string\">'^\\.hg$'</span> ]</span><br><span class=\"line\"><span class=\"comment\">\"close vim if the only window left open is a NERDTree</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> bufenter * <span class=\"keyword\">if</span> (<span class=\"built_in\">winnr</span>(<span class=\"string\">\"$\"</span>) == <span class=\"number\">1</span> &amp;&amp; <span class=\"built_in\">exists</span>(<span class=\"string\">\"b:NERDTreeType\"</span>) &amp;&amp; <span class=\"variable\">b:NERDTreeType</span> == <span class=\"string\">\"primary\"</span>) | q | end</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenSplit</span> = <span class=\"string\">'s'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenVSplit</span> = <span class=\"string\">'v'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeWinSize</span>=<span class=\"number\">26</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"NERDCommenter\"><a href=\"#NERDCommenter\" class=\"headerlink\" title=\"NERDCommenter\"></a>NERDCommenter</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/scrooloose/nerdcommenter\" target=\"_blank\" rel=\"noopener\">scrooloose/nerdcommenter</a></p>\n</li>\n<li><p>Usage: to wrangle your code comments.</p>\n</li>\n<li><p>Shortkeys:</p>\n<ul>\n<li><code>[count]&lt;leader&gt;cc</code> : Comment out the current line or text selected in visual mode.</li>\n<li><code>[count]&lt;leader&gt;c&lt;space&gt;</code> : Toggles the comment state of the selected line(s). If the topmost selected line is commented, all selected lines are uncommented and vice versa.</li>\n<li><code>[count]&lt;leader&gt;cs</code> : Comments out the selected lines with a pretty block formatted layout.</li>\n<li><code>[count]&lt;leader&gt;ci</code> : Toggles the comment state of the selected line(s) individually.</li>\n</ul>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">\" Add spaces after comment delimiters by default</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDSpaceDelims</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">\" Use compact syntax for prettified multi-line comments</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDCompactSexyComs</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">\" Align line-wise comment delimiters flush left instead of following code indentation</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDDefaultAlign</span> = <span class=\"string\">'left'</span></span><br><span class=\"line\"><span class=\"comment\">\" Allow commenting and inverting empty lines (useful when commenting a region)</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDCommentEmptyLines</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"Airline\"><a href=\"#Airline\" class=\"headerlink\" title=\"Airline\"></a>Airline</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/vim-airline/vim-airline\" target=\"_blank\" rel=\"noopener\">vim-airline/vim-airline</a></p>\n</li>\n<li><p>Usage: rich statusbar.</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> !exists(<span class=\"string\">'g:airline_symbols'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">g:airline_symbols</span> = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_mode_map</span> = &#123;</span><br><span class=\"line\">    \\ <span class=\"string\">'__'</span> : <span class=\"string\">'-'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'n'</span>  : <span class=\"string\">'N'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'i'</span>  : <span class=\"string\">'I'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'R'</span>  : <span class=\"string\">'R'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'c'</span>  : <span class=\"string\">'C'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'v'</span>  : <span class=\"string\">'V'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'V'</span>  : <span class=\"string\">'V'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'\u0016'</span> : <span class=\"string\">'V'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'s'</span>  : <span class=\"string\">'S'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'S'</span>  : <span class=\"string\">'S'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'\u0013'</span> : <span class=\"string\">'S'</span>,</span><br><span class=\"line\">    \\ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_left_sep</span> = <span class=\"string\">'❯'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_right_sep</span> = <span class=\"string\">'❮'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_symbols</span>.linenr = <span class=\"string\">'¶'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_symbols</span>.branch = <span class=\"string\">'⎇'</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<!---\n### a\n* Github Repo: [b](c)\n* Useage: d\n* Key Mapping:\n\n        e\n-->\n\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>好不容易用英语写完了， 懒得翻译了</li>\n</ul>\n<h2 id=\"Basic-Usage\"><a href=\"#Basic-Usage\" class=\"headerlink\" title=\"Basic Usage\"></a>Basic Usage</h2><h3 id=\"Normal-Mode\"><a href=\"#Normal-Mode\" class=\"headerlink\" title=\"Normal Mode:\"></a>Normal Mode:</h3><ul>\n<li>First Open file with VIM command, with get into Normal Mode</li>\n<li><code>h``j``k``l</code> : <code>←``↓``↑``→</code></li>\n<li><code>dd</code> : delete current line</li>\n<li><code>x</code> : delete current character</li>\n<li><code>yy</code> : copy current line</li>\n<li><code>p</code> : paste. It will paste last copied, cut or deleted texts.</li>\n<li><code>^</code> : go to first non-blank character in current line, <code>$</code> to the end</li>\n<li><code>u</code> : undo, <code>&lt;C-r&gt;</code> : redo. <code>g-</code>/<code>g+</code> : go to older/newer text state</li>\n<li><code>.</code> : repeat last action</li>\n<li><code>N&lt;command&gt;</code> : repeat <code>Command</code> <code>N</code> times. For example, <code>2dd</code> : delete two line</li>\n<li><code>gg</code>: go to first line, <code>G</code> : Go to last line, <code>NG</code> : Go to line <code>N</code> (<code>N</code> stands for a number, for example, <code>10G</code>)</li>\n<li><code>w</code> : move cursor to the beginning of next word, <code>e</code> : move cursor to the end of next word</li>\n<li><code>%</code> : match the closest <code>{</code>, <code>[</code>, <code>(</code></li>\n<li><code>*</code> : search forward for the occurrence of the word nearest to the cursor., <code>#</code> : search backward.</li>\n</ul>\n<h3 id=\"Insert-Mode\"><a href=\"#Insert-Mode\" class=\"headerlink\" title=\"Insert Mode:\"></a>Insert Mode:</h3><ul>\n<li><code>i</code> : Get into Insert Mode, <code>Esc</code> back to Normal Mode</li>\n<li><code>I</code> : Start to insert text at the beginning of the current line</li>\n<li><code>o</code> : Begin a new line below the cursor and insert text</li>\n<li><code>O</code> : Begin a new line above the cursor and insert text</li>\n</ul>\n<h3 id=\"Command-Mode\"><a href=\"#Command-Mode\" class=\"headerlink\" title=\"Command Mode:\"></a>Command Mode:</h3><ul>\n<li>Execute command (<code>:</code>), search patterns<br>(<code>/</code> and <code>?</code>), and filter commands (<code>!</code>)</li>\n<li><code>:wq</code> : Save then quit, <code>:q</code>: Quit, <code>:w</code>: Save, <code>:q!</code>: Quit current file without saving, <code>:qa!</code> Quit all files without saving</li>\n<li><code>:e &lt;path/to/file&gt;</code> : Open another file</li>\n<li><code>:saveas &lt;path/to/file&gt;</code> : Save as another file</li>\n</ul>\n<h2 id=\"Advance-Usage\"><a href=\"#Advance-Usage\" class=\"headerlink\" title=\"Advance Usage\"></a>Advance Usage</h2><h3 id=\"Insert-Mode-1\"><a href=\"#Insert-Mode-1\" class=\"headerlink\" title=\"Insert Mode:\"></a>Insert Mode:</h3><ul>\n<li><code>gi</code> : goto Insert mode where you left it last time</li>\n</ul>\n<h3 id=\"Normal-Mode-1\"><a href=\"#Normal-Mode-1\" class=\"headerlink\" title=\"Normal Mode:\"></a>Normal Mode:</h3><ul>\n<li><p><code>&lt;C-y&gt;</code>, <code>&lt;C-e&gt;</code> : check the text above or below the cursor</p>\n</li>\n<li><p><code>&lt;C-w&gt;w</code> : Switch windows between last one and current one</p>\n</li>\n<li><p><code>&lt;C-w&gt;&lt;dir&gt;</code> : <code>&lt;dir&gt;</code> can be <code>h``j``k``l</code>, switch windows to left, down, up or right.</p>\n</li>\n<li><p>to move at current line</p>\n<ul>\n<li><p><code>0</code> → head</p>\n</li>\n<li><p><code>^</code> → non-blank head</p>\n</li>\n<li><p><code>$</code> → end</p>\n</li>\n<li><p><code>g_</code> → non-blank end</p>\n</li>\n<li><p><code>fa</code> → to next character <code>a</code></p>\n</li>\n<li><p><code>t,</code> → to the character right before the next <code>,</code></p>\n</li>\n<li><p><code>3fa</code> → to the third <code>a</code></p>\n</li>\n<li><p><code>F</code>, <code>T</code> → same as <code>f</code>, <code>t</code> with reverse direction</p>\n<p>  <img src=\"/public/img/media/line_moves-1.jpg\" alt=\"line_moves\"></p>\n</li>\n</ul>\n</li>\n<li><p>manipulate a text block <code>&lt;C-v&gt;</code>, for example:</p>\n<ul>\n<li><p>add prefixes to multi lines</p>\n<p>  <img src=\"/public/img/media/rectangular-blocks.gif\" alt=\"rectangular-blocks\"><br>`</p>\n<ul>\n<li><code>^</code> → to the head of the line</li>\n<li><code>&lt;C-v&gt;</code> → Start to select a block of text</li>\n<li><code>&lt;C-d&gt;</code> → to move downward, you also can use <code>h``j``k``l</code> or <code>%</code> instead</li>\n<li><code>I--</code>  → Insert <code>--</code></li>\n<li><code>[ESC]</code> → to make effects to every line</li>\n</ul>\n</li>\n<li><p>append text to multi lines</p>\n<p>  <img src=\"/public/img/media/append-to-many-lines.gif\" alt=\"append-to-many-lines\"></p>\n<ul>\n<li><code>&lt;C-v&gt;</code> → Choose lines (You can also use <code>j</code>, <code>&lt;C-d&gt;</code>, <code>/pattern</code>, <code>%</code>, etc.</li>\n<li><code>$</code> → move cursor to the end</li>\n<li><code>A</code> → start to input text, type press <code>ESC</code></li>\n</ul>\n</li>\n<li><p>indentation</p>\n<p>  <img src=\"/public/img/media/autoindent.gif\" alt=\"autoindent\"></p>\n<ul>\n<li><code>J</code> → convert multi lines to single line</li>\n<li><code>&lt;</code> <code>&gt;</code> → indent to left or right</li>\n<li><code>=</code> → auto indent</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Visual-Mode\"><a href=\"#Visual-Mode\" class=\"headerlink\" title=\"Visual Mode:\"></a>Visual Mode:</h3><ul>\n<li><p>Block Choosing <code>&lt;action&gt;a&lt;object&gt;</code> or <code>&lt;action&gt;i&lt;object&gt;</code></p>\n<ul>\n<li><p><code>&lt;action&gt;</code> can be any actions, like <code>d</code>(delete), <code>y</code>(copy), <code>v</code>(text selecting).</p>\n</li>\n<li><p><code>&lt;object&gt;</code> can be <code>w</code>(a word), <code>W</code>(a phrase), <code>s</code>(a sentance), <code>p</code>(a paragraph), or a special symbol like <code>&quot;</code>, <code>&#39;</code>, <code>)</code>, <code>}</code>, <code>]</code>.</p>\n</li>\n<li><p>For example:</p>\n<p> <img src=\"/public/img/media/textobjects.png\" alt=\"textobjects\"></p>\n<ul>\n<li><code>vi&quot;</code> → foo</li>\n<li><code>va&quot;</code> → “foo”</li>\n<li><code>vi)</code> → “foo”</li>\n<li><code>va)</code> → (“foo”)</li>\n<li><code>v2i)</code> → map (+) (“foo”)</li>\n<li><code>v2a)</code> → (map (+) (“foo”))</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Command-Mode-1\"><a href=\"#Command-Mode-1\" class=\"headerlink\" title=\"Command Mode:\"></a>Command Mode:</h3><ul>\n<li><p><code>:split</code> : split window horizontally, <code>:vsplit</code> : split window vertically.</p>\n</li>\n<li><p><code>q</code> : Record typed characters into register, then repeat them.</p>\n<ul>\n<li><p><code>qa</code> : record every action into register <code>a</code></p>\n</li>\n<li><p><code>@a</code> : replay it</p>\n</li>\n<li><p><code>@@</code> : to replay the latest register</p>\n</li>\n<li><p>For example:</p>\n<p>  <img src=\"/public/img/media/macros.gif\" alt=\"macros\"></p>\n<ul>\n<li><p>In this text file, only have “1” in it, start to input: <code>qaYp&lt;C-a&gt;q</code></p>\n<ul>\n<li><code>qa</code> → start to record</li>\n<li><code>yyp</code> → copy current line to next line</li>\n<li><code>&lt;C-a&gt;</code> → add 1</li>\n<li><code>q</code> → stop recording</li>\n<li><code>@a</code> → write down 2 under 1</li>\n<li><code>@@</code> → write down 3 under 2</li>\n<li><code>100@@</code> → repeat it 100 times.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>:[range]s/&lt;pattern&gt;/&lt;replace&gt;/{flags}</code> : replace text</p>\n<ul>\n<li>TODO</li>\n<li><code>[range]</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h2><h3 id=\"Explanations-of-Important-Keywords\"><a href=\"#Explanations-of-Important-Keywords\" class=\"headerlink\" title=\"Explanations of Important Keywords\"></a>Explanations of Important Keywords</h3><ul>\n<li><p><code>&lt;Leader&gt;</code>: default is <code>\\</code>, you can change it by using <code>let mapleader = &#39;,&#39;</code> in <code>.vimrc</code> file.</p>\n</li>\n<li><p><code>&lt;CR&gt;</code>: equals <code>&lt;Return&gt;</code>    &amp; <code>&lt;Enter&gt;</code></p>\n</li>\n<li><p><code>&lt;S-...&gt;</code>    : shift-key</p>\n</li>\n<li><p><code>&lt;C-...&gt;</code>: control-key</p>\n</li>\n<li><p><code>&lt;M-...&gt;</code> &amp; <code>&lt;A-...&gt;</code>: alt-key</p>\n</li>\n<li><p><code>&lt;D-...&gt;</code>: command-key (Mac only)</p>\n</li>\n<li><p><code>g:</code>: means globally. Example:</p>\n<ul>\n<li><code>let g:last_active_tab = 1</code> toggle switch between current tab and the last one globally.</li>\n</ul>\n</li>\n<li><p><code>remap</code>: Allows for mappings to work recursively.</p>\n</li>\n<li><p><code>noremap</code>: Only a single entry. Can NOT be remapped.</p>\n</li>\n<li><p><code>n</code> &amp; <code>v</code> &amp; <code>s</code> &amp; <code>i</code>: prefixes, <code>n</code> stands for Normal mode, <code>v</code> stands for Visual mode, <code>s</code> stands for Select Mode, <code>i</code> stands for Insert Mode. Example:</p>\n<ul>\n<li><code>nnoremap &lt;C-t&gt; :tabnew&lt;CR&gt;</code>: remap <code>Ctrl + t</code> to create a new tab</li>\n<li><code>inoremap &lt;C-t&gt; &lt;Esc&gt;:tabnew&lt;CR&gt;</code>: same as last one, with an escape action additionally.</li>\n</ul>\n</li>\n<li><p><code>&lt;Plug&gt;</code>: in <code>.vimrc</code> file, it has two meanings. First, it’s visible out of the plugin scripts. And the second, use structure <code>&lt;Plug&gt; scriptname mapname</code> to avoid confliction with other plugins. For example: <code>&lt;Plug&gt;TypecorrAdd</code>, <code>Typecorr</code> is the script name, and <code>Add</code> is the function name.</p>\n</li>\n<li><p><code>&lt;SID&gt;</code>: is the script ID and not visible outside. Compare with <code>&lt;Plug&gt;</code>, it’s more like <code>private</code> function to other scrips. So can’t use it out of the script. Example:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">\" ,en ,ep to jump between errors</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>! &lt;<span class=\"title\">SID</span>&gt;<span class=\"title\">LocationPrevious</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">try</span></span><br><span class=\"line\">      lprev</span><br><span class=\"line\">  <span class=\"keyword\">catch</span> /^Vim\\%((\\<span class=\"keyword\">a</span>\\+)\\)\\=:E553/</span><br><span class=\"line\">      <span class=\"keyword\">llast</span></span><br><span class=\"line\">  <span class=\"keyword\">endtry</span></span><br><span class=\"line\"><span class=\"keyword\">endfunction</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>! &lt;<span class=\"title\">SID</span>&gt;<span class=\"title\">LocationNext</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">lnext</span></span><br><span class=\"line\">  <span class=\"keyword\">catch</span> /^Vim\\%((\\<span class=\"keyword\">a</span>\\+)\\)\\=:E553/</span><br><span class=\"line\">      <span class=\"keyword\">lfirst</span></span><br><span class=\"line\">  <span class=\"keyword\">endtry</span></span><br><span class=\"line\"><span class=\"keyword\">endfunction</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Plug&gt;</span>LocationPrevious :<span class=\"symbol\">&lt;C-u&gt;</span><span class=\"keyword\">exe</span> <span class=\"string\">'call &lt;SID&gt;LocationPrevious()'</span><span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Plug&gt;</span>LocationNext :<span class=\"symbol\">&lt;C-u&gt;</span><span class=\"keyword\">exe</span> <span class=\"string\">'call &lt;SID&gt;LocationNext()'</span><span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Leader&gt;</span>ep <span class=\"symbol\">&lt;Plug&gt;</span>LocationPrevious</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;silent&gt;</span> <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">en</span> <span class=\"symbol\">&lt;Plug&gt;</span>LocationNext</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>&lt;silence&gt;</code>:  to make a key mapping can`t be echoed on the command line</p>\n</li>\n<li><p><code>&lt;expr&gt;</code> take the argument as expression. For example: <code>inoremap &lt;expr&gt; &lt;C-L&gt; ListItem()</code>, ListItem is a function which is mapped with <code>Ctrl + L</code>.</p>\n</li>\n</ul>\n<h3 id=\"unblevable-quick-scope\"><a href=\"#unblevable-quick-scope\" class=\"headerlink\" title=\"unblevable/quick-scope\"></a>unblevable/quick-scope</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/unblevable/quick-scope\" target=\"_blank\" rel=\"noopener\">unblevable/quick-scope</a></p>\n</li>\n<li><p>Useage: highlights which characters to target for <code>f</code>, <code>F</code> and family.</p>\n</li>\n<li><p>Key Mapping:</p>\n<pre><code>let g:qs_highlight_on_keys = [&apos;f&apos;, &apos;F&apos;, &apos;t&apos;, &apos;T&apos;] //</code></pre></li>\n</ul>\n<h3 id=\"ntpeters-vim-better-whitespace\"><a href=\"#ntpeters-vim-better-whitespace\" class=\"headerlink\" title=\"ntpeters/vim-better-whitespace\"></a>ntpeters/vim-better-whitespace</h3><ul>\n<li><p>Github Repo: <a href=\"ntpeters/vim-better-whitespace\">ntpeters/vim-better-whitespace</a></p>\n</li>\n<li><p>Useage: clean extra whitespace.</p>\n</li>\n<li><p>Key Mapping:</p>\n<pre><code>nnoremap &lt;silent&gt; &lt;Leader&gt;&lt;Space&gt; :StripWhitespace&lt;CR&gt;\nautocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre &lt;buffer&gt; StripWhitespace\nlet g:better_whitespace_filetypes_blacklist=[&apos;diff&apos;, &apos;gitcommit&apos;, &apos;unite&apos;, &apos;qf&apos;, &apos;help&apos;]</code></pre></li>\n</ul>\n<h3 id=\"Vim-CtrlSpace\"><a href=\"#Vim-CtrlSpace\" class=\"headerlink\" title=\"Vim-CtrlSpace\"></a>Vim-CtrlSpace</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/vim-ctrlspace/vim-ctrlspace\" target=\"_blank\" rel=\"noopener\">vim-ctrlspace/vim-ctrlspace</a></p>\n</li>\n<li><p>Useage:</p>\n<ul>\n<li>bookmarks for your favorite projects</li>\n<li>workspaces (sessions)</li>\n<li>tabs / buffers / files management</li>\n<li>fast fuzzy searching powered by Go</li>\n</ul>\n</li>\n<li><p>Shortkeys:</p>\n<ul>\n<li><code>Ctrl + Space</code> : open ctrl space command line</li>\n<li><code>b</code> : bookmark list</li>\n<li><code>w</code> : workspace list in current bookmark</li>\n<li><code>l</code> : tab list in current workspace</li>\n<li><code>o</code> : file list in current workspace</li>\n<li><code>h</code> : buffer list in current workspace, this is default list when you hit ctrl + space</li>\n<li><code>/</code> : Into Search Mode, type it again will close search mode. Aka,  <code>B</code>, <code>W</code>, <code>L</code>, <code>O</code>, <code>H</code> with uppercase will open the same list with Search Mode</li>\n<li><code>i</code> : switch directory (when you on the buffer list)</li>\n<li><code>a</code> : all the files are opend in current workspace</li>\n<li><code>s</code> : save current workspace/bookmark, then <code>&lt;CR&gt;</code> to confirm</li>\n<li><code>d</code> : delete a file from current buffer or file list</li>\n<li><code>j</code>,<code>k</code> : switch items, then <code>&lt;CR&gt;</code> to confirm</li>\n<li><code>m</code> : rename bookmark or workspace(when you on the workspace list or bookmark list)</li>\n</ul>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">has</span>(<span class=\"string\">\"gui_running\"</span>)</span><br><span class=\"line\"><span class=\"comment\">\" Settings for MacVim and Inconsolata font</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSymbols</span> = &#123; <span class=\"string\">\"File\"</span>: <span class=\"string\">\"◯\"</span>, <span class=\"string\">\"CTab\"</span>: <span class=\"string\">\"▣\"</span>, <span class=\"string\">\"Tabs\"</span>: <span class=\"string\">\"▢\"</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">executable</span>(<span class=\"string\">\"ag\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceGlobCommand</span> = <span class=\"string\">'ag -l --nocolor -g \"\"'</span></span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSearchTiming</span> = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceNormal   PMenu</span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceSelected PMenuSel</span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceSearch   Search</span><br><span class=\"line\"><span class=\"keyword\">hi</span> link CtrlSpaceStatus   StatusLine</span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span><span class=\"symbol\">&lt;C-p&gt;</span> :CtrlSpace O<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceLoadLastWorkspaceOnStart</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSaveWorkspaceOnSwitch</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:CtrlSpaceSaveWorkspaceOnExit</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"scrooloose-nerdtree-amp-jistr-vim-nerdtree-tabs\"><a href=\"#scrooloose-nerdtree-amp-jistr-vim-nerdtree-tabs\" class=\"headerlink\" title=\"scrooloose/nerdtree &amp; jistr/vim-nerdtree-tabs\"></a>scrooloose/nerdtree &amp; jistr/vim-nerdtree-tabs</h3><ul>\n<li><p>TODO</p>\n</li>\n<li><p>Github Repo: <a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener\">scrooloose/nerdtree</a> &amp; <a href=\"https://github.com/jistr/vim-nerdtree-tabs\" target=\"_blank\" rel=\"noopener\">jistr/vim-nerdtree-tabs</a></p>\n</li>\n<li><p>Useage: to explore filesystem and to open files and directories.</p>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">\" nerdtree</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;C-n&gt;</span> :NERDTreeToggle<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeHighlightCursorline=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeIgnore=[ <span class=\"string\">'\\.pyc$'</span>, <span class=\"string\">'\\.pyo$'</span>, <span class=\"string\">'\\.obj$'</span>, <span class=\"string\">'\\.o$'</span>, <span class=\"string\">'\\.so$'</span>, <span class=\"string\">'\\.egg$'</span>, <span class=\"string\">'^\\.git$'</span>, <span class=\"string\">'^\\.svn$'</span>, <span class=\"string\">'^\\.hg$'</span> ]</span><br><span class=\"line\"><span class=\"comment\">\"close vim if the only window left open is a NERDTree</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> bufenter * <span class=\"keyword\">if</span> (<span class=\"built_in\">winnr</span>(<span class=\"string\">\"$\"</span>) == <span class=\"number\">1</span> &amp;&amp; <span class=\"built_in\">exists</span>(<span class=\"string\">\"b:NERDTreeType\"</span>) &amp;&amp; <span class=\"variable\">b:NERDTreeType</span> == <span class=\"string\">\"primary\"</span>) | q | end</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenSplit</span> = <span class=\"string\">'s'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenVSplit</span> = <span class=\"string\">'v'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeWinSize</span>=<span class=\"number\">26</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" nerdtreetabs</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;C-n&gt;</span> <span class=\"symbol\">&lt;plug&gt;</span>NERDTreeTabsToggle<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_synchronize_view</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_synchronize_focus</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_open_on_console_startup</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:nerdtree_tabs_open_on_gui_startup</span>=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"syntastic\"><a href=\"#syntastic\" class=\"headerlink\" title=\"syntastic\"></a>syntastic</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/vim-syntastic/syntastic#introduction\" target=\"_blank\" rel=\"noopener\">vim-syntastic/syntastic</a></p>\n</li>\n<li><p>Useage: a syntax checking plugin</p>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">execute</span> pathogen#infect()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_error_symbol</span>=<span class=\"string\">'&gt;&gt;'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_warning_symbol</span>=<span class=\"string\">'&gt;'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_check_on_open</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_check_on_wq</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_enable_highlighting</span>=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" checkers</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_php_checkers</span> = [<span class=\"string\">'php'</span>, <span class=\"string\">'phpcs'</span>, <span class=\"string\">'phpmd'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_python_checkers</span>=[<span class=\"string\">'pyflakes'</span>, <span class=\"string\">'pep8'</span>] <span class=\"comment\">\" 使用pyflakes,速度比pylint快</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_python_pep8_args</span>=<span class=\"string\">'--ignore=E501,E225,E124,E712'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_javascript_checkers</span> = [<span class=\"string\">'jsl'</span>, <span class=\"string\">'jshint'</span>]</span><br><span class=\"line\"><span class=\"comment\">\" let g:syntastic_markdown_checkers = ['proselint']</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_html_checkers</span>=[<span class=\"string\">'tidy'</span>, <span class=\"string\">'jshint'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span> statusline+=%#warningmsg#</span><br><span class=\"line\"><span class=\"keyword\">set</span> statusline+=%&#123;SyntasticStatuslineFlag()&#125;</span><br><span class=\"line\"><span class=\"keyword\">set</span> statusline+=%*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" to see error location list</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_always_populate_loc_list</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_enable_signs</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_auto_loc_list</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:syntastic_auto_jump</span> = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">highlight</span> SyntasticErrorSign guifg=white guibg=black</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"YouCompleteMe\"><a href=\"#YouCompleteMe\" class=\"headerlink\" title=\"YouCompleteMe\"></a>YouCompleteMe</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">Valloric/YouCompleteMe</a></p>\n</li>\n<li><p>Useage: code completion</p>\n</li>\n<li><p>Key Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_key_list_select_completion</span>=[<span class=\"string\">'&lt;C-j&gt;'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_key_list_previous_completion</span>=[<span class=\"string\">'&lt;C-k&gt;'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_complete_in_comments</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_complete_in_strings</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_use_ultisnips_completer</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_collect_identifiers_from_comments_and_strings</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_collect_identifiers_from_tags_files</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_seed_identifiers_with_syntax</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_goto_buffer_command</span> = <span class=\"string\">'horizontal-split'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;leader&gt;</span>jd :YcmCompleter GoToDefinitionElseDeclaration<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;leader&gt;</span>gd :YcmCompleter GoToDeclaration<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> !empty(<span class=\"built_in\">glob</span>(<span class=\"string\">\"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"</span>))</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_global_ycm_extra_conf</span> = <span class=\"string\">\"~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py\"</span></span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"vim-easymotion\"><a href=\"#vim-easymotion\" class=\"headerlink\" title=\"vim-easymotion\"></a>vim-easymotion</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/easymotion/vim-easymotion\" target=\"_blank\" rel=\"noopener\">easymotion/vim-easymotion</a></p>\n</li>\n<li><p>Usage: Provides a much simpler way to use some motions in vim.</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:EasyMotion_smartcase</span> = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" &lt;Leader&gt;f&#123;char&#125; to move to &#123;char&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">map</span>  <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">f</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-<span class=\"keyword\">bd</span>-<span class=\"keyword\">f</span>)</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">f</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-overwin-<span class=\"keyword\">f</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" s&#123;char&#125;&#123;char&#125; to move to &#123;char&#125;&#123;char&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">nmap</span> s <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-overwin-f2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">\" Move to line</span></span><br><span class=\"line\"><span class=\"keyword\">map</span>  <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">l</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-<span class=\"keyword\">bd</span>-jk)</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> <span class=\"symbol\">&lt;Leader&gt;</span><span class=\"symbol\">&lt;Leader&gt;</span><span class=\"keyword\">l</span> <span class=\"symbol\">&lt;Plug&gt;</span>(easymotion-overwin-<span class=\"built_in\">line</span>)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"easyalign\"><a href=\"#easyalign\" class=\"headerlink\" title=\"easyalign\"></a>easyalign</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/junegunn/vim-easy-align\" target=\"_blank\" rel=\"noopener\">junegunn/vim-easy-align</a></p>\n</li>\n<li><p>Usage: alignment</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">vmap</span> ga <span class=\"symbol\">&lt;Plug&gt;</span>(EasyAlign)</span><br><span class=\"line\"><span class=\"keyword\">nmap</span> ga <span class=\"symbol\">&lt;Plug&gt;</span>(EasyAlign)</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:easy_align_ignore_groups</span> = [<span class=\"string\">'Comment'</span>, <span class=\"string\">'String'</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:easy_align_delimiters</span> = &#123;</span><br><span class=\"line\">   \\ <span class=\"string\">'&gt;'</span>: &#123; <span class=\"string\">'pattern'</span>: <span class=\"string\">'&gt;&gt;\\|=&gt;\\|&gt;'</span> &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">'/'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:         <span class=\"string\">'//\\+\\|/\\*\\|\\*/'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'delimiter_align'</span>: <span class=\"string\">'l'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'ignore_groups'</span>:   [<span class=\"string\">'!Comment'</span>] &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">']'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:       <span class=\"string\">'[[\\]]'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'left_margin'</span>:   <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'right_margin'</span>:  <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'stick_to_left'</span>: <span class=\"number\">0</span></span><br><span class=\"line\">   \\   &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">')'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:       <span class=\"string\">'[()]'</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'left_margin'</span>:   <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'right_margin'</span>:  <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'stick_to_left'</span>: <span class=\"number\">0</span></span><br><span class=\"line\">   \\   &#125;,</span><br><span class=\"line\">   \\ <span class=\"string\">'d'</span>: &#123;</span><br><span class=\"line\">   \\     <span class=\"string\">'pattern'</span>:      <span class=\"string\">' \\(\\S\\+\\s*[;=]\\)\\@='</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'left_margin'</span>:  <span class=\"number\">0</span>,</span><br><span class=\"line\">   \\     <span class=\"string\">'right_margin'</span>: <span class=\"number\">0</span></span><br><span class=\"line\">   \\   &#125;</span><br><span class=\"line\">   \\ &#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"NerdTree\"><a href=\"#NerdTree\" class=\"headerlink\" title=\"NerdTree\"></a>NerdTree</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener\">scrooloose/nerdtree</a></p>\n</li>\n<li><p>Usage: to explore your filesystem and to open files and directories.</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;leader&gt;</span>n :NERDTreeToggle<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeShowBookmarks=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeHighlightCursorline=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> NERDTreeIgnore=[ <span class=\"string\">'\\.pyc$'</span>, <span class=\"string\">'\\.pyo$'</span>, <span class=\"string\">'\\.obj$'</span>, <span class=\"string\">'\\.o$'</span>, <span class=\"string\">'\\.so$'</span>, <span class=\"string\">'\\.egg$'</span>, <span class=\"string\">'^\\.git$'</span>, <span class=\"string\">'^\\.svn$'</span>, <span class=\"string\">'^\\.hg$'</span> ]</span><br><span class=\"line\"><span class=\"comment\">\"close vim if the only window left open is a NERDTree</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> bufenter * <span class=\"keyword\">if</span> (<span class=\"built_in\">winnr</span>(<span class=\"string\">\"$\"</span>) == <span class=\"number\">1</span> &amp;&amp; <span class=\"built_in\">exists</span>(<span class=\"string\">\"b:NERDTreeType\"</span>) &amp;&amp; <span class=\"variable\">b:NERDTreeType</span> == <span class=\"string\">\"primary\"</span>) | q | end</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenSplit</span> = <span class=\"string\">'s'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeMapOpenVSplit</span> = <span class=\"string\">'v'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDTreeWinSize</span>=<span class=\"number\">26</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"NERDCommenter\"><a href=\"#NERDCommenter\" class=\"headerlink\" title=\"NERDCommenter\"></a>NERDCommenter</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/scrooloose/nerdcommenter\" target=\"_blank\" rel=\"noopener\">scrooloose/nerdcommenter</a></p>\n</li>\n<li><p>Usage: to wrangle your code comments.</p>\n</li>\n<li><p>Shortkeys:</p>\n<ul>\n<li><code>[count]&lt;leader&gt;cc</code> : Comment out the current line or text selected in visual mode.</li>\n<li><code>[count]&lt;leader&gt;c&lt;space&gt;</code> : Toggles the comment state of the selected line(s). If the topmost selected line is commented, all selected lines are uncommented and vice versa.</li>\n<li><code>[count]&lt;leader&gt;cs</code> : Comments out the selected lines with a pretty block formatted layout.</li>\n<li><code>[count]&lt;leader&gt;ci</code> : Toggles the comment state of the selected line(s) individually.</li>\n</ul>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">\" Add spaces after comment delimiters by default</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDSpaceDelims</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">\" Use compact syntax for prettified multi-line comments</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDCompactSexyComs</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">\" Align line-wise comment delimiters flush left instead of following code indentation</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDDefaultAlign</span> = <span class=\"string\">'left'</span></span><br><span class=\"line\"><span class=\"comment\">\" Allow commenting and inverting empty lines (useful when commenting a region)</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:NERDCommentEmptyLines</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"Airline\"><a href=\"#Airline\" class=\"headerlink\" title=\"Airline\"></a>Airline</h3><ul>\n<li><p>Github Repo: <a href=\"https://github.com/vim-airline/vim-airline\" target=\"_blank\" rel=\"noopener\">vim-airline/vim-airline</a></p>\n</li>\n<li><p>Usage: rich statusbar.</p>\n</li>\n<li><p>Keys Mapping:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> !exists(<span class=\"string\">'g:airline_symbols'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">g:airline_symbols</span> = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">endif</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_mode_map</span> = &#123;</span><br><span class=\"line\">    \\ <span class=\"string\">'__'</span> : <span class=\"string\">'-'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'n'</span>  : <span class=\"string\">'N'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'i'</span>  : <span class=\"string\">'I'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'R'</span>  : <span class=\"string\">'R'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'c'</span>  : <span class=\"string\">'C'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'v'</span>  : <span class=\"string\">'V'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'V'</span>  : <span class=\"string\">'V'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'\u0016'</span> : <span class=\"string\">'V'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'s'</span>  : <span class=\"string\">'S'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'S'</span>  : <span class=\"string\">'S'</span>,</span><br><span class=\"line\">    \\ <span class=\"string\">'\u0013'</span> : <span class=\"string\">'S'</span>,</span><br><span class=\"line\">    \\ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_left_sep</span> = <span class=\"string\">'❯'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_right_sep</span> = <span class=\"string\">'❮'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_symbols</span>.linenr = <span class=\"string\">'¶'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:airline_symbols</span>.branch = <span class=\"string\">'⎇'</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<!---\n### a\n* Github Repo: [b](c)\n* Useage: d\n* Key Mapping:\n\n        e\n-->\n\n"},{"layout":"post","title":"排列组合算法[Python]","date":"2017-03-11T05:00:00.000Z","description":"最新学到的排列组合算法","keywords":"排列组合, Python, 算法, powerset, Algorithms","_content":"\n# 两种排列组合算法\n\n* 一个是在Edx课上看到的，一个是Python的源码\n\n## 通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\n\n* 首先确定组合的数量是2的N次方个，然后循环2^N， 每个数字即代表一种可能。\n    * 比如数组长度是5的情况下，我们一共有2^5种可能，第 1 种可能 对应的二进制为 `0 0 0 0 1`，第 5 种 对应的是 `0 1 0 0 1`.\n* 其次既是如何把对应位置的二进制转化成对应数组的索引位置，比如上例中 第 5 种可能 即为 5 转换的二进制：`0 1 0 0 1`，那么它对应的数据应该是数组种的 第二位和最后一位\n    * 算法中，通过 `(i >> j) % 2 == 1` 来确定 当前二进制位是否为 1，在此就不赘述了。\n\n```python\ndef powerSet(items):\n    N = len(items)\n    # enumerate the 2**N possible combinations\n    for i in range(2**N):\n        combo = []\n        for j in range(N):\n            # test bit jth of integer i\n            # test bit jth of integer i\n            # >>j. move the bit we want to check to the end\n            # %2. remove all the other bits execpt the last one\n            # check the one we kept if it is 1 not 0,\n            # which means we want to keep the item which on the position\n            # example:  0 1 1 0 1\n            # we want to check the third \"1\"\n            # first move the second bit to the end(>>j), will be \"0 0 0 1 1\"\n            # then remove all the other bits(%2), we got \"0 0 0 0 1\"\n            # compare it with 1, which is true, \n            # so we take the item with the position, which will be item[2]\n            if (i >> j) % 2 == 1:\n                combo.append(items[j])\n        yield combo\n```\n\n## 使用python官方文档提供的`combinations`:\n\n* 为了更好的理解这个算法，我把它单独拿了出来，并没有导入\n* 同上一个算法，这个也是遍历找得所有的索引，然后取出数组中对应的数据\n* 之前很努力的写了英文 不想翻译了，勉强看啦\n\n```python\nfrom itertools import chain\n\ndef powerset_generator(sets):\n    for subset in chain.from_iterable(combinations(sets, r) for r in range(len(sets)+1)):\n        yield subset\n        \n# the logic of this function is \n#   set a new array with length r\n#   loop the last element's index from i to i+n-r(n is the length of pool, r is the length of subsequence). \n#   when hit the maximum which should be n-1, increase the last-1 element's index.\n#   loop until the first element's index hit the maximum, \n#   then increase the previous index, and set the last index to previous index + 1, \n#   then back to the loop until all of the indices hit the maximum\n# For example: iterable = [1,2,3,4,5], r = 3\n#   (1, 2, 3)\n#   (1, 2, 4)\n#   (1, 2, 5) <-- the last index hit the maximum\n#   (1, 3, 4) <-- increase the previous index, and set every one after to previous index + 1,\n#   (1, 3, 5) \n#   (1, 4, 5) <-- the (last-1) index hit the maximum\n#   (2, 3, 4)\n#   (2, 3, 5)\n#   (2, 4, 5)\n#   (3, 4, 5) <-- the (last-2) index hit the maximum\ndef combinations(iterable, r):\n    \n    pool = tuple(iterable)\n    \n    n = len(pool)\n    \n    if r > n:\n        return\n    indices = list(range(r))\n \n    # In the \"while\" circle, we will start to change the indices by adding 1 consistently.\n    # So yield the first permutation before the while start.\n    yield tuple(pool[x] for x in indices)\n    \n    while True:\n    \n        # This 'for' loop is checking whether the index has hit the maximum from the last one to the first one.\n        # if it indices[i] >= its maximum, \n        #   set i = i-1, check the previous one\n        # if all of the indices has hit the maximum, \n        #   stop the `while` loop\n        for i in reversed(range(r)):\n            \n            # let's take an example to explain why using i + n - r\n            # pool indices: [0,1,2,3,4]\n            # subsequence indices: [0,1,2]\n            # so\n            #   indices[2] can be one of [2,3,4],\n            #   indices[1] can be one of [1,2,3],\n            #   indices[0] can be one of [0,1,2],\n            # and the gap of every index is n-r, like here is 5-3=2\n            # then\n            #   indices[2] < 2+2 = i+2 = i+n-r,\n            #   indices[1] < 1+2 = i+2 = i+n-r,\n            #   indices[0] < 0+2 = i+2 = i+n-r,\n            if indices[i] < i + n - r:\n                break\n        else:\n            # loop finished, return\n            return\n        \n        # Add one for current indices[i], \n        # (we already yield the first permutation before the loop)\n        indices[i] += 1\n        # this for loop increases every indices which is after indices[i].\n        # cause, current index has increased, and we need to confirm every one behind is initialized again.\n        # For example: current we got i = 2, indices[i]+1 will be 3, \n        # so the next loop should start with [1, 3, 4], not [1, 3, 3]\n        for j in range(i+1, r):\n            indices[j] = indices[j-1] + 1\n            \n        yield tuple(pool[x] for x in indices)  \n```\n\n## 源地址\n\n* [https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html](https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html)\n\n## 参考\n\n* [按位操作符（Bitwise operators）from MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators)\n\n","source":"_posts/2017-03-11-powerset-algorithms.md","raw":"---\nlayout: post\ntitle: 排列组合算法[Python]\ncategory: 编程学习\ntags: [算法, 排列组合]\ndate: 2017-03-11\ndescription: 最新学到的排列组合算法\nkeywords: 排列组合, Python, 算法, powerset, Algorithms\n---\n\n# 两种排列组合算法\n\n* 一个是在Edx课上看到的，一个是Python的源码\n\n## 通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\n\n* 首先确定组合的数量是2的N次方个，然后循环2^N， 每个数字即代表一种可能。\n    * 比如数组长度是5的情况下，我们一共有2^5种可能，第 1 种可能 对应的二进制为 `0 0 0 0 1`，第 5 种 对应的是 `0 1 0 0 1`.\n* 其次既是如何把对应位置的二进制转化成对应数组的索引位置，比如上例中 第 5 种可能 即为 5 转换的二进制：`0 1 0 0 1`，那么它对应的数据应该是数组种的 第二位和最后一位\n    * 算法中，通过 `(i >> j) % 2 == 1` 来确定 当前二进制位是否为 1，在此就不赘述了。\n\n```python\ndef powerSet(items):\n    N = len(items)\n    # enumerate the 2**N possible combinations\n    for i in range(2**N):\n        combo = []\n        for j in range(N):\n            # test bit jth of integer i\n            # test bit jth of integer i\n            # >>j. move the bit we want to check to the end\n            # %2. remove all the other bits execpt the last one\n            # check the one we kept if it is 1 not 0,\n            # which means we want to keep the item which on the position\n            # example:  0 1 1 0 1\n            # we want to check the third \"1\"\n            # first move the second bit to the end(>>j), will be \"0 0 0 1 1\"\n            # then remove all the other bits(%2), we got \"0 0 0 0 1\"\n            # compare it with 1, which is true, \n            # so we take the item with the position, which will be item[2]\n            if (i >> j) % 2 == 1:\n                combo.append(items[j])\n        yield combo\n```\n\n## 使用python官方文档提供的`combinations`:\n\n* 为了更好的理解这个算法，我把它单独拿了出来，并没有导入\n* 同上一个算法，这个也是遍历找得所有的索引，然后取出数组中对应的数据\n* 之前很努力的写了英文 不想翻译了，勉强看啦\n\n```python\nfrom itertools import chain\n\ndef powerset_generator(sets):\n    for subset in chain.from_iterable(combinations(sets, r) for r in range(len(sets)+1)):\n        yield subset\n        \n# the logic of this function is \n#   set a new array with length r\n#   loop the last element's index from i to i+n-r(n is the length of pool, r is the length of subsequence). \n#   when hit the maximum which should be n-1, increase the last-1 element's index.\n#   loop until the first element's index hit the maximum, \n#   then increase the previous index, and set the last index to previous index + 1, \n#   then back to the loop until all of the indices hit the maximum\n# For example: iterable = [1,2,3,4,5], r = 3\n#   (1, 2, 3)\n#   (1, 2, 4)\n#   (1, 2, 5) <-- the last index hit the maximum\n#   (1, 3, 4) <-- increase the previous index, and set every one after to previous index + 1,\n#   (1, 3, 5) \n#   (1, 4, 5) <-- the (last-1) index hit the maximum\n#   (2, 3, 4)\n#   (2, 3, 5)\n#   (2, 4, 5)\n#   (3, 4, 5) <-- the (last-2) index hit the maximum\ndef combinations(iterable, r):\n    \n    pool = tuple(iterable)\n    \n    n = len(pool)\n    \n    if r > n:\n        return\n    indices = list(range(r))\n \n    # In the \"while\" circle, we will start to change the indices by adding 1 consistently.\n    # So yield the first permutation before the while start.\n    yield tuple(pool[x] for x in indices)\n    \n    while True:\n    \n        # This 'for' loop is checking whether the index has hit the maximum from the last one to the first one.\n        # if it indices[i] >= its maximum, \n        #   set i = i-1, check the previous one\n        # if all of the indices has hit the maximum, \n        #   stop the `while` loop\n        for i in reversed(range(r)):\n            \n            # let's take an example to explain why using i + n - r\n            # pool indices: [0,1,2,3,4]\n            # subsequence indices: [0,1,2]\n            # so\n            #   indices[2] can be one of [2,3,4],\n            #   indices[1] can be one of [1,2,3],\n            #   indices[0] can be one of [0,1,2],\n            # and the gap of every index is n-r, like here is 5-3=2\n            # then\n            #   indices[2] < 2+2 = i+2 = i+n-r,\n            #   indices[1] < 1+2 = i+2 = i+n-r,\n            #   indices[0] < 0+2 = i+2 = i+n-r,\n            if indices[i] < i + n - r:\n                break\n        else:\n            # loop finished, return\n            return\n        \n        # Add one for current indices[i], \n        # (we already yield the first permutation before the loop)\n        indices[i] += 1\n        # this for loop increases every indices which is after indices[i].\n        # cause, current index has increased, and we need to confirm every one behind is initialized again.\n        # For example: current we got i = 2, indices[i]+1 will be 3, \n        # so the next loop should start with [1, 3, 4], not [1, 3, 3]\n        for j in range(i+1, r):\n            indices[j] = indices[j-1] + 1\n            \n        yield tuple(pool[x] for x in indices)  \n```\n\n## 源地址\n\n* [https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html](https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html)\n\n## 参考\n\n* [按位操作符（Bitwise operators）from MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators)\n\n","slug":"2017-03-11-powerset-algorithms","published":1,"updated":"2020-04-19T02:55:44.179Z","_id":"ck96ffjb3002crmp90fkx5z5e","comments":1,"photos":[],"link":"","content":"<h1 id=\"两种排列组合算法\"><a href=\"#两种排列组合算法\" class=\"headerlink\" title=\"两种排列组合算法\"></a>两种排列组合算法</h1><ul>\n<li>一个是在Edx课上看到的，一个是Python的源码</li>\n</ul>\n<h2 id=\"通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\"><a href=\"#通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\" class=\"headerlink\" title=\"通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\"></a>通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合</h2><ul>\n<li>首先确定组合的数量是2的N次方个，然后循环2^N， 每个数字即代表一种可能。<ul>\n<li>比如数组长度是5的情况下，我们一共有2^5种可能，第 1 种可能 对应的二进制为 <code>0 0 0 0 1</code>，第 5 种 对应的是 <code>0 1 0 0 1</code>.</li>\n</ul>\n</li>\n<li>其次既是如何把对应位置的二进制转化成对应数组的索引位置，比如上例中 第 5 种可能 即为 5 转换的二进制：<code>0 1 0 0 1</code>，那么它对应的数据应该是数组种的 第二位和最后一位<ul>\n<li>算法中，通过 <code>(i &gt;&gt; j) % 2 == 1</code> 来确定 当前二进制位是否为 1，在此就不赘述了。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">powerSet</span><span class=\"params\">(items)</span>:</span></span><br><span class=\"line\">    N = len(items)</span><br><span class=\"line\">    <span class=\"comment\"># enumerate the 2**N possible combinations</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>**N):</span><br><span class=\"line\">        combo = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(N):</span><br><span class=\"line\">            <span class=\"comment\"># test bit jth of integer i</span></span><br><span class=\"line\">            <span class=\"comment\"># test bit jth of integer i</span></span><br><span class=\"line\">            <span class=\"comment\"># &gt;&gt;j. move the bit we want to check to the end</span></span><br><span class=\"line\">            <span class=\"comment\"># %2. remove all the other bits execpt the last one</span></span><br><span class=\"line\">            <span class=\"comment\"># check the one we kept if it is 1 not 0,</span></span><br><span class=\"line\">            <span class=\"comment\"># which means we want to keep the item which on the position</span></span><br><span class=\"line\">            <span class=\"comment\"># example:  0 1 1 0 1</span></span><br><span class=\"line\">            <span class=\"comment\"># we want to check the third \"1\"</span></span><br><span class=\"line\">            <span class=\"comment\"># first move the second bit to the end(&gt;&gt;j), will be \"0 0 0 1 1\"</span></span><br><span class=\"line\">            <span class=\"comment\"># then remove all the other bits(%2), we got \"0 0 0 0 1\"</span></span><br><span class=\"line\">            <span class=\"comment\"># compare it with 1, which is true, </span></span><br><span class=\"line\">            <span class=\"comment\"># so we take the item with the position, which will be item[2]</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt;&gt; j) % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">                combo.append(items[j])</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> combo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用python官方文档提供的combinations\"><a href=\"#使用python官方文档提供的combinations\" class=\"headerlink\" title=\"使用python官方文档提供的combinations:\"></a>使用python官方文档提供的<code>combinations</code>:</h2><ul>\n<li>为了更好的理解这个算法，我把它单独拿了出来，并没有导入</li>\n<li>同上一个算法，这个也是遍历找得所有的索引，然后取出数组中对应的数据</li>\n<li>之前很努力的写了英文 不想翻译了，勉强看啦</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> itertools <span class=\"keyword\">import</span> chain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">powerset_generator</span><span class=\"params\">(sets)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> subset <span class=\"keyword\">in</span> chain.from_iterable(combinations(sets, r) <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> range(len(sets)+<span class=\"number\">1</span>)):</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> subset</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\"># the logic of this function is </span></span><br><span class=\"line\"><span class=\"comment\">#   set a new array with length r</span></span><br><span class=\"line\"><span class=\"comment\">#   loop the last element's index from i to i+n-r(n is the length of pool, r is the length of subsequence). </span></span><br><span class=\"line\"><span class=\"comment\">#   when hit the maximum which should be n-1, increase the last-1 element's index.</span></span><br><span class=\"line\"><span class=\"comment\">#   loop until the first element's index hit the maximum, </span></span><br><span class=\"line\"><span class=\"comment\">#   then increase the previous index, and set the last index to previous index + 1, </span></span><br><span class=\"line\"><span class=\"comment\">#   then back to the loop until all of the indices hit the maximum</span></span><br><span class=\"line\"><span class=\"comment\"># For example: iterable = [1,2,3,4,5], r = 3</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 2, 3)</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 2, 4)</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 2, 5) &lt;-- the last index hit the maximum</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 3, 4) &lt;-- increase the previous index, and set every one after to previous index + 1,</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 3, 5) </span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 4, 5) &lt;-- the (last-1) index hit the maximum</span></span><br><span class=\"line\"><span class=\"comment\">#   (2, 3, 4)</span></span><br><span class=\"line\"><span class=\"comment\">#   (2, 3, 5)</span></span><br><span class=\"line\"><span class=\"comment\">#   (2, 4, 5)</span></span><br><span class=\"line\"><span class=\"comment\">#   (3, 4, 5) &lt;-- the (last-2) index hit the maximum</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">combinations</span><span class=\"params\">(iterable, r)</span>:</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    pool = tuple(iterable)</span><br><span class=\"line\">    </span><br><span class=\"line\">    n = len(pool)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> r &gt; n:</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    indices = list(range(r))</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># In the \"while\" circle, we will start to change the indices by adding 1 consistently.</span></span><br><span class=\"line\">    <span class=\"comment\"># So yield the first permutation before the while start.</span></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> tuple(pool[x] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> indices)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\"># This 'for' loop is checking whether the index has hit the maximum from the last one to the first one.</span></span><br><span class=\"line\">        <span class=\"comment\"># if it indices[i] &gt;= its maximum, </span></span><br><span class=\"line\">        <span class=\"comment\">#   set i = i-1, check the previous one</span></span><br><span class=\"line\">        <span class=\"comment\"># if all of the indices has hit the maximum, </span></span><br><span class=\"line\">        <span class=\"comment\">#   stop the `while` loop</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> reversed(range(r)):</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># let's take an example to explain why using i + n - r</span></span><br><span class=\"line\">            <span class=\"comment\"># pool indices: [0,1,2,3,4]</span></span><br><span class=\"line\">            <span class=\"comment\"># subsequence indices: [0,1,2]</span></span><br><span class=\"line\">            <span class=\"comment\"># so</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[2] can be one of [2,3,4],</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[1] can be one of [1,2,3],</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[0] can be one of [0,1,2],</span></span><br><span class=\"line\">            <span class=\"comment\"># and the gap of every index is n-r, like here is 5-3=2</span></span><br><span class=\"line\">            <span class=\"comment\"># then</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[2] &lt; 2+2 = i+2 = i+n-r,</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[1] &lt; 1+2 = i+2 = i+n-r,</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[0] &lt; 0+2 = i+2 = i+n-r,</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> indices[i] &lt; i + n - r:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># loop finished, return</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Add one for current indices[i], </span></span><br><span class=\"line\">        <span class=\"comment\"># (we already yield the first permutation before the loop)</span></span><br><span class=\"line\">        indices[i] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># this for loop increases every indices which is after indices[i].</span></span><br><span class=\"line\">        <span class=\"comment\"># cause, current index has increased, and we need to confirm every one behind is initialized again.</span></span><br><span class=\"line\">        <span class=\"comment\"># For example: current we got i = 2, indices[i]+1 will be 3, </span></span><br><span class=\"line\">        <span class=\"comment\"># so the next loop should start with [1, 3, 4], not [1, 3, 3]</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+<span class=\"number\">1</span>, r):</span><br><span class=\"line\">            indices[j] = indices[j<span class=\"number\">-1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">yield</span> tuple(pool[x] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> indices)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"源地址\"><a href=\"#源地址\" class=\"headerlink\" title=\"源地址\"></a>源地址</h2><ul>\n<li><a href=\"https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html\" target=\"_blank\" rel=\"noopener\">https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html</a></li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\" target=\"_blank\" rel=\"noopener\">按位操作符（Bitwise operators）from MDN</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"两种排列组合算法\"><a href=\"#两种排列组合算法\" class=\"headerlink\" title=\"两种排列组合算法\"></a>两种排列组合算法</h1><ul>\n<li>一个是在Edx课上看到的，一个是Python的源码</li>\n</ul>\n<h2 id=\"通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\"><a href=\"#通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\" class=\"headerlink\" title=\"通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合\"></a>通过二进制中“1”所在位置的可能性来确定数组中的索引位置，进而求得所有排列组合</h2><ul>\n<li>首先确定组合的数量是2的N次方个，然后循环2^N， 每个数字即代表一种可能。<ul>\n<li>比如数组长度是5的情况下，我们一共有2^5种可能，第 1 种可能 对应的二进制为 <code>0 0 0 0 1</code>，第 5 种 对应的是 <code>0 1 0 0 1</code>.</li>\n</ul>\n</li>\n<li>其次既是如何把对应位置的二进制转化成对应数组的索引位置，比如上例中 第 5 种可能 即为 5 转换的二进制：<code>0 1 0 0 1</code>，那么它对应的数据应该是数组种的 第二位和最后一位<ul>\n<li>算法中，通过 <code>(i &gt;&gt; j) % 2 == 1</code> 来确定 当前二进制位是否为 1，在此就不赘述了。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">powerSet</span><span class=\"params\">(items)</span>:</span></span><br><span class=\"line\">    N = len(items)</span><br><span class=\"line\">    <span class=\"comment\"># enumerate the 2**N possible combinations</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>**N):</span><br><span class=\"line\">        combo = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(N):</span><br><span class=\"line\">            <span class=\"comment\"># test bit jth of integer i</span></span><br><span class=\"line\">            <span class=\"comment\"># test bit jth of integer i</span></span><br><span class=\"line\">            <span class=\"comment\"># &gt;&gt;j. move the bit we want to check to the end</span></span><br><span class=\"line\">            <span class=\"comment\"># %2. remove all the other bits execpt the last one</span></span><br><span class=\"line\">            <span class=\"comment\"># check the one we kept if it is 1 not 0,</span></span><br><span class=\"line\">            <span class=\"comment\"># which means we want to keep the item which on the position</span></span><br><span class=\"line\">            <span class=\"comment\"># example:  0 1 1 0 1</span></span><br><span class=\"line\">            <span class=\"comment\"># we want to check the third \"1\"</span></span><br><span class=\"line\">            <span class=\"comment\"># first move the second bit to the end(&gt;&gt;j), will be \"0 0 0 1 1\"</span></span><br><span class=\"line\">            <span class=\"comment\"># then remove all the other bits(%2), we got \"0 0 0 0 1\"</span></span><br><span class=\"line\">            <span class=\"comment\"># compare it with 1, which is true, </span></span><br><span class=\"line\">            <span class=\"comment\"># so we take the item with the position, which will be item[2]</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt;&gt; j) % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">                combo.append(items[j])</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> combo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用python官方文档提供的combinations\"><a href=\"#使用python官方文档提供的combinations\" class=\"headerlink\" title=\"使用python官方文档提供的combinations:\"></a>使用python官方文档提供的<code>combinations</code>:</h2><ul>\n<li>为了更好的理解这个算法，我把它单独拿了出来，并没有导入</li>\n<li>同上一个算法，这个也是遍历找得所有的索引，然后取出数组中对应的数据</li>\n<li>之前很努力的写了英文 不想翻译了，勉强看啦</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> itertools <span class=\"keyword\">import</span> chain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">powerset_generator</span><span class=\"params\">(sets)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> subset <span class=\"keyword\">in</span> chain.from_iterable(combinations(sets, r) <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> range(len(sets)+<span class=\"number\">1</span>)):</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> subset</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\"># the logic of this function is </span></span><br><span class=\"line\"><span class=\"comment\">#   set a new array with length r</span></span><br><span class=\"line\"><span class=\"comment\">#   loop the last element's index from i to i+n-r(n is the length of pool, r is the length of subsequence). </span></span><br><span class=\"line\"><span class=\"comment\">#   when hit the maximum which should be n-1, increase the last-1 element's index.</span></span><br><span class=\"line\"><span class=\"comment\">#   loop until the first element's index hit the maximum, </span></span><br><span class=\"line\"><span class=\"comment\">#   then increase the previous index, and set the last index to previous index + 1, </span></span><br><span class=\"line\"><span class=\"comment\">#   then back to the loop until all of the indices hit the maximum</span></span><br><span class=\"line\"><span class=\"comment\"># For example: iterable = [1,2,3,4,5], r = 3</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 2, 3)</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 2, 4)</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 2, 5) &lt;-- the last index hit the maximum</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 3, 4) &lt;-- increase the previous index, and set every one after to previous index + 1,</span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 3, 5) </span></span><br><span class=\"line\"><span class=\"comment\">#   (1, 4, 5) &lt;-- the (last-1) index hit the maximum</span></span><br><span class=\"line\"><span class=\"comment\">#   (2, 3, 4)</span></span><br><span class=\"line\"><span class=\"comment\">#   (2, 3, 5)</span></span><br><span class=\"line\"><span class=\"comment\">#   (2, 4, 5)</span></span><br><span class=\"line\"><span class=\"comment\">#   (3, 4, 5) &lt;-- the (last-2) index hit the maximum</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">combinations</span><span class=\"params\">(iterable, r)</span>:</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    pool = tuple(iterable)</span><br><span class=\"line\">    </span><br><span class=\"line\">    n = len(pool)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> r &gt; n:</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    indices = list(range(r))</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># In the \"while\" circle, we will start to change the indices by adding 1 consistently.</span></span><br><span class=\"line\">    <span class=\"comment\"># So yield the first permutation before the while start.</span></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> tuple(pool[x] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> indices)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\"># This 'for' loop is checking whether the index has hit the maximum from the last one to the first one.</span></span><br><span class=\"line\">        <span class=\"comment\"># if it indices[i] &gt;= its maximum, </span></span><br><span class=\"line\">        <span class=\"comment\">#   set i = i-1, check the previous one</span></span><br><span class=\"line\">        <span class=\"comment\"># if all of the indices has hit the maximum, </span></span><br><span class=\"line\">        <span class=\"comment\">#   stop the `while` loop</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> reversed(range(r)):</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># let's take an example to explain why using i + n - r</span></span><br><span class=\"line\">            <span class=\"comment\"># pool indices: [0,1,2,3,4]</span></span><br><span class=\"line\">            <span class=\"comment\"># subsequence indices: [0,1,2]</span></span><br><span class=\"line\">            <span class=\"comment\"># so</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[2] can be one of [2,3,4],</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[1] can be one of [1,2,3],</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[0] can be one of [0,1,2],</span></span><br><span class=\"line\">            <span class=\"comment\"># and the gap of every index is n-r, like here is 5-3=2</span></span><br><span class=\"line\">            <span class=\"comment\"># then</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[2] &lt; 2+2 = i+2 = i+n-r,</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[1] &lt; 1+2 = i+2 = i+n-r,</span></span><br><span class=\"line\">            <span class=\"comment\">#   indices[0] &lt; 0+2 = i+2 = i+n-r,</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> indices[i] &lt; i + n - r:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># loop finished, return</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Add one for current indices[i], </span></span><br><span class=\"line\">        <span class=\"comment\"># (we already yield the first permutation before the loop)</span></span><br><span class=\"line\">        indices[i] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># this for loop increases every indices which is after indices[i].</span></span><br><span class=\"line\">        <span class=\"comment\"># cause, current index has increased, and we need to confirm every one behind is initialized again.</span></span><br><span class=\"line\">        <span class=\"comment\"># For example: current we got i = 2, indices[i]+1 will be 3, </span></span><br><span class=\"line\">        <span class=\"comment\"># so the next loop should start with [1, 3, 4], not [1, 3, 3]</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+<span class=\"number\">1</span>, r):</span><br><span class=\"line\">            indices[j] = indices[j<span class=\"number\">-1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">yield</span> tuple(pool[x] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> indices)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"源地址\"><a href=\"#源地址\" class=\"headerlink\" title=\"源地址\"></a>源地址</h2><ul>\n<li><a href=\"https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html\" target=\"_blank\" rel=\"noopener\">https://cs.ericyy.me/computational-thinking/lecture-2-powerset.html</a></li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\" target=\"_blank\" rel=\"noopener\">按位操作符（Bitwise operators）from MDN</a></li>\n</ul>\n"},{"layout":"post","title":"Notes of The School of Life","date":"2017-04-30T04:00:00.000Z","description":"在 YouTube 的 The School of Life channel 看到的，记下一些有趣的点。","keywords":"The School of Life, 读书","_content":"\n* 在 YouTube 的 The School of Life channel 看到的，记下一些有趣的点。\n\n## Philosophical Meditation\n\n* About twenty minutes every few days.\n* First: \n    * Accumulate a list of concerns you haven't looked at head on, but have glimpsed in the course of the day.\n* Three questions:\n    * what am i currently anxious about? all the detailed.\n    * what am i upset about and whom? like talk to a patient friend.\n        * what other explanations might there be for the hurt they have caused?\n        * if this has happened to a friend, how would you advise him?\n    * what am i currently excited and ambitious about?\n        * what would it be to change your life in the light like this?\n        * what might be missing in your life?\n        * if this thing could change your life, what changes might it advise?\n        * if other parts of your life were more like this, what might they be like?\n* Philosophical Meditation helps us by creating an occasion where we can identify our thoughts, and get them in some kind of order, and to know ourself properly.\n\n## How to be Confident\n\n* Take yourself as a fool, and start to make mistakes\n\n## Self-Esteem\n\n* The result of understanding our past and the dynamic shame, conditionality and humiliation that might lie there. \n* High-Esteem seems largely to be prize of psychology rather than the fruit of anything we might achieve out of the world in relation the economy.\n\n","source":"_posts/2017-04-30-the-school-of-life.md","raw":"---\nlayout: post\ntitle: Notes of The School of Life\ncategory: 生活随想\ntags: [The School of Life]\ndate: 2017-04-30\ndescription: 在 YouTube 的 The School of Life channel 看到的，记下一些有趣的点。\nkeywords: The School of Life, 读书\n---\n\n* 在 YouTube 的 The School of Life channel 看到的，记下一些有趣的点。\n\n## Philosophical Meditation\n\n* About twenty minutes every few days.\n* First: \n    * Accumulate a list of concerns you haven't looked at head on, but have glimpsed in the course of the day.\n* Three questions:\n    * what am i currently anxious about? all the detailed.\n    * what am i upset about and whom? like talk to a patient friend.\n        * what other explanations might there be for the hurt they have caused?\n        * if this has happened to a friend, how would you advise him?\n    * what am i currently excited and ambitious about?\n        * what would it be to change your life in the light like this?\n        * what might be missing in your life?\n        * if this thing could change your life, what changes might it advise?\n        * if other parts of your life were more like this, what might they be like?\n* Philosophical Meditation helps us by creating an occasion where we can identify our thoughts, and get them in some kind of order, and to know ourself properly.\n\n## How to be Confident\n\n* Take yourself as a fool, and start to make mistakes\n\n## Self-Esteem\n\n* The result of understanding our past and the dynamic shame, conditionality and humiliation that might lie there. \n* High-Esteem seems largely to be prize of psychology rather than the fruit of anything we might achieve out of the world in relation the economy.\n\n","slug":"2017-04-30-the-school-of-life","published":1,"updated":"2020-04-19T02:38:12.064Z","_id":"ck96ffjb4002ermp9gduy3053","comments":1,"photos":[],"link":"","content":"<ul>\n<li>在 YouTube 的 The School of Life channel 看到的，记下一些有趣的点。</li>\n</ul>\n<h2 id=\"Philosophical-Meditation\"><a href=\"#Philosophical-Meditation\" class=\"headerlink\" title=\"Philosophical Meditation\"></a>Philosophical Meditation</h2><ul>\n<li>About twenty minutes every few days.</li>\n<li>First: <ul>\n<li>Accumulate a list of concerns you haven’t looked at head on, but have glimpsed in the course of the day.</li>\n</ul>\n</li>\n<li>Three questions:<ul>\n<li>what am i currently anxious about? all the detailed.</li>\n<li>what am i upset about and whom? like talk to a patient friend.<ul>\n<li>what other explanations might there be for the hurt they have caused?</li>\n<li>if this has happened to a friend, how would you advise him?</li>\n</ul>\n</li>\n<li>what am i currently excited and ambitious about?<ul>\n<li>what would it be to change your life in the light like this?</li>\n<li>what might be missing in your life?</li>\n<li>if this thing could change your life, what changes might it advise?</li>\n<li>if other parts of your life were more like this, what might they be like?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Philosophical Meditation helps us by creating an occasion where we can identify our thoughts, and get them in some kind of order, and to know ourself properly.</li>\n</ul>\n<h2 id=\"How-to-be-Confident\"><a href=\"#How-to-be-Confident\" class=\"headerlink\" title=\"How to be Confident\"></a>How to be Confident</h2><ul>\n<li>Take yourself as a fool, and start to make mistakes</li>\n</ul>\n<h2 id=\"Self-Esteem\"><a href=\"#Self-Esteem\" class=\"headerlink\" title=\"Self-Esteem\"></a>Self-Esteem</h2><ul>\n<li>The result of understanding our past and the dynamic shame, conditionality and humiliation that might lie there. </li>\n<li>High-Esteem seems largely to be prize of psychology rather than the fruit of anything we might achieve out of the world in relation the economy.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>在 YouTube 的 The School of Life channel 看到的，记下一些有趣的点。</li>\n</ul>\n<h2 id=\"Philosophical-Meditation\"><a href=\"#Philosophical-Meditation\" class=\"headerlink\" title=\"Philosophical Meditation\"></a>Philosophical Meditation</h2><ul>\n<li>About twenty minutes every few days.</li>\n<li>First: <ul>\n<li>Accumulate a list of concerns you haven’t looked at head on, but have glimpsed in the course of the day.</li>\n</ul>\n</li>\n<li>Three questions:<ul>\n<li>what am i currently anxious about? all the detailed.</li>\n<li>what am i upset about and whom? like talk to a patient friend.<ul>\n<li>what other explanations might there be for the hurt they have caused?</li>\n<li>if this has happened to a friend, how would you advise him?</li>\n</ul>\n</li>\n<li>what am i currently excited and ambitious about?<ul>\n<li>what would it be to change your life in the light like this?</li>\n<li>what might be missing in your life?</li>\n<li>if this thing could change your life, what changes might it advise?</li>\n<li>if other parts of your life were more like this, what might they be like?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Philosophical Meditation helps us by creating an occasion where we can identify our thoughts, and get them in some kind of order, and to know ourself properly.</li>\n</ul>\n<h2 id=\"How-to-be-Confident\"><a href=\"#How-to-be-Confident\" class=\"headerlink\" title=\"How to be Confident\"></a>How to be Confident</h2><ul>\n<li>Take yourself as a fool, and start to make mistakes</li>\n</ul>\n<h2 id=\"Self-Esteem\"><a href=\"#Self-Esteem\" class=\"headerlink\" title=\"Self-Esteem\"></a>Self-Esteem</h2><ul>\n<li>The result of understanding our past and the dynamic shame, conditionality and humiliation that might lie there. </li>\n<li>High-Esteem seems largely to be prize of psychology rather than the fruit of anything we might achieve out of the world in relation the economy.</li>\n</ul>\n"},{"layout":"post","title":"浙江大学公开课：王阳明心学[董平] 笔记","date":"2017-09-10T04:00:00.000Z","description":"心即理：阳明心学的逻辑起点，知行合一：阳明心学的实践品格 格物致知：知识论域的实践转向 本体与主体性的自我建立 本心的自我开显与自我表达 心外无物：生命境界的无限圆融 天泉证道“四句教”阳明学派的分化 心体的自我澄明与价值实现","keywords":"王阳明, 心学, 心即理, 知行合一, 格物致知","_content":"\n## 第二课 心即理：阳明心学的逻辑起点\n\n* 宋代理学的发生\n    * 陆九渊(象山)提出\n    * 最早可追溯到唐朝韩愈，他提出了道统问题\n        * 佛教过度繁荣使他感到本土文化忧虑\n        * 提出 焚其书 庐其居 人其人\n    * 到了宋朝，北宋五子耗费大量时间研究并领会了佛教和道教的精髓后，对先秦的思想进行了重新构建\n        * 理学 可以说是对儒家思想的重新构建\n        * 突出了很多原本在儒家思想中不突出的观点\n            * 比如对人性的探讨\n        * 理学 借鉴了一些佛教和道教的思想\n            * 比如 静坐 -> 打坐\n    * 南宋(朱熹 乾淳之际)\n        * 理学 思想基本形成\n* 理学的三个基本思想形态\n    * 朱熹一派 主要来自于程颐的思想\n        * 理 是思想的最高范畴\n            * 一本之理\n                * 最根本的是 对理要有终极体认，才能优入圣域\n        * 理 是可以达到的目的\n    * 陆象山\n        * 心即理\n            * 圣人之学 心学也\n    * 浙东学派 吕祖谦 陈亮\n        * 理 在人类的日常生活当中 在历史中\n        * 把道的追寻贯彻到人类的生活当中\n* 朱陆之争\n    * 他们的争论是对最高实在本身存在性的终极预设发生了歧义 \n* 阳明对陆学的基本观点\n    * 大段也是 只是粗了\n    * 并没有很细致的论述\n* “心即理”在阳明心学结构中的地位和作用\n    * 在龙场的艰难困苦生活中 他提出 如果圣人处在这种环境下 圣人会怎么做\n    * **圣人之道 吾性具足** \n    * 思想境界的升华 意味着世界的改变 \n    * 人在社会中生活，行为是受我们的思想和观念主导 观点改变 感觉也就改变了\n    * 龙场悟道最重要一点就是对“心即理”的体悟\n    * “本心” 心之本体 是我们的意识 我们的精神 主宰身体的视听言动\n    * 让心回到它本身的主宰地位 我们的行为就会按照它原本的样子呈现 我们的境界自然高尚\n    * **心之本体 就是至善**\n    * 宇宙的最高真理与我们的本心是纯然一致的 所以人要大其心\n    * 唯有明白了自身的本质和天道原本是一致的 人的本质原本就是天道在人这个层面的实在状态 这叫做本质上的天人合一\n    * 要成为圣人 最重要的是开显本心 使我们的原本与最高之理相符合的本心 以它原本的样子显现出来 一旦达到那个境界 既是人道和天道的最高实现\n    * 所以要**去私欲 心明既是理明** 既是道明 如镜子般 如实地去反映事物 那就是圣人事业的现实开括\n* 总结\n    * 本质上 人的本质和天道的本质是同一的 这就为人道(人的现实生活)转进于圣人境界造成了理论前提\n\n## 第三课 知行合一：阳明心学的实践品格 \n\n* “知” 、“行” 关系问题\n    * 《尚书·说命》：知之非艰 行之惟艰\n    * 孔子《论语》：\n        * 学而时习之不亦乐乎\n        * 不知而行之者 吾无是业： 知是重要行的重要前提\n        * 吾欲托之空言 不如见之行事之深切著明也：实践才是把只是呈现出来 转换价值的根本途径\n    * 《大学》：\n        * 未有学养子而后嫁者也： 亲子之爱是天生的 对子女的慈爱是自然流露的\n    * 佛教 天台宗：\n        * 止观双修 定慧均等修止观\n        * 四明知礼（北宋）：智为行本则行借智生 行能成智则智借行成\n    * 朱熹：\n        * 知行长相须（依附） 强调知与行的并列关系\n        * 知之俞明则行之俞笃 行之俞笃则知之俞明\n    * 吕祖谦：\n        * 致知力行不是两截\n        * 禅宗：磨镜所以明镜\n* “知行合一”的思想渊源\n    * 朱熹：真知必能行\n    * 王阳明：真知既是行：合二为一\n* “知行合一”的具体观点（知就是行 行就是知）\n    * 两个层面\n        * 知识层面\n            * 在事物当中获得知识\n            * 如何了解？\n                * 比如 孝敬父母。知道如何做 然后做是获得知识的过程 也是表达知识的过程\n                * **知和行是同一个完整的过程**\n                    * 知是行的起点 行是知的完成\n                    * 知识的最后形态 是生活的实践\n                * （个人注记：突然想到业内的 talk is cheap, show me the code)\n                    * 比如数学是机器学习的基础 但实践要在学理论的同时进行 而不是数学学完后就行\n            * 一念发动处便既是行了\n                * 意识的流动本身就是行\n        * 良知学说层面\n            * 王阳明经常从 知->良知 的层面上讲\n            * 良知的自知 自己对自己的领悟\n            * 表达自知 通过行来表达\n    * **知之真切笃实处既是行 行之明觉精察处既是知 知行功夫本不可离**\n        * 当对知的了解层度达到真切笃实处便是行 把知作为一个过程\n        * 当行为达到明觉精察 一定是真实只是的直接表达\n* 对所谓明阳“以知代行”说的批评\n    * 王阳明强调知识的过程必定是通过一个实践的过程体现的\n    * 最终的实践才是知识价值获得实现的最后境界\n\n## 第四课 格物致知：知识论域的实践转向\n\n* “格物致知”问题的来源\n    * 来源于《大学》\n        * 三纲：大学之道 在明明德 在亲民 在止于至善\n        * 八条目： 格物 致知 诚意 正心 修身 齐家 治国 平天下\n        * 起点是：格物 致知\n* 朱熹对“格物致知”的理解\n    * 接着二程夫子来讲\n        * 天下任何事物，宏观地看，有天理在 最高的一本之道\n        * 任何事物有它的独特之理 分殊之理\n        * 分殊之理是从一本之理中获得\n        * 一本之理作为大一是完满的 分殊之理为小一也是完满的\n        * 分殊之理的不断地“格”、还原 达到一定状态 才可能获得一本之理把握的前提\n    * 强调 格物致知是还原具体事物之理 既物而穷理\n    * 格物是致知的前提\n    * 理存在于具体事务当中\n* 王阳明的“格物致知”之说\n    * 如果理在事物当中 那与我的诚意正心有何关系？\n    * 物着事也 格者正也\n        * 格君心之非 -> 正君心之非\n        * “物” 作为一个独立的个体存在\n        * “事” 体现了一个过程 与我这个主题相关\n    * 事物之理不在事物本身 在心中\n    * 强调 我作为实践的主题 如何在事物当中正其心\n        * “正” 标准， 是否合乎本心\n            * 合乎本心 既是 合乎正理\n    * 强调 格物和致知是统一的整体\n    * 致知： 致良知\n        * 格物既是正心\n        * 格物致知：致吾心之良知于事事物物 事事物物各得齐正\n    * 意之所在便是物 意在于事亲则事亲为一物\n\n## 第五课 本体与主体性的自我建立\t\n\n* 孟子的“良知良能”\n    * 人不学而能谓之良能 不学而知着谓之良知\n        * 凡人皆有恻隐、羞恶、是非、辞让之心 是不学而知的 是我原本就固有的\n        * 恻隐之心 作为人之端 在人本身存在着固有性\n* 张载对“德性”、“闻见”之知的区别\n    * 德性之知不源于见闻 \n        * 德行：天德良知 超经验的\n        * 但是德性之知是要通过经验表达的\n* 王阳明的“良知”说\n    * 正德十五年 平定朱宸濠之后结合自己的生活经验提出\n    * 与前两位不近相同\n    * 良知： 心之本体（存在本体、德行本体、理性本体）\n        * 是生活中经验知识活动之所以可能的根据\n        * 是知识本身的本体 是理性的根据\n        * 原本就能知是非 是心体自然\n        * 原本就是至善 知善恶的 是德行之本\n        * 天命之所谓性\n    * 正是因为良知的存在 我们才具备存在和德行的本质，以及获得和展现知识的能力\n    * 心的良知是人作为主体的本质依据\n        * 唯有实现了自我建立的人才能称为主体\n        * 通过个体内在的自觉 在自我中建立起来\n    * 良知是为人之本\n    * 人的存在的本质 就是他的德行本质\n        * 生活中 人是如何表达自己？ \n            * 道德实践才能彰显个体的存在\n        * 道德的内在自觉\n            * 因为合乎本性的 所以才去做\n    * 每个个体存在性的表达 是要通过自觉的道德的建立来实现的\n        * 如此 个体的存在 才不仅仅是自然本身状态的 同时是合乎天道的\n* 存在本体、德行本体、理性本体\n    * 理性本源 是一切只是活动之所以可能的根据 是经验生活中是非判断的根据\n        * 是非 不仅仅是对错之分 还有善恶之分\n        * 泯灭良知 是指 良知没有获得表达和体现 在表现的层面上讲 泯灭良知\n    * 德行本源 是道德所以存在的依据\n    * 存在本源 是人的存在本质和最高的天道本质实现同一 并且这种同一性是作为本源的\n\n## 第六课 本心的自我开显与自我表达\n\n* 致良知的现实必要性 阳明对生命现状的忧虑\n    * 人们在利益的追逐当中丧失自我 遮蔽了自我的良知 所以要致良知\n    * 孟子： 求放心 放逸之心\n    * 安身立命的基础\n    * 对与人道相违背的生活现象的反思和批评\n* 致良知的双向展开\n    * 良知的“自知”、“自明”\n        * 呼唤自己的良知 良知才会以原本的状态出现\n        * **反思** 对自我在生活中的观点、意识、行为进行思索、内省\n        * 只有经过自我反思 我们的**主体性才得以建立**\n        * 用王阳明的话来讲 合乎良知叫”诚意“ 也既是”正心“\n        * ”自知“、”自明“ 才能表达自我的主体性建立 必须通过自我实现\n        * 如何对经验现象的实行确切无误的判断\n            * 有境才有心动 心动才会有善恶是非\n            * 动念之际去为善去恶\n    * “致吾心之良知于事事物物”\n        * 良知的自我展开 在事物的处理过程表现出来\n        * 明明德于天下\n        * 任何事物都应该在良知下进行 物得其正 我们存在性的自我表达\n        * 身 心 意 知 物 融为一体\n        * 人只有实践才能把主体的内在世界和客观世界连在一起\n* 致良知于个体意义世界的宏观构建\n    * 对于物质的欲望 本能的具有扩张性 它具有向恶的转化的可能 欲本身即是越界\n    * 孔子讲以礼来节制自我的情感\n        * 这种节制在道德上是好的 更符合公共生活\n        * 良知的恰当表达是具有公共性的\n    * 在自我与他人的事物观察中 人们更多的是用私欲的权衡 而非对他人客观 对自己混沌\n        * 良知首先是在自我中呈现 随之才能对其他事物有正确的理解\n\n## 第七课 心外无物：生命境界的无限圆融\n\n* “心”与“物”的关系\n    * “物”是“事”，“事”是介入了主体活动过程的\n    * 事物的两种存在状态： **“寂”与“显”\n**        \n        * 山中之花自开自落 没看到花的时候 你和花同归于“寂”，当你看到时是“显”\n        * **“寂“并非无，而是事物存在的一种状态**\n            * 是王阳明确认的事物的客观存在性\n        * **”显“ 当你看到花时 在你心中 一时分明起来**\n            * **看到 是”寂“到”显“的转换**\n    * 心的本体的存在 原本是”寂“、是不动的，但却包含着向”显“转换的无限可能，反之亦然 这叫做”寂感神应“ 没前后之分\n    * 看到花时 它由静转化为动，成为主题的对象，关系情景构成\n        * 体用一源 现为无间 无前无后无中间\n        * 任何事物的客观存在状态 只有在特定的情景中 客观物才以它原本的样式显现\n    * 任何客观物 当它以一种纯粹的客观存在时 包含”寂“和”显“两种状态 只不过呈现给主题的状态不同\n    * **王阳明的讨论并不涉及 事物是否可以脱离人的主观意识而存在 也就是并不涉及唯心主义讨论的问题**\n* “心外无物”作为一种生命境界\n    * 心不在焉 -> 听而不闻 视而不见 食而不知其味\n    * “关心”\n        * 一个事物在成为我的对象之前 它的存在跟我是不“关心”的 它的存在对我是无意义的\n        * 王阳明讲的一个真正的仁人是与天下事相关心的 是把世界万物容纳到个人的主体当中\n    * 致良知 通过主体的生活、道德实践 尽可能扩展我们的心灵世界 使一切万物都能够到达、进入的我的主体世界 如此我的心便是和天下万物相关 最后的圆融境界叫“无心外之物”\n    * 做不到 可以**心向往之**\n    * “心外无物” 是仁人的境界\n        * 把“物”作为个人主体的一部分\n* “心外无物”与主题价值世界的构建\n    * 个人主体世界的构建完全取决于我们主体自我的实践及其方式\n    * 个人要尽可能扩充、表达我们的良知 努力进行生活实践 并将实践纳入个人的主体世界\n        * 我们的意义世界 便是在实践当中不断的建立和扩张\n            * 主体的世界和客观世界不断的链接起来后 个人的主体世界也越来越宏达\n    * “心外无物”是生命的最高境界，是人生自我价值不断扩展和实现\n* （个人注记：你的主体世界便是你人生的价值。想到了精致的利己主义。利己没有什么错误，但致良知能够极大的丰富我们的主体世界，无论是从哪个角度的丰富，都会让其更加丰富多彩。即便我们的人生价值是丰富自己的体验或者收获更多的物质，那么致良知也是对其有很大的帮助的。比如丰富了对看待事物的视角，体验自然也就丰富了。如此来讲即便只谈利己也不必排斥“心外无物”。心向往之，实践前行。）\n\n## 第八课 天泉证道“四句教”阳明学派的分化\n\n* “天泉证道”的背景 “四句教”问题\n    * “四句教” 仅出现在《传习录》下卷和年谱中 未出现在王阳明自己的作品中\n        * 无善无恶心之本\n        * 有善有恶意之动\n        * 知善知恶是良知\n        * 为善去恶是格物\n    * 弟子钱德洪和王畿是在天泉桥向王阳明请教这四句话的意思的 所以叫做“天泉证道”\n* 钱德洪关于“四句教”的理解\n    * 认为是王门宗旨 是究竟之说\n    * 良知原本是无善无恶的 对圣人如此 但普通人不免有习心在 不免有私欲 所以 意之动就会有善有恶 于是要求我们在一念发动之动给克制住\n    * 是非善恶良知本是知道的 所以要为善去恶\n* 王畿(jī)（龙溪）关于“四句教”的理解\n    * 认为是权宜之说\n    * 认为\n        * 无心之心则藏秘\n        * 无意之意则应圆\n        * 无知之知则体寂\n        * 无物之物则用神\n    * 认为 心如果是无善无恶的 那么 意、知、物都应该是无善无恶的 不可能突然冒出来有善有恶的意\n* “四句教”与王学分化的关系\n    * “天泉证道”，王阳明认为 人非利根和钝根之人\n        * 利根之人 聪慧 一点就透\n            * 一悟本体既是工夫\n            * 便是王畿所讲\n            * 但此般根基之人很少\n        * 钝根之人 愚笨 需要慢慢学慢慢习\n            * 对于普通人还是要讲为善去恶\n            * 钱德洪之说\n    * 黄宗羲对王钱二人的评价\n        * 因其二人而风行 也因此二人而渐失其传\n* “四句教”的具体分析\n    * 无善无恶心之本\n        * 无善无恶是为至善 \n        * 讲的是本心自身的实在的状态 是未发之中 是无法判断的\n            * 因为善恶是基于经验世界检验价值的相对判断\n            * 而**至善是超经验的 是绝对的价值原点 由此才能对事物进行判断**\n                * 比如称用于权衡他物 眼睛是无色的才可以分辨颜色 镜子本无一物才能照出来事物本身\n    * 有善有恶意之动\n        * 意 是心之动的主动状态 是有境，有原因的\n            * 所以是一种经验状态\n            * 没有对物、境构成关系之前 本体归于本相之寂\n            * 所以它一定会落于某个方面 才有善恶之分\n            * 价值只能在经验的世界当中显现它自己\n        * 心之动合理的方面是讲 心之动是合乎本体 是合乎心本来状态的 所以这样的一动 在价值上会落于善的方面\n    * 知善知恶是良知\n        * 良知本身是自知自明 知善知恶的 心体向经验转换时 它是可以判断善恶的\n    * 为善去恶是格物\n        * 当良知判断出事物的善恶之后 人应该朝着善的方向去做\n        * 而这个过程便是 诚意正心\n\n## 第九课 心体的自我澄明与价值实现\n\n* 四句教是否存在内在“逻辑”关系\n    * 不存在内在逻辑关系\n    * 就四个不同层面来讲的\n* “良知现成”与思相解放\n    * 王龙溪一派虽偏离了王阳明的思想 但是却带来了思想了解放\n    * 正因为人人都诉诸自己的良知 任何事物在经由良知的审慎之前都是值得怀疑的 所以它要求我们对生活进行审查 我们的价值也在这个过程中建立\n    * 未经理性审查的生活是不值得过的 -- 苏格拉底\n    * 但是当我们过度强调良知的审查 就会变成自我的率性而为 陷入以意见为真理的谬误的状态\n* 本体与工夫的关系\n    * 良知是心之本体 如何显现？ 如何到达？\n    * 工夫 相当于方法论\n        * 钱德洪：为善去恶既是工夫 在事上磨炼\n            * 工夫总是相对于本体而言 并且总是相对于本体的开显而言的\n        * 王龙溪：工夫是需要的 但不需要为善去恶 不需要在事上磨炼\n            * 当下悟出无山无恶心之本 即本体工夫\n            * 如果你真正明白这个道理 不需要那么复杂 良知现成\n            * 现成既是本体也是工夫\n            * 良知本顺 致之则逆 不需要致良知\n    * 王阳明还是非常强调事情的磨炼的\n* 董平老师的观点\n    * 良知作为价值原点 是超经验的 在生活中的表达是有可能发生问题的\n    * 心之动发为意 是有善有恶的\n    * 生活中充满各种欲望 我们往往容易偏离自我的心灵指导\n    * 所以反思是很重要的\n    * 人需要了解到自我的良知是浩渺的可以容纳世间万物 可以判断世间一切美丑善恶 这样我们才能在天地间堂堂正正的做人\n    * 王阳明遗言：此心光明 亦复何言\n        * 领会到这点 我们就能对生活稍微超然疏离一点 这样的行为能让我们的精神世界高尚一点\n        * 这种超然和疏离是对欲望的疏离 对利益的看淡 使我们变得高尚\n        * 使我们变得高尚的 不是我们的本能 是我们的德行、良知\n        * 一个懂得致良知的人才会享有崇高的思想境界\n    * 客观事物是脱离自我存在的 但只有进入我的世界 才会对我有意义\n\n## 我的理解\n\n* 心学里的良知和禅学里边讲到的对绝对价值的追求很相似。\n    * 林木大拙讲到禅是超越逻辑的。相对来讲，心学的良知学也是超经验范畴的，讲的也是绝对价值。\n    * 另一方面，禅讲的平常心也对应的“为善去恶”的观念在里边。\n* 而“知行合一”和禅学也都一直在强调思维的一贯性。\n\n## 注记：\n\n* 以上皆为董平老师的观点 由于他提到“这是我个人的观点”的次数太多，我基本全给省略了。所以作为对阳明心学的一个思考角度来看。在今后读过《传习录》、《大学问》等王阳明的著作之后对比来看更有收获。\n* 课程地址: [http://open.163.com/special/cuvocw/wangyangming.html](http://open.163.com/special/cuvocw/wangyangming.html)\n\n\n","source":"_posts/2017-09-10-wang-yangming.md","raw":"---\nlayout: post\ntitle: 浙江大学公开课：王阳明心学[董平] 笔记\ncategory: 阅读笔记\ntags: [笔记]\ndate: 2017-09-10\ndescription: 心即理：阳明心学的逻辑起点，知行合一：阳明心学的实践品格 格物致知：知识论域的实践转向 本体与主体性的自我建立 本心的自我开显与自我表达 心外无物：生命境界的无限圆融 天泉证道“四句教”阳明学派的分化 心体的自我澄明与价值实现\nkeywords: 王阳明, 心学, 心即理, 知行合一, 格物致知\n---\n\n## 第二课 心即理：阳明心学的逻辑起点\n\n* 宋代理学的发生\n    * 陆九渊(象山)提出\n    * 最早可追溯到唐朝韩愈，他提出了道统问题\n        * 佛教过度繁荣使他感到本土文化忧虑\n        * 提出 焚其书 庐其居 人其人\n    * 到了宋朝，北宋五子耗费大量时间研究并领会了佛教和道教的精髓后，对先秦的思想进行了重新构建\n        * 理学 可以说是对儒家思想的重新构建\n        * 突出了很多原本在儒家思想中不突出的观点\n            * 比如对人性的探讨\n        * 理学 借鉴了一些佛教和道教的思想\n            * 比如 静坐 -> 打坐\n    * 南宋(朱熹 乾淳之际)\n        * 理学 思想基本形成\n* 理学的三个基本思想形态\n    * 朱熹一派 主要来自于程颐的思想\n        * 理 是思想的最高范畴\n            * 一本之理\n                * 最根本的是 对理要有终极体认，才能优入圣域\n        * 理 是可以达到的目的\n    * 陆象山\n        * 心即理\n            * 圣人之学 心学也\n    * 浙东学派 吕祖谦 陈亮\n        * 理 在人类的日常生活当中 在历史中\n        * 把道的追寻贯彻到人类的生活当中\n* 朱陆之争\n    * 他们的争论是对最高实在本身存在性的终极预设发生了歧义 \n* 阳明对陆学的基本观点\n    * 大段也是 只是粗了\n    * 并没有很细致的论述\n* “心即理”在阳明心学结构中的地位和作用\n    * 在龙场的艰难困苦生活中 他提出 如果圣人处在这种环境下 圣人会怎么做\n    * **圣人之道 吾性具足** \n    * 思想境界的升华 意味着世界的改变 \n    * 人在社会中生活，行为是受我们的思想和观念主导 观点改变 感觉也就改变了\n    * 龙场悟道最重要一点就是对“心即理”的体悟\n    * “本心” 心之本体 是我们的意识 我们的精神 主宰身体的视听言动\n    * 让心回到它本身的主宰地位 我们的行为就会按照它原本的样子呈现 我们的境界自然高尚\n    * **心之本体 就是至善**\n    * 宇宙的最高真理与我们的本心是纯然一致的 所以人要大其心\n    * 唯有明白了自身的本质和天道原本是一致的 人的本质原本就是天道在人这个层面的实在状态 这叫做本质上的天人合一\n    * 要成为圣人 最重要的是开显本心 使我们的原本与最高之理相符合的本心 以它原本的样子显现出来 一旦达到那个境界 既是人道和天道的最高实现\n    * 所以要**去私欲 心明既是理明** 既是道明 如镜子般 如实地去反映事物 那就是圣人事业的现实开括\n* 总结\n    * 本质上 人的本质和天道的本质是同一的 这就为人道(人的现实生活)转进于圣人境界造成了理论前提\n\n## 第三课 知行合一：阳明心学的实践品格 \n\n* “知” 、“行” 关系问题\n    * 《尚书·说命》：知之非艰 行之惟艰\n    * 孔子《论语》：\n        * 学而时习之不亦乐乎\n        * 不知而行之者 吾无是业： 知是重要行的重要前提\n        * 吾欲托之空言 不如见之行事之深切著明也：实践才是把只是呈现出来 转换价值的根本途径\n    * 《大学》：\n        * 未有学养子而后嫁者也： 亲子之爱是天生的 对子女的慈爱是自然流露的\n    * 佛教 天台宗：\n        * 止观双修 定慧均等修止观\n        * 四明知礼（北宋）：智为行本则行借智生 行能成智则智借行成\n    * 朱熹：\n        * 知行长相须（依附） 强调知与行的并列关系\n        * 知之俞明则行之俞笃 行之俞笃则知之俞明\n    * 吕祖谦：\n        * 致知力行不是两截\n        * 禅宗：磨镜所以明镜\n* “知行合一”的思想渊源\n    * 朱熹：真知必能行\n    * 王阳明：真知既是行：合二为一\n* “知行合一”的具体观点（知就是行 行就是知）\n    * 两个层面\n        * 知识层面\n            * 在事物当中获得知识\n            * 如何了解？\n                * 比如 孝敬父母。知道如何做 然后做是获得知识的过程 也是表达知识的过程\n                * **知和行是同一个完整的过程**\n                    * 知是行的起点 行是知的完成\n                    * 知识的最后形态 是生活的实践\n                * （个人注记：突然想到业内的 talk is cheap, show me the code)\n                    * 比如数学是机器学习的基础 但实践要在学理论的同时进行 而不是数学学完后就行\n            * 一念发动处便既是行了\n                * 意识的流动本身就是行\n        * 良知学说层面\n            * 王阳明经常从 知->良知 的层面上讲\n            * 良知的自知 自己对自己的领悟\n            * 表达自知 通过行来表达\n    * **知之真切笃实处既是行 行之明觉精察处既是知 知行功夫本不可离**\n        * 当对知的了解层度达到真切笃实处便是行 把知作为一个过程\n        * 当行为达到明觉精察 一定是真实只是的直接表达\n* 对所谓明阳“以知代行”说的批评\n    * 王阳明强调知识的过程必定是通过一个实践的过程体现的\n    * 最终的实践才是知识价值获得实现的最后境界\n\n## 第四课 格物致知：知识论域的实践转向\n\n* “格物致知”问题的来源\n    * 来源于《大学》\n        * 三纲：大学之道 在明明德 在亲民 在止于至善\n        * 八条目： 格物 致知 诚意 正心 修身 齐家 治国 平天下\n        * 起点是：格物 致知\n* 朱熹对“格物致知”的理解\n    * 接着二程夫子来讲\n        * 天下任何事物，宏观地看，有天理在 最高的一本之道\n        * 任何事物有它的独特之理 分殊之理\n        * 分殊之理是从一本之理中获得\n        * 一本之理作为大一是完满的 分殊之理为小一也是完满的\n        * 分殊之理的不断地“格”、还原 达到一定状态 才可能获得一本之理把握的前提\n    * 强调 格物致知是还原具体事物之理 既物而穷理\n    * 格物是致知的前提\n    * 理存在于具体事务当中\n* 王阳明的“格物致知”之说\n    * 如果理在事物当中 那与我的诚意正心有何关系？\n    * 物着事也 格者正也\n        * 格君心之非 -> 正君心之非\n        * “物” 作为一个独立的个体存在\n        * “事” 体现了一个过程 与我这个主题相关\n    * 事物之理不在事物本身 在心中\n    * 强调 我作为实践的主题 如何在事物当中正其心\n        * “正” 标准， 是否合乎本心\n            * 合乎本心 既是 合乎正理\n    * 强调 格物和致知是统一的整体\n    * 致知： 致良知\n        * 格物既是正心\n        * 格物致知：致吾心之良知于事事物物 事事物物各得齐正\n    * 意之所在便是物 意在于事亲则事亲为一物\n\n## 第五课 本体与主体性的自我建立\t\n\n* 孟子的“良知良能”\n    * 人不学而能谓之良能 不学而知着谓之良知\n        * 凡人皆有恻隐、羞恶、是非、辞让之心 是不学而知的 是我原本就固有的\n        * 恻隐之心 作为人之端 在人本身存在着固有性\n* 张载对“德性”、“闻见”之知的区别\n    * 德性之知不源于见闻 \n        * 德行：天德良知 超经验的\n        * 但是德性之知是要通过经验表达的\n* 王阳明的“良知”说\n    * 正德十五年 平定朱宸濠之后结合自己的生活经验提出\n    * 与前两位不近相同\n    * 良知： 心之本体（存在本体、德行本体、理性本体）\n        * 是生活中经验知识活动之所以可能的根据\n        * 是知识本身的本体 是理性的根据\n        * 原本就能知是非 是心体自然\n        * 原本就是至善 知善恶的 是德行之本\n        * 天命之所谓性\n    * 正是因为良知的存在 我们才具备存在和德行的本质，以及获得和展现知识的能力\n    * 心的良知是人作为主体的本质依据\n        * 唯有实现了自我建立的人才能称为主体\n        * 通过个体内在的自觉 在自我中建立起来\n    * 良知是为人之本\n    * 人的存在的本质 就是他的德行本质\n        * 生活中 人是如何表达自己？ \n            * 道德实践才能彰显个体的存在\n        * 道德的内在自觉\n            * 因为合乎本性的 所以才去做\n    * 每个个体存在性的表达 是要通过自觉的道德的建立来实现的\n        * 如此 个体的存在 才不仅仅是自然本身状态的 同时是合乎天道的\n* 存在本体、德行本体、理性本体\n    * 理性本源 是一切只是活动之所以可能的根据 是经验生活中是非判断的根据\n        * 是非 不仅仅是对错之分 还有善恶之分\n        * 泯灭良知 是指 良知没有获得表达和体现 在表现的层面上讲 泯灭良知\n    * 德行本源 是道德所以存在的依据\n    * 存在本源 是人的存在本质和最高的天道本质实现同一 并且这种同一性是作为本源的\n\n## 第六课 本心的自我开显与自我表达\n\n* 致良知的现实必要性 阳明对生命现状的忧虑\n    * 人们在利益的追逐当中丧失自我 遮蔽了自我的良知 所以要致良知\n    * 孟子： 求放心 放逸之心\n    * 安身立命的基础\n    * 对与人道相违背的生活现象的反思和批评\n* 致良知的双向展开\n    * 良知的“自知”、“自明”\n        * 呼唤自己的良知 良知才会以原本的状态出现\n        * **反思** 对自我在生活中的观点、意识、行为进行思索、内省\n        * 只有经过自我反思 我们的**主体性才得以建立**\n        * 用王阳明的话来讲 合乎良知叫”诚意“ 也既是”正心“\n        * ”自知“、”自明“ 才能表达自我的主体性建立 必须通过自我实现\n        * 如何对经验现象的实行确切无误的判断\n            * 有境才有心动 心动才会有善恶是非\n            * 动念之际去为善去恶\n    * “致吾心之良知于事事物物”\n        * 良知的自我展开 在事物的处理过程表现出来\n        * 明明德于天下\n        * 任何事物都应该在良知下进行 物得其正 我们存在性的自我表达\n        * 身 心 意 知 物 融为一体\n        * 人只有实践才能把主体的内在世界和客观世界连在一起\n* 致良知于个体意义世界的宏观构建\n    * 对于物质的欲望 本能的具有扩张性 它具有向恶的转化的可能 欲本身即是越界\n    * 孔子讲以礼来节制自我的情感\n        * 这种节制在道德上是好的 更符合公共生活\n        * 良知的恰当表达是具有公共性的\n    * 在自我与他人的事物观察中 人们更多的是用私欲的权衡 而非对他人客观 对自己混沌\n        * 良知首先是在自我中呈现 随之才能对其他事物有正确的理解\n\n## 第七课 心外无物：生命境界的无限圆融\n\n* “心”与“物”的关系\n    * “物”是“事”，“事”是介入了主体活动过程的\n    * 事物的两种存在状态： **“寂”与“显”\n**        \n        * 山中之花自开自落 没看到花的时候 你和花同归于“寂”，当你看到时是“显”\n        * **“寂“并非无，而是事物存在的一种状态**\n            * 是王阳明确认的事物的客观存在性\n        * **”显“ 当你看到花时 在你心中 一时分明起来**\n            * **看到 是”寂“到”显“的转换**\n    * 心的本体的存在 原本是”寂“、是不动的，但却包含着向”显“转换的无限可能，反之亦然 这叫做”寂感神应“ 没前后之分\n    * 看到花时 它由静转化为动，成为主题的对象，关系情景构成\n        * 体用一源 现为无间 无前无后无中间\n        * 任何事物的客观存在状态 只有在特定的情景中 客观物才以它原本的样式显现\n    * 任何客观物 当它以一种纯粹的客观存在时 包含”寂“和”显“两种状态 只不过呈现给主题的状态不同\n    * **王阳明的讨论并不涉及 事物是否可以脱离人的主观意识而存在 也就是并不涉及唯心主义讨论的问题**\n* “心外无物”作为一种生命境界\n    * 心不在焉 -> 听而不闻 视而不见 食而不知其味\n    * “关心”\n        * 一个事物在成为我的对象之前 它的存在跟我是不“关心”的 它的存在对我是无意义的\n        * 王阳明讲的一个真正的仁人是与天下事相关心的 是把世界万物容纳到个人的主体当中\n    * 致良知 通过主体的生活、道德实践 尽可能扩展我们的心灵世界 使一切万物都能够到达、进入的我的主体世界 如此我的心便是和天下万物相关 最后的圆融境界叫“无心外之物”\n    * 做不到 可以**心向往之**\n    * “心外无物” 是仁人的境界\n        * 把“物”作为个人主体的一部分\n* “心外无物”与主题价值世界的构建\n    * 个人主体世界的构建完全取决于我们主体自我的实践及其方式\n    * 个人要尽可能扩充、表达我们的良知 努力进行生活实践 并将实践纳入个人的主体世界\n        * 我们的意义世界 便是在实践当中不断的建立和扩张\n            * 主体的世界和客观世界不断的链接起来后 个人的主体世界也越来越宏达\n    * “心外无物”是生命的最高境界，是人生自我价值不断扩展和实现\n* （个人注记：你的主体世界便是你人生的价值。想到了精致的利己主义。利己没有什么错误，但致良知能够极大的丰富我们的主体世界，无论是从哪个角度的丰富，都会让其更加丰富多彩。即便我们的人生价值是丰富自己的体验或者收获更多的物质，那么致良知也是对其有很大的帮助的。比如丰富了对看待事物的视角，体验自然也就丰富了。如此来讲即便只谈利己也不必排斥“心外无物”。心向往之，实践前行。）\n\n## 第八课 天泉证道“四句教”阳明学派的分化\n\n* “天泉证道”的背景 “四句教”问题\n    * “四句教” 仅出现在《传习录》下卷和年谱中 未出现在王阳明自己的作品中\n        * 无善无恶心之本\n        * 有善有恶意之动\n        * 知善知恶是良知\n        * 为善去恶是格物\n    * 弟子钱德洪和王畿是在天泉桥向王阳明请教这四句话的意思的 所以叫做“天泉证道”\n* 钱德洪关于“四句教”的理解\n    * 认为是王门宗旨 是究竟之说\n    * 良知原本是无善无恶的 对圣人如此 但普通人不免有习心在 不免有私欲 所以 意之动就会有善有恶 于是要求我们在一念发动之动给克制住\n    * 是非善恶良知本是知道的 所以要为善去恶\n* 王畿(jī)（龙溪）关于“四句教”的理解\n    * 认为是权宜之说\n    * 认为\n        * 无心之心则藏秘\n        * 无意之意则应圆\n        * 无知之知则体寂\n        * 无物之物则用神\n    * 认为 心如果是无善无恶的 那么 意、知、物都应该是无善无恶的 不可能突然冒出来有善有恶的意\n* “四句教”与王学分化的关系\n    * “天泉证道”，王阳明认为 人非利根和钝根之人\n        * 利根之人 聪慧 一点就透\n            * 一悟本体既是工夫\n            * 便是王畿所讲\n            * 但此般根基之人很少\n        * 钝根之人 愚笨 需要慢慢学慢慢习\n            * 对于普通人还是要讲为善去恶\n            * 钱德洪之说\n    * 黄宗羲对王钱二人的评价\n        * 因其二人而风行 也因此二人而渐失其传\n* “四句教”的具体分析\n    * 无善无恶心之本\n        * 无善无恶是为至善 \n        * 讲的是本心自身的实在的状态 是未发之中 是无法判断的\n            * 因为善恶是基于经验世界检验价值的相对判断\n            * 而**至善是超经验的 是绝对的价值原点 由此才能对事物进行判断**\n                * 比如称用于权衡他物 眼睛是无色的才可以分辨颜色 镜子本无一物才能照出来事物本身\n    * 有善有恶意之动\n        * 意 是心之动的主动状态 是有境，有原因的\n            * 所以是一种经验状态\n            * 没有对物、境构成关系之前 本体归于本相之寂\n            * 所以它一定会落于某个方面 才有善恶之分\n            * 价值只能在经验的世界当中显现它自己\n        * 心之动合理的方面是讲 心之动是合乎本体 是合乎心本来状态的 所以这样的一动 在价值上会落于善的方面\n    * 知善知恶是良知\n        * 良知本身是自知自明 知善知恶的 心体向经验转换时 它是可以判断善恶的\n    * 为善去恶是格物\n        * 当良知判断出事物的善恶之后 人应该朝着善的方向去做\n        * 而这个过程便是 诚意正心\n\n## 第九课 心体的自我澄明与价值实现\n\n* 四句教是否存在内在“逻辑”关系\n    * 不存在内在逻辑关系\n    * 就四个不同层面来讲的\n* “良知现成”与思相解放\n    * 王龙溪一派虽偏离了王阳明的思想 但是却带来了思想了解放\n    * 正因为人人都诉诸自己的良知 任何事物在经由良知的审慎之前都是值得怀疑的 所以它要求我们对生活进行审查 我们的价值也在这个过程中建立\n    * 未经理性审查的生活是不值得过的 -- 苏格拉底\n    * 但是当我们过度强调良知的审查 就会变成自我的率性而为 陷入以意见为真理的谬误的状态\n* 本体与工夫的关系\n    * 良知是心之本体 如何显现？ 如何到达？\n    * 工夫 相当于方法论\n        * 钱德洪：为善去恶既是工夫 在事上磨炼\n            * 工夫总是相对于本体而言 并且总是相对于本体的开显而言的\n        * 王龙溪：工夫是需要的 但不需要为善去恶 不需要在事上磨炼\n            * 当下悟出无山无恶心之本 即本体工夫\n            * 如果你真正明白这个道理 不需要那么复杂 良知现成\n            * 现成既是本体也是工夫\n            * 良知本顺 致之则逆 不需要致良知\n    * 王阳明还是非常强调事情的磨炼的\n* 董平老师的观点\n    * 良知作为价值原点 是超经验的 在生活中的表达是有可能发生问题的\n    * 心之动发为意 是有善有恶的\n    * 生活中充满各种欲望 我们往往容易偏离自我的心灵指导\n    * 所以反思是很重要的\n    * 人需要了解到自我的良知是浩渺的可以容纳世间万物 可以判断世间一切美丑善恶 这样我们才能在天地间堂堂正正的做人\n    * 王阳明遗言：此心光明 亦复何言\n        * 领会到这点 我们就能对生活稍微超然疏离一点 这样的行为能让我们的精神世界高尚一点\n        * 这种超然和疏离是对欲望的疏离 对利益的看淡 使我们变得高尚\n        * 使我们变得高尚的 不是我们的本能 是我们的德行、良知\n        * 一个懂得致良知的人才会享有崇高的思想境界\n    * 客观事物是脱离自我存在的 但只有进入我的世界 才会对我有意义\n\n## 我的理解\n\n* 心学里的良知和禅学里边讲到的对绝对价值的追求很相似。\n    * 林木大拙讲到禅是超越逻辑的。相对来讲，心学的良知学也是超经验范畴的，讲的也是绝对价值。\n    * 另一方面，禅讲的平常心也对应的“为善去恶”的观念在里边。\n* 而“知行合一”和禅学也都一直在强调思维的一贯性。\n\n## 注记：\n\n* 以上皆为董平老师的观点 由于他提到“这是我个人的观点”的次数太多，我基本全给省略了。所以作为对阳明心学的一个思考角度来看。在今后读过《传习录》、《大学问》等王阳明的著作之后对比来看更有收获。\n* 课程地址: [http://open.163.com/special/cuvocw/wangyangming.html](http://open.163.com/special/cuvocw/wangyangming.html)\n\n\n","slug":"2017-09-10-wang-yangming","published":1,"updated":"2020-04-19T02:55:37.088Z","_id":"ck96ffjb5002irmp981amh5c1","comments":1,"photos":[],"link":"","content":"<h2 id=\"第二课-心即理：阳明心学的逻辑起点\"><a href=\"#第二课-心即理：阳明心学的逻辑起点\" class=\"headerlink\" title=\"第二课 心即理：阳明心学的逻辑起点\"></a>第二课 心即理：阳明心学的逻辑起点</h2><ul>\n<li>宋代理学的发生<ul>\n<li>陆九渊(象山)提出</li>\n<li>最早可追溯到唐朝韩愈，他提出了道统问题<ul>\n<li>佛教过度繁荣使他感到本土文化忧虑</li>\n<li>提出 焚其书 庐其居 人其人</li>\n</ul>\n</li>\n<li>到了宋朝，北宋五子耗费大量时间研究并领会了佛教和道教的精髓后，对先秦的思想进行了重新构建<ul>\n<li>理学 可以说是对儒家思想的重新构建</li>\n<li>突出了很多原本在儒家思想中不突出的观点<ul>\n<li>比如对人性的探讨</li>\n</ul>\n</li>\n<li>理学 借鉴了一些佛教和道教的思想<ul>\n<li>比如 静坐 -&gt; 打坐</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>南宋(朱熹 乾淳之际)<ul>\n<li>理学 思想基本形成</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>理学的三个基本思想形态<ul>\n<li>朱熹一派 主要来自于程颐的思想<ul>\n<li>理 是思想的最高范畴<ul>\n<li>一本之理<ul>\n<li>最根本的是 对理要有终极体认，才能优入圣域</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>理 是可以达到的目的</li>\n</ul>\n</li>\n<li>陆象山<ul>\n<li>心即理<ul>\n<li>圣人之学 心学也</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>浙东学派 吕祖谦 陈亮<ul>\n<li>理 在人类的日常生活当中 在历史中</li>\n<li>把道的追寻贯彻到人类的生活当中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>朱陆之争<ul>\n<li>他们的争论是对最高实在本身存在性的终极预设发生了歧义 </li>\n</ul>\n</li>\n<li>阳明对陆学的基本观点<ul>\n<li>大段也是 只是粗了</li>\n<li>并没有很细致的论述</li>\n</ul>\n</li>\n<li>“心即理”在阳明心学结构中的地位和作用<ul>\n<li>在龙场的艰难困苦生活中 他提出 如果圣人处在这种环境下 圣人会怎么做</li>\n<li><strong>圣人之道 吾性具足</strong> </li>\n<li>思想境界的升华 意味着世界的改变 </li>\n<li>人在社会中生活，行为是受我们的思想和观念主导 观点改变 感觉也就改变了</li>\n<li>龙场悟道最重要一点就是对“心即理”的体悟</li>\n<li>“本心” 心之本体 是我们的意识 我们的精神 主宰身体的视听言动</li>\n<li>让心回到它本身的主宰地位 我们的行为就会按照它原本的样子呈现 我们的境界自然高尚</li>\n<li><strong>心之本体 就是至善</strong></li>\n<li>宇宙的最高真理与我们的本心是纯然一致的 所以人要大其心</li>\n<li>唯有明白了自身的本质和天道原本是一致的 人的本质原本就是天道在人这个层面的实在状态 这叫做本质上的天人合一</li>\n<li>要成为圣人 最重要的是开显本心 使我们的原本与最高之理相符合的本心 以它原本的样子显现出来 一旦达到那个境界 既是人道和天道的最高实现</li>\n<li>所以要<strong>去私欲 心明既是理明</strong> 既是道明 如镜子般 如实地去反映事物 那就是圣人事业的现实开括</li>\n</ul>\n</li>\n<li>总结<ul>\n<li>本质上 人的本质和天道的本质是同一的 这就为人道(人的现实生活)转进于圣人境界造成了理论前提</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三课-知行合一：阳明心学的实践品格\"><a href=\"#第三课-知行合一：阳明心学的实践品格\" class=\"headerlink\" title=\"第三课 知行合一：阳明心学的实践品格\"></a>第三课 知行合一：阳明心学的实践品格</h2><ul>\n<li>“知” 、“行” 关系问题<ul>\n<li>《尚书·说命》：知之非艰 行之惟艰</li>\n<li>孔子《论语》：<ul>\n<li>学而时习之不亦乐乎</li>\n<li>不知而行之者 吾无是业： 知是重要行的重要前提</li>\n<li>吾欲托之空言 不如见之行事之深切著明也：实践才是把只是呈现出来 转换价值的根本途径</li>\n</ul>\n</li>\n<li>《大学》：<ul>\n<li>未有学养子而后嫁者也： 亲子之爱是天生的 对子女的慈爱是自然流露的</li>\n</ul>\n</li>\n<li>佛教 天台宗：<ul>\n<li>止观双修 定慧均等修止观</li>\n<li>四明知礼（北宋）：智为行本则行借智生 行能成智则智借行成</li>\n</ul>\n</li>\n<li>朱熹：<ul>\n<li>知行长相须（依附） 强调知与行的并列关系</li>\n<li>知之俞明则行之俞笃 行之俞笃则知之俞明</li>\n</ul>\n</li>\n<li>吕祖谦：<ul>\n<li>致知力行不是两截</li>\n<li>禅宗：磨镜所以明镜</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“知行合一”的思想渊源<ul>\n<li>朱熹：真知必能行</li>\n<li>王阳明：真知既是行：合二为一</li>\n</ul>\n</li>\n<li>“知行合一”的具体观点（知就是行 行就是知）<ul>\n<li>两个层面<ul>\n<li>知识层面<ul>\n<li>在事物当中获得知识</li>\n<li>如何了解？<ul>\n<li>比如 孝敬父母。知道如何做 然后做是获得知识的过程 也是表达知识的过程</li>\n<li><strong>知和行是同一个完整的过程</strong><ul>\n<li>知是行的起点 行是知的完成</li>\n<li>知识的最后形态 是生活的实践</li>\n</ul>\n</li>\n<li>（个人注记：突然想到业内的 talk is cheap, show me the code)<ul>\n<li>比如数学是机器学习的基础 但实践要在学理论的同时进行 而不是数学学完后就行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>一念发动处便既是行了<ul>\n<li>意识的流动本身就是行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>良知学说层面<ul>\n<li>王阳明经常从 知-&gt;良知 的层面上讲</li>\n<li>良知的自知 自己对自己的领悟</li>\n<li>表达自知 通过行来表达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>知之真切笃实处既是行 行之明觉精察处既是知 知行功夫本不可离</strong><ul>\n<li>当对知的了解层度达到真切笃实处便是行 把知作为一个过程</li>\n<li>当行为达到明觉精察 一定是真实只是的直接表达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对所谓明阳“以知代行”说的批评<ul>\n<li>王阳明强调知识的过程必定是通过一个实践的过程体现的</li>\n<li>最终的实践才是知识价值获得实现的最后境界</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第四课-格物致知：知识论域的实践转向\"><a href=\"#第四课-格物致知：知识论域的实践转向\" class=\"headerlink\" title=\"第四课 格物致知：知识论域的实践转向\"></a>第四课 格物致知：知识论域的实践转向</h2><ul>\n<li>“格物致知”问题的来源<ul>\n<li>来源于《大学》<ul>\n<li>三纲：大学之道 在明明德 在亲民 在止于至善</li>\n<li>八条目： 格物 致知 诚意 正心 修身 齐家 治国 平天下</li>\n<li>起点是：格物 致知</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>朱熹对“格物致知”的理解<ul>\n<li>接着二程夫子来讲<ul>\n<li>天下任何事物，宏观地看，有天理在 最高的一本之道</li>\n<li>任何事物有它的独特之理 分殊之理</li>\n<li>分殊之理是从一本之理中获得</li>\n<li>一本之理作为大一是完满的 分殊之理为小一也是完满的</li>\n<li>分殊之理的不断地“格”、还原 达到一定状态 才可能获得一本之理把握的前提</li>\n</ul>\n</li>\n<li>强调 格物致知是还原具体事物之理 既物而穷理</li>\n<li>格物是致知的前提</li>\n<li>理存在于具体事务当中</li>\n</ul>\n</li>\n<li>王阳明的“格物致知”之说<ul>\n<li>如果理在事物当中 那与我的诚意正心有何关系？</li>\n<li>物着事也 格者正也<ul>\n<li>格君心之非 -&gt; 正君心之非</li>\n<li>“物” 作为一个独立的个体存在</li>\n<li>“事” 体现了一个过程 与我这个主题相关</li>\n</ul>\n</li>\n<li>事物之理不在事物本身 在心中</li>\n<li>强调 我作为实践的主题 如何在事物当中正其心<ul>\n<li>“正” 标准， 是否合乎本心<ul>\n<li>合乎本心 既是 合乎正理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>强调 格物和致知是统一的整体</li>\n<li>致知： 致良知<ul>\n<li>格物既是正心</li>\n<li>格物致知：致吾心之良知于事事物物 事事物物各得齐正</li>\n</ul>\n</li>\n<li>意之所在便是物 意在于事亲则事亲为一物</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第五课-本体与主体性的自我建立\"><a href=\"#第五课-本体与主体性的自我建立\" class=\"headerlink\" title=\"第五课 本体与主体性的自我建立\"></a>第五课 本体与主体性的自我建立</h2><ul>\n<li>孟子的“良知良能”<ul>\n<li>人不学而能谓之良能 不学而知着谓之良知<ul>\n<li>凡人皆有恻隐、羞恶、是非、辞让之心 是不学而知的 是我原本就固有的</li>\n<li>恻隐之心 作为人之端 在人本身存在着固有性</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>张载对“德性”、“闻见”之知的区别<ul>\n<li>德性之知不源于见闻 <ul>\n<li>德行：天德良知 超经验的</li>\n<li>但是德性之知是要通过经验表达的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>王阳明的“良知”说<ul>\n<li>正德十五年 平定朱宸濠之后结合自己的生活经验提出</li>\n<li>与前两位不近相同</li>\n<li>良知： 心之本体（存在本体、德行本体、理性本体）<ul>\n<li>是生活中经验知识活动之所以可能的根据</li>\n<li>是知识本身的本体 是理性的根据</li>\n<li>原本就能知是非 是心体自然</li>\n<li>原本就是至善 知善恶的 是德行之本</li>\n<li>天命之所谓性</li>\n</ul>\n</li>\n<li>正是因为良知的存在 我们才具备存在和德行的本质，以及获得和展现知识的能力</li>\n<li>心的良知是人作为主体的本质依据<ul>\n<li>唯有实现了自我建立的人才能称为主体</li>\n<li>通过个体内在的自觉 在自我中建立起来</li>\n</ul>\n</li>\n<li>良知是为人之本</li>\n<li>人的存在的本质 就是他的德行本质<ul>\n<li>生活中 人是如何表达自己？ <ul>\n<li>道德实践才能彰显个体的存在</li>\n</ul>\n</li>\n<li>道德的内在自觉<ul>\n<li>因为合乎本性的 所以才去做</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>每个个体存在性的表达 是要通过自觉的道德的建立来实现的<ul>\n<li>如此 个体的存在 才不仅仅是自然本身状态的 同时是合乎天道的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>存在本体、德行本体、理性本体<ul>\n<li>理性本源 是一切只是活动之所以可能的根据 是经验生活中是非判断的根据<ul>\n<li>是非 不仅仅是对错之分 还有善恶之分</li>\n<li>泯灭良知 是指 良知没有获得表达和体现 在表现的层面上讲 泯灭良知</li>\n</ul>\n</li>\n<li>德行本源 是道德所以存在的依据</li>\n<li>存在本源 是人的存在本质和最高的天道本质实现同一 并且这种同一性是作为本源的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第六课-本心的自我开显与自我表达\"><a href=\"#第六课-本心的自我开显与自我表达\" class=\"headerlink\" title=\"第六课 本心的自我开显与自我表达\"></a>第六课 本心的自我开显与自我表达</h2><ul>\n<li>致良知的现实必要性 阳明对生命现状的忧虑<ul>\n<li>人们在利益的追逐当中丧失自我 遮蔽了自我的良知 所以要致良知</li>\n<li>孟子： 求放心 放逸之心</li>\n<li>安身立命的基础</li>\n<li>对与人道相违背的生活现象的反思和批评</li>\n</ul>\n</li>\n<li>致良知的双向展开<ul>\n<li>良知的“自知”、“自明”<ul>\n<li>呼唤自己的良知 良知才会以原本的状态出现</li>\n<li><strong>反思</strong> 对自我在生活中的观点、意识、行为进行思索、内省</li>\n<li>只有经过自我反思 我们的<strong>主体性才得以建立</strong></li>\n<li>用王阳明的话来讲 合乎良知叫”诚意“ 也既是”正心“</li>\n<li>”自知“、”自明“ 才能表达自我的主体性建立 必须通过自我实现</li>\n<li>如何对经验现象的实行确切无误的判断<ul>\n<li>有境才有心动 心动才会有善恶是非</li>\n<li>动念之际去为善去恶</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“致吾心之良知于事事物物”<ul>\n<li>良知的自我展开 在事物的处理过程表现出来</li>\n<li>明明德于天下</li>\n<li>任何事物都应该在良知下进行 物得其正 我们存在性的自我表达</li>\n<li>身 心 意 知 物 融为一体</li>\n<li>人只有实践才能把主体的内在世界和客观世界连在一起</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>致良知于个体意义世界的宏观构建<ul>\n<li>对于物质的欲望 本能的具有扩张性 它具有向恶的转化的可能 欲本身即是越界</li>\n<li>孔子讲以礼来节制自我的情感<ul>\n<li>这种节制在道德上是好的 更符合公共生活</li>\n<li>良知的恰当表达是具有公共性的</li>\n</ul>\n</li>\n<li>在自我与他人的事物观察中 人们更多的是用私欲的权衡 而非对他人客观 对自己混沌<ul>\n<li>良知首先是在自我中呈现 随之才能对其他事物有正确的理解</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第七课-心外无物：生命境界的无限圆融\"><a href=\"#第七课-心外无物：生命境界的无限圆融\" class=\"headerlink\" title=\"第七课 心外无物：生命境界的无限圆融\"></a>第七课 心外无物：生命境界的无限圆融</h2><ul>\n<li>“心”与“物”的关系<ul>\n<li>“物”是“事”，“事”是介入了主体活动过程的</li>\n<li>事物的两种存在状态： **“寂”与“显”</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>山中之花自开自落 没看到花的时候 你和花同归于“寂”，当你看到时是“显”</li>\n<li><strong>“寂“并非无，而是事物存在的一种状态</strong><ul>\n<li>是王阳明确认的事物的客观存在性</li>\n</ul>\n</li>\n<li><strong>”显“ 当你看到花时 在你心中 一时分明起来</strong><ul>\n<li><strong>看到 是”寂“到”显“的转换</strong></li>\n</ul>\n</li>\n<li>心的本体的存在 原本是”寂“、是不动的，但却包含着向”显“转换的无限可能，反之亦然 这叫做”寂感神应“ 没前后之分</li>\n<li>看到花时 它由静转化为动，成为主题的对象，关系情景构成</li>\n<li>体用一源 现为无间 无前无后无中间</li>\n<li>任何事物的客观存在状态 只有在特定的情景中 客观物才以它原本的样式显现</li>\n<li>任何客观物 当它以一种纯粹的客观存在时 包含”寂“和”显“两种状态 只不过呈现给主题的状态不同</li>\n<li><strong>王阳明的讨论并不涉及 事物是否可以脱离人的主观意识而存在 也就是并不涉及唯心主义讨论的问题</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“心外无物”作为一种生命境界<ul>\n<li>心不在焉 -&gt; 听而不闻 视而不见 食而不知其味</li>\n<li>“关心”<ul>\n<li>一个事物在成为我的对象之前 它的存在跟我是不“关心”的 它的存在对我是无意义的</li>\n<li>王阳明讲的一个真正的仁人是与天下事相关心的 是把世界万物容纳到个人的主体当中</li>\n</ul>\n</li>\n<li>致良知 通过主体的生活、道德实践 尽可能扩展我们的心灵世界 使一切万物都能够到达、进入的我的主体世界 如此我的心便是和天下万物相关 最后的圆融境界叫“无心外之物”</li>\n<li>做不到 可以<strong>心向往之</strong></li>\n<li>“心外无物” 是仁人的境界<ul>\n<li>把“物”作为个人主体的一部分</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“心外无物”与主题价值世界的构建<ul>\n<li>个人主体世界的构建完全取决于我们主体自我的实践及其方式</li>\n<li>个人要尽可能扩充、表达我们的良知 努力进行生活实践 并将实践纳入个人的主体世界<ul>\n<li>我们的意义世界 便是在实践当中不断的建立和扩张<ul>\n<li>主体的世界和客观世界不断的链接起来后 个人的主体世界也越来越宏达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“心外无物”是生命的最高境界，是人生自我价值不断扩展和实现</li>\n</ul>\n</li>\n<li>（个人注记：你的主体世界便是你人生的价值。想到了精致的利己主义。利己没有什么错误，但致良知能够极大的丰富我们的主体世界，无论是从哪个角度的丰富，都会让其更加丰富多彩。即便我们的人生价值是丰富自己的体验或者收获更多的物质，那么致良知也是对其有很大的帮助的。比如丰富了对看待事物的视角，体验自然也就丰富了。如此来讲即便只谈利己也不必排斥“心外无物”。心向往之，实践前行。）</li>\n</ul>\n<h2 id=\"第八课-天泉证道“四句教”阳明学派的分化\"><a href=\"#第八课-天泉证道“四句教”阳明学派的分化\" class=\"headerlink\" title=\"第八课 天泉证道“四句教”阳明学派的分化\"></a>第八课 天泉证道“四句教”阳明学派的分化</h2><ul>\n<li>“天泉证道”的背景 “四句教”问题<ul>\n<li>“四句教” 仅出现在《传习录》下卷和年谱中 未出现在王阳明自己的作品中<ul>\n<li>无善无恶心之本</li>\n<li>有善有恶意之动</li>\n<li>知善知恶是良知</li>\n<li>为善去恶是格物</li>\n</ul>\n</li>\n<li>弟子钱德洪和王畿是在天泉桥向王阳明请教这四句话的意思的 所以叫做“天泉证道”</li>\n</ul>\n</li>\n<li>钱德洪关于“四句教”的理解<ul>\n<li>认为是王门宗旨 是究竟之说</li>\n<li>良知原本是无善无恶的 对圣人如此 但普通人不免有习心在 不免有私欲 所以 意之动就会有善有恶 于是要求我们在一念发动之动给克制住</li>\n<li>是非善恶良知本是知道的 所以要为善去恶</li>\n</ul>\n</li>\n<li>王畿(jī)（龙溪）关于“四句教”的理解<ul>\n<li>认为是权宜之说</li>\n<li>认为<ul>\n<li>无心之心则藏秘</li>\n<li>无意之意则应圆</li>\n<li>无知之知则体寂</li>\n<li>无物之物则用神</li>\n</ul>\n</li>\n<li>认为 心如果是无善无恶的 那么 意、知、物都应该是无善无恶的 不可能突然冒出来有善有恶的意</li>\n</ul>\n</li>\n<li>“四句教”与王学分化的关系<ul>\n<li>“天泉证道”，王阳明认为 人非利根和钝根之人<ul>\n<li>利根之人 聪慧 一点就透<ul>\n<li>一悟本体既是工夫</li>\n<li>便是王畿所讲</li>\n<li>但此般根基之人很少</li>\n</ul>\n</li>\n<li>钝根之人 愚笨 需要慢慢学慢慢习<ul>\n<li>对于普通人还是要讲为善去恶</li>\n<li>钱德洪之说</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>黄宗羲对王钱二人的评价<ul>\n<li>因其二人而风行 也因此二人而渐失其传</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“四句教”的具体分析<ul>\n<li>无善无恶心之本<ul>\n<li>无善无恶是为至善 </li>\n<li>讲的是本心自身的实在的状态 是未发之中 是无法判断的<ul>\n<li>因为善恶是基于经验世界检验价值的相对判断</li>\n<li>而<strong>至善是超经验的 是绝对的价值原点 由此才能对事物进行判断</strong><ul>\n<li>比如称用于权衡他物 眼睛是无色的才可以分辨颜色 镜子本无一物才能照出来事物本身</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>有善有恶意之动<ul>\n<li>意 是心之动的主动状态 是有境，有原因的<ul>\n<li>所以是一种经验状态</li>\n<li>没有对物、境构成关系之前 本体归于本相之寂</li>\n<li>所以它一定会落于某个方面 才有善恶之分</li>\n<li>价值只能在经验的世界当中显现它自己</li>\n</ul>\n</li>\n<li>心之动合理的方面是讲 心之动是合乎本体 是合乎心本来状态的 所以这样的一动 在价值上会落于善的方面</li>\n</ul>\n</li>\n<li>知善知恶是良知<ul>\n<li>良知本身是自知自明 知善知恶的 心体向经验转换时 它是可以判断善恶的</li>\n</ul>\n</li>\n<li>为善去恶是格物<ul>\n<li>当良知判断出事物的善恶之后 人应该朝着善的方向去做</li>\n<li>而这个过程便是 诚意正心</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第九课-心体的自我澄明与价值实现\"><a href=\"#第九课-心体的自我澄明与价值实现\" class=\"headerlink\" title=\"第九课 心体的自我澄明与价值实现\"></a>第九课 心体的自我澄明与价值实现</h2><ul>\n<li>四句教是否存在内在“逻辑”关系<ul>\n<li>不存在内在逻辑关系</li>\n<li>就四个不同层面来讲的</li>\n</ul>\n</li>\n<li>“良知现成”与思相解放<ul>\n<li>王龙溪一派虽偏离了王阳明的思想 但是却带来了思想了解放</li>\n<li>正因为人人都诉诸自己的良知 任何事物在经由良知的审慎之前都是值得怀疑的 所以它要求我们对生活进行审查 我们的价值也在这个过程中建立</li>\n<li>未经理性审查的生活是不值得过的 – 苏格拉底</li>\n<li>但是当我们过度强调良知的审查 就会变成自我的率性而为 陷入以意见为真理的谬误的状态</li>\n</ul>\n</li>\n<li>本体与工夫的关系<ul>\n<li>良知是心之本体 如何显现？ 如何到达？</li>\n<li>工夫 相当于方法论<ul>\n<li>钱德洪：为善去恶既是工夫 在事上磨炼<ul>\n<li>工夫总是相对于本体而言 并且总是相对于本体的开显而言的</li>\n</ul>\n</li>\n<li>王龙溪：工夫是需要的 但不需要为善去恶 不需要在事上磨炼<ul>\n<li>当下悟出无山无恶心之本 即本体工夫</li>\n<li>如果你真正明白这个道理 不需要那么复杂 良知现成</li>\n<li>现成既是本体也是工夫</li>\n<li>良知本顺 致之则逆 不需要致良知</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>王阳明还是非常强调事情的磨炼的</li>\n</ul>\n</li>\n<li>董平老师的观点<ul>\n<li>良知作为价值原点 是超经验的 在生活中的表达是有可能发生问题的</li>\n<li>心之动发为意 是有善有恶的</li>\n<li>生活中充满各种欲望 我们往往容易偏离自我的心灵指导</li>\n<li>所以反思是很重要的</li>\n<li>人需要了解到自我的良知是浩渺的可以容纳世间万物 可以判断世间一切美丑善恶 这样我们才能在天地间堂堂正正的做人</li>\n<li>王阳明遗言：此心光明 亦复何言<ul>\n<li>领会到这点 我们就能对生活稍微超然疏离一点 这样的行为能让我们的精神世界高尚一点</li>\n<li>这种超然和疏离是对欲望的疏离 对利益的看淡 使我们变得高尚</li>\n<li>使我们变得高尚的 不是我们的本能 是我们的德行、良知</li>\n<li>一个懂得致良知的人才会享有崇高的思想境界</li>\n</ul>\n</li>\n<li>客观事物是脱离自我存在的 但只有进入我的世界 才会对我有意义</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"我的理解\"><a href=\"#我的理解\" class=\"headerlink\" title=\"我的理解\"></a>我的理解</h2><ul>\n<li>心学里的良知和禅学里边讲到的对绝对价值的追求很相似。<ul>\n<li>林木大拙讲到禅是超越逻辑的。相对来讲，心学的良知学也是超经验范畴的，讲的也是绝对价值。</li>\n<li>另一方面，禅讲的平常心也对应的“为善去恶”的观念在里边。</li>\n</ul>\n</li>\n<li>而“知行合一”和禅学也都一直在强调思维的一贯性。</li>\n</ul>\n<h2 id=\"注记：\"><a href=\"#注记：\" class=\"headerlink\" title=\"注记：\"></a>注记：</h2><ul>\n<li>以上皆为董平老师的观点 由于他提到“这是我个人的观点”的次数太多，我基本全给省略了。所以作为对阳明心学的一个思考角度来看。在今后读过《传习录》、《大学问》等王阳明的著作之后对比来看更有收获。</li>\n<li>课程地址: <a href=\"http://open.163.com/special/cuvocw/wangyangming.html\" target=\"_blank\" rel=\"noopener\">http://open.163.com/special/cuvocw/wangyangming.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"第二课-心即理：阳明心学的逻辑起点\"><a href=\"#第二课-心即理：阳明心学的逻辑起点\" class=\"headerlink\" title=\"第二课 心即理：阳明心学的逻辑起点\"></a>第二课 心即理：阳明心学的逻辑起点</h2><ul>\n<li>宋代理学的发生<ul>\n<li>陆九渊(象山)提出</li>\n<li>最早可追溯到唐朝韩愈，他提出了道统问题<ul>\n<li>佛教过度繁荣使他感到本土文化忧虑</li>\n<li>提出 焚其书 庐其居 人其人</li>\n</ul>\n</li>\n<li>到了宋朝，北宋五子耗费大量时间研究并领会了佛教和道教的精髓后，对先秦的思想进行了重新构建<ul>\n<li>理学 可以说是对儒家思想的重新构建</li>\n<li>突出了很多原本在儒家思想中不突出的观点<ul>\n<li>比如对人性的探讨</li>\n</ul>\n</li>\n<li>理学 借鉴了一些佛教和道教的思想<ul>\n<li>比如 静坐 -&gt; 打坐</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>南宋(朱熹 乾淳之际)<ul>\n<li>理学 思想基本形成</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>理学的三个基本思想形态<ul>\n<li>朱熹一派 主要来自于程颐的思想<ul>\n<li>理 是思想的最高范畴<ul>\n<li>一本之理<ul>\n<li>最根本的是 对理要有终极体认，才能优入圣域</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>理 是可以达到的目的</li>\n</ul>\n</li>\n<li>陆象山<ul>\n<li>心即理<ul>\n<li>圣人之学 心学也</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>浙东学派 吕祖谦 陈亮<ul>\n<li>理 在人类的日常生活当中 在历史中</li>\n<li>把道的追寻贯彻到人类的生活当中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>朱陆之争<ul>\n<li>他们的争论是对最高实在本身存在性的终极预设发生了歧义 </li>\n</ul>\n</li>\n<li>阳明对陆学的基本观点<ul>\n<li>大段也是 只是粗了</li>\n<li>并没有很细致的论述</li>\n</ul>\n</li>\n<li>“心即理”在阳明心学结构中的地位和作用<ul>\n<li>在龙场的艰难困苦生活中 他提出 如果圣人处在这种环境下 圣人会怎么做</li>\n<li><strong>圣人之道 吾性具足</strong> </li>\n<li>思想境界的升华 意味着世界的改变 </li>\n<li>人在社会中生活，行为是受我们的思想和观念主导 观点改变 感觉也就改变了</li>\n<li>龙场悟道最重要一点就是对“心即理”的体悟</li>\n<li>“本心” 心之本体 是我们的意识 我们的精神 主宰身体的视听言动</li>\n<li>让心回到它本身的主宰地位 我们的行为就会按照它原本的样子呈现 我们的境界自然高尚</li>\n<li><strong>心之本体 就是至善</strong></li>\n<li>宇宙的最高真理与我们的本心是纯然一致的 所以人要大其心</li>\n<li>唯有明白了自身的本质和天道原本是一致的 人的本质原本就是天道在人这个层面的实在状态 这叫做本质上的天人合一</li>\n<li>要成为圣人 最重要的是开显本心 使我们的原本与最高之理相符合的本心 以它原本的样子显现出来 一旦达到那个境界 既是人道和天道的最高实现</li>\n<li>所以要<strong>去私欲 心明既是理明</strong> 既是道明 如镜子般 如实地去反映事物 那就是圣人事业的现实开括</li>\n</ul>\n</li>\n<li>总结<ul>\n<li>本质上 人的本质和天道的本质是同一的 这就为人道(人的现实生活)转进于圣人境界造成了理论前提</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第三课-知行合一：阳明心学的实践品格\"><a href=\"#第三课-知行合一：阳明心学的实践品格\" class=\"headerlink\" title=\"第三课 知行合一：阳明心学的实践品格\"></a>第三课 知行合一：阳明心学的实践品格</h2><ul>\n<li>“知” 、“行” 关系问题<ul>\n<li>《尚书·说命》：知之非艰 行之惟艰</li>\n<li>孔子《论语》：<ul>\n<li>学而时习之不亦乐乎</li>\n<li>不知而行之者 吾无是业： 知是重要行的重要前提</li>\n<li>吾欲托之空言 不如见之行事之深切著明也：实践才是把只是呈现出来 转换价值的根本途径</li>\n</ul>\n</li>\n<li>《大学》：<ul>\n<li>未有学养子而后嫁者也： 亲子之爱是天生的 对子女的慈爱是自然流露的</li>\n</ul>\n</li>\n<li>佛教 天台宗：<ul>\n<li>止观双修 定慧均等修止观</li>\n<li>四明知礼（北宋）：智为行本则行借智生 行能成智则智借行成</li>\n</ul>\n</li>\n<li>朱熹：<ul>\n<li>知行长相须（依附） 强调知与行的并列关系</li>\n<li>知之俞明则行之俞笃 行之俞笃则知之俞明</li>\n</ul>\n</li>\n<li>吕祖谦：<ul>\n<li>致知力行不是两截</li>\n<li>禅宗：磨镜所以明镜</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“知行合一”的思想渊源<ul>\n<li>朱熹：真知必能行</li>\n<li>王阳明：真知既是行：合二为一</li>\n</ul>\n</li>\n<li>“知行合一”的具体观点（知就是行 行就是知）<ul>\n<li>两个层面<ul>\n<li>知识层面<ul>\n<li>在事物当中获得知识</li>\n<li>如何了解？<ul>\n<li>比如 孝敬父母。知道如何做 然后做是获得知识的过程 也是表达知识的过程</li>\n<li><strong>知和行是同一个完整的过程</strong><ul>\n<li>知是行的起点 行是知的完成</li>\n<li>知识的最后形态 是生活的实践</li>\n</ul>\n</li>\n<li>（个人注记：突然想到业内的 talk is cheap, show me the code)<ul>\n<li>比如数学是机器学习的基础 但实践要在学理论的同时进行 而不是数学学完后就行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>一念发动处便既是行了<ul>\n<li>意识的流动本身就是行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>良知学说层面<ul>\n<li>王阳明经常从 知-&gt;良知 的层面上讲</li>\n<li>良知的自知 自己对自己的领悟</li>\n<li>表达自知 通过行来表达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>知之真切笃实处既是行 行之明觉精察处既是知 知行功夫本不可离</strong><ul>\n<li>当对知的了解层度达到真切笃实处便是行 把知作为一个过程</li>\n<li>当行为达到明觉精察 一定是真实只是的直接表达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对所谓明阳“以知代行”说的批评<ul>\n<li>王阳明强调知识的过程必定是通过一个实践的过程体现的</li>\n<li>最终的实践才是知识价值获得实现的最后境界</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第四课-格物致知：知识论域的实践转向\"><a href=\"#第四课-格物致知：知识论域的实践转向\" class=\"headerlink\" title=\"第四课 格物致知：知识论域的实践转向\"></a>第四课 格物致知：知识论域的实践转向</h2><ul>\n<li>“格物致知”问题的来源<ul>\n<li>来源于《大学》<ul>\n<li>三纲：大学之道 在明明德 在亲民 在止于至善</li>\n<li>八条目： 格物 致知 诚意 正心 修身 齐家 治国 平天下</li>\n<li>起点是：格物 致知</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>朱熹对“格物致知”的理解<ul>\n<li>接着二程夫子来讲<ul>\n<li>天下任何事物，宏观地看，有天理在 最高的一本之道</li>\n<li>任何事物有它的独特之理 分殊之理</li>\n<li>分殊之理是从一本之理中获得</li>\n<li>一本之理作为大一是完满的 分殊之理为小一也是完满的</li>\n<li>分殊之理的不断地“格”、还原 达到一定状态 才可能获得一本之理把握的前提</li>\n</ul>\n</li>\n<li>强调 格物致知是还原具体事物之理 既物而穷理</li>\n<li>格物是致知的前提</li>\n<li>理存在于具体事务当中</li>\n</ul>\n</li>\n<li>王阳明的“格物致知”之说<ul>\n<li>如果理在事物当中 那与我的诚意正心有何关系？</li>\n<li>物着事也 格者正也<ul>\n<li>格君心之非 -&gt; 正君心之非</li>\n<li>“物” 作为一个独立的个体存在</li>\n<li>“事” 体现了一个过程 与我这个主题相关</li>\n</ul>\n</li>\n<li>事物之理不在事物本身 在心中</li>\n<li>强调 我作为实践的主题 如何在事物当中正其心<ul>\n<li>“正” 标准， 是否合乎本心<ul>\n<li>合乎本心 既是 合乎正理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>强调 格物和致知是统一的整体</li>\n<li>致知： 致良知<ul>\n<li>格物既是正心</li>\n<li>格物致知：致吾心之良知于事事物物 事事物物各得齐正</li>\n</ul>\n</li>\n<li>意之所在便是物 意在于事亲则事亲为一物</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第五课-本体与主体性的自我建立\"><a href=\"#第五课-本体与主体性的自我建立\" class=\"headerlink\" title=\"第五课 本体与主体性的自我建立\"></a>第五课 本体与主体性的自我建立</h2><ul>\n<li>孟子的“良知良能”<ul>\n<li>人不学而能谓之良能 不学而知着谓之良知<ul>\n<li>凡人皆有恻隐、羞恶、是非、辞让之心 是不学而知的 是我原本就固有的</li>\n<li>恻隐之心 作为人之端 在人本身存在着固有性</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>张载对“德性”、“闻见”之知的区别<ul>\n<li>德性之知不源于见闻 <ul>\n<li>德行：天德良知 超经验的</li>\n<li>但是德性之知是要通过经验表达的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>王阳明的“良知”说<ul>\n<li>正德十五年 平定朱宸濠之后结合自己的生活经验提出</li>\n<li>与前两位不近相同</li>\n<li>良知： 心之本体（存在本体、德行本体、理性本体）<ul>\n<li>是生活中经验知识活动之所以可能的根据</li>\n<li>是知识本身的本体 是理性的根据</li>\n<li>原本就能知是非 是心体自然</li>\n<li>原本就是至善 知善恶的 是德行之本</li>\n<li>天命之所谓性</li>\n</ul>\n</li>\n<li>正是因为良知的存在 我们才具备存在和德行的本质，以及获得和展现知识的能力</li>\n<li>心的良知是人作为主体的本质依据<ul>\n<li>唯有实现了自我建立的人才能称为主体</li>\n<li>通过个体内在的自觉 在自我中建立起来</li>\n</ul>\n</li>\n<li>良知是为人之本</li>\n<li>人的存在的本质 就是他的德行本质<ul>\n<li>生活中 人是如何表达自己？ <ul>\n<li>道德实践才能彰显个体的存在</li>\n</ul>\n</li>\n<li>道德的内在自觉<ul>\n<li>因为合乎本性的 所以才去做</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>每个个体存在性的表达 是要通过自觉的道德的建立来实现的<ul>\n<li>如此 个体的存在 才不仅仅是自然本身状态的 同时是合乎天道的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>存在本体、德行本体、理性本体<ul>\n<li>理性本源 是一切只是活动之所以可能的根据 是经验生活中是非判断的根据<ul>\n<li>是非 不仅仅是对错之分 还有善恶之分</li>\n<li>泯灭良知 是指 良知没有获得表达和体现 在表现的层面上讲 泯灭良知</li>\n</ul>\n</li>\n<li>德行本源 是道德所以存在的依据</li>\n<li>存在本源 是人的存在本质和最高的天道本质实现同一 并且这种同一性是作为本源的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第六课-本心的自我开显与自我表达\"><a href=\"#第六课-本心的自我开显与自我表达\" class=\"headerlink\" title=\"第六课 本心的自我开显与自我表达\"></a>第六课 本心的自我开显与自我表达</h2><ul>\n<li>致良知的现实必要性 阳明对生命现状的忧虑<ul>\n<li>人们在利益的追逐当中丧失自我 遮蔽了自我的良知 所以要致良知</li>\n<li>孟子： 求放心 放逸之心</li>\n<li>安身立命的基础</li>\n<li>对与人道相违背的生活现象的反思和批评</li>\n</ul>\n</li>\n<li>致良知的双向展开<ul>\n<li>良知的“自知”、“自明”<ul>\n<li>呼唤自己的良知 良知才会以原本的状态出现</li>\n<li><strong>反思</strong> 对自我在生活中的观点、意识、行为进行思索、内省</li>\n<li>只有经过自我反思 我们的<strong>主体性才得以建立</strong></li>\n<li>用王阳明的话来讲 合乎良知叫”诚意“ 也既是”正心“</li>\n<li>”自知“、”自明“ 才能表达自我的主体性建立 必须通过自我实现</li>\n<li>如何对经验现象的实行确切无误的判断<ul>\n<li>有境才有心动 心动才会有善恶是非</li>\n<li>动念之际去为善去恶</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“致吾心之良知于事事物物”<ul>\n<li>良知的自我展开 在事物的处理过程表现出来</li>\n<li>明明德于天下</li>\n<li>任何事物都应该在良知下进行 物得其正 我们存在性的自我表达</li>\n<li>身 心 意 知 物 融为一体</li>\n<li>人只有实践才能把主体的内在世界和客观世界连在一起</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>致良知于个体意义世界的宏观构建<ul>\n<li>对于物质的欲望 本能的具有扩张性 它具有向恶的转化的可能 欲本身即是越界</li>\n<li>孔子讲以礼来节制自我的情感<ul>\n<li>这种节制在道德上是好的 更符合公共生活</li>\n<li>良知的恰当表达是具有公共性的</li>\n</ul>\n</li>\n<li>在自我与他人的事物观察中 人们更多的是用私欲的权衡 而非对他人客观 对自己混沌<ul>\n<li>良知首先是在自我中呈现 随之才能对其他事物有正确的理解</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第七课-心外无物：生命境界的无限圆融\"><a href=\"#第七课-心外无物：生命境界的无限圆融\" class=\"headerlink\" title=\"第七课 心外无物：生命境界的无限圆融\"></a>第七课 心外无物：生命境界的无限圆融</h2><ul>\n<li>“心”与“物”的关系<ul>\n<li>“物”是“事”，“事”是介入了主体活动过程的</li>\n<li>事物的两种存在状态： **“寂”与“显”</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>山中之花自开自落 没看到花的时候 你和花同归于“寂”，当你看到时是“显”</li>\n<li><strong>“寂“并非无，而是事物存在的一种状态</strong><ul>\n<li>是王阳明确认的事物的客观存在性</li>\n</ul>\n</li>\n<li><strong>”显“ 当你看到花时 在你心中 一时分明起来</strong><ul>\n<li><strong>看到 是”寂“到”显“的转换</strong></li>\n</ul>\n</li>\n<li>心的本体的存在 原本是”寂“、是不动的，但却包含着向”显“转换的无限可能，反之亦然 这叫做”寂感神应“ 没前后之分</li>\n<li>看到花时 它由静转化为动，成为主题的对象，关系情景构成</li>\n<li>体用一源 现为无间 无前无后无中间</li>\n<li>任何事物的客观存在状态 只有在特定的情景中 客观物才以它原本的样式显现</li>\n<li>任何客观物 当它以一种纯粹的客观存在时 包含”寂“和”显“两种状态 只不过呈现给主题的状态不同</li>\n<li><strong>王阳明的讨论并不涉及 事物是否可以脱离人的主观意识而存在 也就是并不涉及唯心主义讨论的问题</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“心外无物”作为一种生命境界<ul>\n<li>心不在焉 -&gt; 听而不闻 视而不见 食而不知其味</li>\n<li>“关心”<ul>\n<li>一个事物在成为我的对象之前 它的存在跟我是不“关心”的 它的存在对我是无意义的</li>\n<li>王阳明讲的一个真正的仁人是与天下事相关心的 是把世界万物容纳到个人的主体当中</li>\n</ul>\n</li>\n<li>致良知 通过主体的生活、道德实践 尽可能扩展我们的心灵世界 使一切万物都能够到达、进入的我的主体世界 如此我的心便是和天下万物相关 最后的圆融境界叫“无心外之物”</li>\n<li>做不到 可以<strong>心向往之</strong></li>\n<li>“心外无物” 是仁人的境界<ul>\n<li>把“物”作为个人主体的一部分</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“心外无物”与主题价值世界的构建<ul>\n<li>个人主体世界的构建完全取决于我们主体自我的实践及其方式</li>\n<li>个人要尽可能扩充、表达我们的良知 努力进行生活实践 并将实践纳入个人的主体世界<ul>\n<li>我们的意义世界 便是在实践当中不断的建立和扩张<ul>\n<li>主体的世界和客观世界不断的链接起来后 个人的主体世界也越来越宏达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“心外无物”是生命的最高境界，是人生自我价值不断扩展和实现</li>\n</ul>\n</li>\n<li>（个人注记：你的主体世界便是你人生的价值。想到了精致的利己主义。利己没有什么错误，但致良知能够极大的丰富我们的主体世界，无论是从哪个角度的丰富，都会让其更加丰富多彩。即便我们的人生价值是丰富自己的体验或者收获更多的物质，那么致良知也是对其有很大的帮助的。比如丰富了对看待事物的视角，体验自然也就丰富了。如此来讲即便只谈利己也不必排斥“心外无物”。心向往之，实践前行。）</li>\n</ul>\n<h2 id=\"第八课-天泉证道“四句教”阳明学派的分化\"><a href=\"#第八课-天泉证道“四句教”阳明学派的分化\" class=\"headerlink\" title=\"第八课 天泉证道“四句教”阳明学派的分化\"></a>第八课 天泉证道“四句教”阳明学派的分化</h2><ul>\n<li>“天泉证道”的背景 “四句教”问题<ul>\n<li>“四句教” 仅出现在《传习录》下卷和年谱中 未出现在王阳明自己的作品中<ul>\n<li>无善无恶心之本</li>\n<li>有善有恶意之动</li>\n<li>知善知恶是良知</li>\n<li>为善去恶是格物</li>\n</ul>\n</li>\n<li>弟子钱德洪和王畿是在天泉桥向王阳明请教这四句话的意思的 所以叫做“天泉证道”</li>\n</ul>\n</li>\n<li>钱德洪关于“四句教”的理解<ul>\n<li>认为是王门宗旨 是究竟之说</li>\n<li>良知原本是无善无恶的 对圣人如此 但普通人不免有习心在 不免有私欲 所以 意之动就会有善有恶 于是要求我们在一念发动之动给克制住</li>\n<li>是非善恶良知本是知道的 所以要为善去恶</li>\n</ul>\n</li>\n<li>王畿(jī)（龙溪）关于“四句教”的理解<ul>\n<li>认为是权宜之说</li>\n<li>认为<ul>\n<li>无心之心则藏秘</li>\n<li>无意之意则应圆</li>\n<li>无知之知则体寂</li>\n<li>无物之物则用神</li>\n</ul>\n</li>\n<li>认为 心如果是无善无恶的 那么 意、知、物都应该是无善无恶的 不可能突然冒出来有善有恶的意</li>\n</ul>\n</li>\n<li>“四句教”与王学分化的关系<ul>\n<li>“天泉证道”，王阳明认为 人非利根和钝根之人<ul>\n<li>利根之人 聪慧 一点就透<ul>\n<li>一悟本体既是工夫</li>\n<li>便是王畿所讲</li>\n<li>但此般根基之人很少</li>\n</ul>\n</li>\n<li>钝根之人 愚笨 需要慢慢学慢慢习<ul>\n<li>对于普通人还是要讲为善去恶</li>\n<li>钱德洪之说</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>黄宗羲对王钱二人的评价<ul>\n<li>因其二人而风行 也因此二人而渐失其传</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“四句教”的具体分析<ul>\n<li>无善无恶心之本<ul>\n<li>无善无恶是为至善 </li>\n<li>讲的是本心自身的实在的状态 是未发之中 是无法判断的<ul>\n<li>因为善恶是基于经验世界检验价值的相对判断</li>\n<li>而<strong>至善是超经验的 是绝对的价值原点 由此才能对事物进行判断</strong><ul>\n<li>比如称用于权衡他物 眼睛是无色的才可以分辨颜色 镜子本无一物才能照出来事物本身</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>有善有恶意之动<ul>\n<li>意 是心之动的主动状态 是有境，有原因的<ul>\n<li>所以是一种经验状态</li>\n<li>没有对物、境构成关系之前 本体归于本相之寂</li>\n<li>所以它一定会落于某个方面 才有善恶之分</li>\n<li>价值只能在经验的世界当中显现它自己</li>\n</ul>\n</li>\n<li>心之动合理的方面是讲 心之动是合乎本体 是合乎心本来状态的 所以这样的一动 在价值上会落于善的方面</li>\n</ul>\n</li>\n<li>知善知恶是良知<ul>\n<li>良知本身是自知自明 知善知恶的 心体向经验转换时 它是可以判断善恶的</li>\n</ul>\n</li>\n<li>为善去恶是格物<ul>\n<li>当良知判断出事物的善恶之后 人应该朝着善的方向去做</li>\n<li>而这个过程便是 诚意正心</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第九课-心体的自我澄明与价值实现\"><a href=\"#第九课-心体的自我澄明与价值实现\" class=\"headerlink\" title=\"第九课 心体的自我澄明与价值实现\"></a>第九课 心体的自我澄明与价值实现</h2><ul>\n<li>四句教是否存在内在“逻辑”关系<ul>\n<li>不存在内在逻辑关系</li>\n<li>就四个不同层面来讲的</li>\n</ul>\n</li>\n<li>“良知现成”与思相解放<ul>\n<li>王龙溪一派虽偏离了王阳明的思想 但是却带来了思想了解放</li>\n<li>正因为人人都诉诸自己的良知 任何事物在经由良知的审慎之前都是值得怀疑的 所以它要求我们对生活进行审查 我们的价值也在这个过程中建立</li>\n<li>未经理性审查的生活是不值得过的 – 苏格拉底</li>\n<li>但是当我们过度强调良知的审查 就会变成自我的率性而为 陷入以意见为真理的谬误的状态</li>\n</ul>\n</li>\n<li>本体与工夫的关系<ul>\n<li>良知是心之本体 如何显现？ 如何到达？</li>\n<li>工夫 相当于方法论<ul>\n<li>钱德洪：为善去恶既是工夫 在事上磨炼<ul>\n<li>工夫总是相对于本体而言 并且总是相对于本体的开显而言的</li>\n</ul>\n</li>\n<li>王龙溪：工夫是需要的 但不需要为善去恶 不需要在事上磨炼<ul>\n<li>当下悟出无山无恶心之本 即本体工夫</li>\n<li>如果你真正明白这个道理 不需要那么复杂 良知现成</li>\n<li>现成既是本体也是工夫</li>\n<li>良知本顺 致之则逆 不需要致良知</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>王阳明还是非常强调事情的磨炼的</li>\n</ul>\n</li>\n<li>董平老师的观点<ul>\n<li>良知作为价值原点 是超经验的 在生活中的表达是有可能发生问题的</li>\n<li>心之动发为意 是有善有恶的</li>\n<li>生活中充满各种欲望 我们往往容易偏离自我的心灵指导</li>\n<li>所以反思是很重要的</li>\n<li>人需要了解到自我的良知是浩渺的可以容纳世间万物 可以判断世间一切美丑善恶 这样我们才能在天地间堂堂正正的做人</li>\n<li>王阳明遗言：此心光明 亦复何言<ul>\n<li>领会到这点 我们就能对生活稍微超然疏离一点 这样的行为能让我们的精神世界高尚一点</li>\n<li>这种超然和疏离是对欲望的疏离 对利益的看淡 使我们变得高尚</li>\n<li>使我们变得高尚的 不是我们的本能 是我们的德行、良知</li>\n<li>一个懂得致良知的人才会享有崇高的思想境界</li>\n</ul>\n</li>\n<li>客观事物是脱离自我存在的 但只有进入我的世界 才会对我有意义</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"我的理解\"><a href=\"#我的理解\" class=\"headerlink\" title=\"我的理解\"></a>我的理解</h2><ul>\n<li>心学里的良知和禅学里边讲到的对绝对价值的追求很相似。<ul>\n<li>林木大拙讲到禅是超越逻辑的。相对来讲，心学的良知学也是超经验范畴的，讲的也是绝对价值。</li>\n<li>另一方面，禅讲的平常心也对应的“为善去恶”的观念在里边。</li>\n</ul>\n</li>\n<li>而“知行合一”和禅学也都一直在强调思维的一贯性。</li>\n</ul>\n<h2 id=\"注记：\"><a href=\"#注记：\" class=\"headerlink\" title=\"注记：\"></a>注记：</h2><ul>\n<li>以上皆为董平老师的观点 由于他提到“这是我个人的观点”的次数太多，我基本全给省略了。所以作为对阳明心学的一个思考角度来看。在今后读过《传习录》、《大学问》等王阳明的著作之后对比来看更有收获。</li>\n<li>课程地址: <a href=\"http://open.163.com/special/cuvocw/wangyangming.html\" target=\"_blank\" rel=\"noopener\">http://open.163.com/special/cuvocw/wangyangming.html</a></li>\n</ul>\n"},{"layout":"post","title":"《禅学入门》 林木大拙 读书笔记","date":"2017-09-12T04:00:00.000Z","description":"禅学入门 林木大拙 读书笔记","keywords":"禅学, 林木大拙","_content":"\n## 绪论\n\n* 所谓原始佛教，是一粒种子，从这粒种子注定要生出将进一步生长的东方佛教。\n* 在中国、日本发展的佛教诸派中，有一个特殊的僧人集团，它主张直接从佛教创始人那里接受佛教的精髓和精神。它不依靠任何秘密文字，也没有任何神秘仪式，在佛教诸派中占据了最显赫的地位。这不仅是由于它在历史上的重要性，而且由于它是最具独创性的。它倡导的方法是激励人心的。在学术上称它为佛心宗，通常称为禅（梵语 dhyāna）。\n* 禅最大限度地强调了个人经验是必不可少的。没有这种经验，任何深远的能力即使是有用的，也不能有效地被掌握。\n* 佛教徒不承认超自然的作用。禅的精神训练方法是实际的、系统的。\n* 神秘主义性质是拒绝逻辑剖析，而逻辑性又是西方思想最为显著的特征之一。东方的推理方法是综合的，与其对每个事物一一分析，宁愿在直觉中把握它的全体。\n* 佛教精神为了实际的人生修行，舍弃了高高在上的哲学上层结构，其结果就不能不变成禅。\n\n## 禅是什么？\n\n* 禅是人的精神，信奉人的内在的纯洁与善。\n* 禅把依靠洞察达到心的本性，发现心本身，和以自心为主，作为目的。达到此心或精神的真性是禅宗的根本目的。\n    * 个人注记：有点像王阳明知行合一的最高境界\n* 禅强调不受任何拘束，脱离一切非自然的妨害。\n* 禅的基本思想是与我们心内的活动接触，它不依靠任何外部的附加物，尽可能选择最直接的道路。\n* 由于禅只认识日常生活本身的事实，因此它就能在最平凡、最平稳的普通人的生活中表现出来。\n* 但向己求 勿从它觅。\n\n## 禅是虚无主义吗？\n\n* “所谓中道，无中边亦无二边。外敷色声，偏于一边，内生妄念，又偏于另一边。此两边皆无时，中边亦无，即名中道”\n* 禅从它的性质上极为自然地主张“此亦非，彼亦非，一切皆非”。 没有否定，没有肯定，只有简明的事实，**纯粹的经验**，以及我们的实在和思想的基础本身。\n    * 个人注记：纯粹 超越了是非 也超越了虚无的否定一切\n* 在禅中，有某种自我肯定。而且它是自由的，绝对的，不知界限为何物，拒绝抽象的处理方法。\n* 禅的否定不一定是逻辑意义上的否定，肯定也是如此。禅的理解以经验为第一，不能被思想的人为系统法则，“然”、“否”之类常常牵强附会的认识论公式等等所束缚。\n* 不除去“彼此”、“我物”、“汝物”这类最后意识，任何人也不能彻底把握禅，并且“不能见古人来”。\n* 禅的目标是在个人的日常生活现实中，实现超越是非矛盾的统一。\n\n## 非逻辑的禅\n\n* 禅对待的是事实，不是逻辑上和语言上的偏颇的、不完全的表现。\n* 禅经常将心比喻为没有阴翳的明镜。因此跟着禅回到单纯，就要使这明镜经常保持光洁明亮，使来到它面前的东西不依靠任何帮助原原本本地映照在其中。\n* 禅认为我们是语言和逻辑的过于驯服的奴隶。\n* 如果我们希望找到知道某物价值的方法，找到通向精神幸福的道路，就只有努力于断然摆脱一切条件，看看我们是否能够找到既能发现健全的世界，又能内省地理解人生的观察点。\n* “手拿锄头，但事实却没拿” 人们往往认为，逻辑就是人生，逻辑之外没有人生的意义，人们只能顺从它。而事实是大多数人的人生观，都是破坏“思维法则”的。\n    * 个人注记：以为自己掌控着逻辑，实则是被其奴役的。所以手里什么都没有\n* 客观世界的逻辑学和伦理学有着认为努力和操作的痕迹，有着自觉地意识，是不纯的。禅厌恶不纯。\n* 人生是艺术，而且像真正的艺术那样，必须忘却自己。\n* 禅要求发自内心的生活，要求不受规范束缚，各自创造自己的规范。\n\n## 大肯定的禅\n\n* 精神不断地呼唤自由，通过达到没有否定与肯定的对立差别的更高的肯定形态，就可以很容易地得到这种自由。禅就在这种更高的肯定中。\n* 听从我们内在生命的要求，禅提倡任何对立也不能存在的绝对的领域。\n* 禅师们努力除掉弟子们与生俱来所有的立足点，而代之以完全不是立足点的立足点。\n* 禅的训练方法是让人一下陷入两难境地。我们必须不运用逻辑，依靠更高迈的心灵，自己找到从这种两难境地中脱身的办法。\n    * 比如瓶中养鹅的故事\n* 人生是事实，任何说明也不需要，也不能切中肯綮(qìng)。说明就是证明。难道我们活着这件事还需要什么证明吗？活着，仅仅是活着，还不够吗？我们在活着，在肯定，在这里就是纯粹的禅，赤裸裸的禅。\n* 模仿就是奴隶，不要被文字所束缚，必须抓住的是精神。大肯定就活在精神中。然而，精神在何处？这就必须向每日的经验中寻求。在哪里，有我们需要的充足的证据。\n\n## 实际的禅\n\n* “平常心是道” 自己有着沉稳自信的存在，就是禅的真理。\n* 禅的要旨在于捕捉流动的生命。\n* 理解禅要避免抽象、表现和华丽的辞藻。\n* 禅籍中有很多古怪的对“如何是禅”的回答，看似不沾边。然而重要的是，要领会禅，必须深入参透禅师们的内心状态。比如“看，水出高源”，“莫言语”，“此处四面皆山”等 皆为自然的描述，没有高深的意思在里边。\n    * 个人注记：我的理解是生活的每个细微之处都有意识的到往，不可以追求，也不刻意忽视，以平常心视之既是禅。\n        * 超越是非、对错？\n* 禅是自然的，是不能人为制造的，是生命本身的表现，并且是创造性的，这些都是禅的本质特征。因此要抓住禅的真正核心，就要时常注意不为表面的标志所迷惑。\n* “心无形相，非离言语，非不离言语。心常湛然，应用自在。”\n* 禅并非是泛神论，并没有把山川草木看做泛神的表象\n* 禅也不是自然主义或自由主义\n    * 自然主义听从人的自然倾向，不追究它的起源和价值，是一种盲从。\n\n## 悟\n\n* 禅修行的目的在于获得观察事物的新见解。\n* 禅的生活是从这种获得新见解的“悟”开始的。\n* 悟，可以定义为与知或逻辑的理解相对的直觉的洞察。\n* 当人的心在悟中成熟起来时，它们在各处自行降临。\n* 悟的所有原因、条件在内心，只等待着成熟的时机。一旦内心做好准备，世间万物都可使自己直接返回到自己的根源所在，也即是**真我的觉醒**。\n* 禅与思考无关，悟是一种内在的知觉 ---- 但不是对某个单一物的知觉，而是对存在的根本事实的知觉。悟的最终目的地是其自身，除其自身外任何目的都不存在。\n* 悟的心的开启研究的几个要点：\n    1. 悟不是由强烈思念而产生的某种假想状态。它是对物的看法获得的新见解。禅的训练是将意识构建的方法论一举扫荡，重新得到心的整体。\n    2. 悟指向未曾梦到的真理的崭新意识。它是在知的或者表现的事类多重积累后，忽然产生的一种心的激动或爆发。\n    3. 悟是禅存在的理由，没有它，禅就不成其为禅。但悟本身没有方法论。\n    4. 禅必须有至今未曾想过的知觉的独立，有从全新的角度观察旧有事物的新意识的觉醒。\n        1. 禅那，一般认为是指向某种固定思想的一种冥想或静思，并非是禅。\n    5. 禅要求的是绝对自由，连神也要脱离的独立。”应无所住，而生其心“。\n        1. 不同于被神秘主义称为神的东西。因为它有明显的目的物追求，而且得到神时，就要拒绝非神。\n    6. 禅是健全的心理状态。\n\n## 公案\n\n* 禅的独到之处在于公案和坐禅的存在。\n* 坐禅，梵语的禅那，是佛教训练中的三学，即尸罗（戒）、禅那（静虑）、般若（智慧）中的一种。佛教善徒用其全部的诚心诚意恪守佛的垂训，通晓将自己放纵的激情完全抑制住的方法，最后则期望得到足以领会高深的佛教哲理的一切复杂逻辑的智慧。\n* 禅那有“知觉”、“反省”、“凝心”等意义，把精神集中于思想的唯一目的物上。因此，从事禅的修行，是在将外界一切琐事调整为最佳状态时来支配意识，在这种状态中，精神逐渐能够超越于它的烦恼动乱之上。\n* 禅那是指保持心的安静的一般方法，Samādhi（三昧）用以表示作为禅那修行结果所得的心的状态。\n* 禅修行的坐禅与一般佛教徒实行的坐禅，在心的目的上是不同的。在禅中，禅那或坐禅是用以达到解明公案的手段，在禅中，禅那本身不是目的。要了解公案，如果没有彻底的坐禅修行，这种深远的精神真理就不能牢牢扎根于禅学徒的心中。\n* 公案在字面上的意义是指公文或权威法规，是流行于宋代末期的语言。现在指古代禅师的逸话，或是禅师与弟子间的问答，以及禅师提出的命题、提问，禅运用它作为开启人心，达到禅的真理的方法。\n* 虽然心依靠自身也能长大，但人不能无休止等待，无论对善对恶。为了达到自身的目的，总喜欢干涉。在得大于失的情况下，人们欢迎别人的干涉。把它成为改良或进步。因此在纯粹、自然、本质性的禅中导入公案体系，虽是对禅的冒渎，但在某种意义上也是一种进步。\n* 禅师们很清楚，禅如果不是产生于人的内在要求，就不是本然纯粹病充满创造活力的，而公案的手段和技术却在相当程度上是人工的产物。但是，在很难并很少能得到真物本身的情况下，既是是类似物，也是天之恩赐。\n* 现在的学生确实常常接受必要之外、有用之外的帮助。这种软弱教育的缺少，才使过去的禅师们成为具有更为雄大气魄的人物。\n* 心在收到某种束缚、失去自由、听不到声音的情况下，公案只能被看做受限制并被分割的东西。在心从束缚中被解放出来之前，人是不能在此世安住的。\n* 赵州：”庭前柏树子“。柏树子永远是柏树子本身，与泛神论或其他的”论“没有任何关系。人们大概会认为，努力通过逻辑的锁链了解其中包含的意义，就可以解开这一难题。然而，禅已远离我们在三千里之外。公案就象在逻辑分析所不能达到的我们心灵的最深处培育起来那样而得以运用。\n* 公案一般是这段了通向合理性的一切道路。也就是说，当我们几次三番向禅师提出自己的见解（用术语来说叫做”参禅“）时，必须宣告自己的知的摸索已经走入穷途，而这正是禅的研究的真正的出发点。\n* 为了帮助一般读者理解禅，用简便的语言来说，在我们心中，在相对构造的意识的”域外“，存在着未知的秘密。将它成为潜意识或超意识，是不妥的。这只是便利之举。事实上，”域外“也好，潜意识、超意识等等也好，都不存在。**心是全一，不能将其分割。**\n    * 个人注记： 王阳明的心外无物也提到了心作为一个整体，不可分割。\n* 耳司听，目司明，这是理所当然的。但得到悟的，却是整体的心，或者应当说是心之深处之心。当然，它只是知觉的一种行为，但它是最高级的知觉。\n* 曾被想象为横亘于远方的原野，就是我们每日走过的原野。\n* 禅必须除去一切带有经过、组织、训练色彩的内容，而止于单纯绝对的经验。\n\n## 禅堂与僧侣生活\n\n* 在禅堂中，通常被认为是男子工作的劳动，特别成为禅僧生活的主要部分。劳动的大部分是手工劳作，主要是扫除、洗濯(zhào)、烧饭、拾柴，或者到远近村落去化缘。\n* 大多数宗教隐者的苦行，并不是身心一致的活动。他们想的是身体被心所截断，或者心被身体所截断，好像身体是身体、心是心似的，而忘了这种截断仅仅存在于观念中或假说中。禅修行的目的就是不承认这种最基本的区分，时常注意避免只强调身心某一方面的习惯。\n* 在此世上诱发不幸的最为常见的原因，就是对所有欲的追求。然而，也不能把禁欲主义当做禅僧生活的理想。僧侣生活的中心思想，是要求对被给予的物加以最好的利用。并非表面所看到的，对抑制或超脱教义的鼓吹。\n* 禅堂生活的基本原则是“依靠行为的生活”。所以禅僧们都是健康地生活着的、使劲干着粗苯工作的普通人。 他们很快活，富于诙谐，并互相帮助。\n* 禅院的规则极为严厉，是用以打消我们心中固执的傲慢，让我们饮净谦恭杯中的最后一滴酒。\n* 所谓参禅，就是弟子到师傅那里讲述对于公案的意见，接受师傅的批评检查。\n* 为了让弟子们达到最深的自我，真正获得禅的知识，禅师们往往诉诸于这种咋看起来不近人情的方法。\n* 僧侣的生命必须从内至外，于知识完全合一。\n* **隐德**是指，在对待物时要尽其所能，充分实现物本身的德。依旧是说它意味着，对被给予的所有东西，要充分完全地、经济地加以利用。\n* 放弃一切索报和自我克制之心，为善而行善。云飘走了，天空还象原来那样晴朗。\n* “竹影扫阶尘不动，月穿潭底水无痕。” 不管怎么说，禅归根到底只是个人的内在经验。\n\n","source":"_posts/2017-09-12-chan-xue-ru-men-lin-mu-da-zhuo.md","raw":"---\nlayout: post\ntitle: 《禅学入门》 林木大拙 读书笔记\ncategory: 阅读笔记\ntags: [笔记]\ndate: 2017-09-12\ndescription: 禅学入门 林木大拙 读书笔记\nkeywords: 禅学, 林木大拙\n---\n\n## 绪论\n\n* 所谓原始佛教，是一粒种子，从这粒种子注定要生出将进一步生长的东方佛教。\n* 在中国、日本发展的佛教诸派中，有一个特殊的僧人集团，它主张直接从佛教创始人那里接受佛教的精髓和精神。它不依靠任何秘密文字，也没有任何神秘仪式，在佛教诸派中占据了最显赫的地位。这不仅是由于它在历史上的重要性，而且由于它是最具独创性的。它倡导的方法是激励人心的。在学术上称它为佛心宗，通常称为禅（梵语 dhyāna）。\n* 禅最大限度地强调了个人经验是必不可少的。没有这种经验，任何深远的能力即使是有用的，也不能有效地被掌握。\n* 佛教徒不承认超自然的作用。禅的精神训练方法是实际的、系统的。\n* 神秘主义性质是拒绝逻辑剖析，而逻辑性又是西方思想最为显著的特征之一。东方的推理方法是综合的，与其对每个事物一一分析，宁愿在直觉中把握它的全体。\n* 佛教精神为了实际的人生修行，舍弃了高高在上的哲学上层结构，其结果就不能不变成禅。\n\n## 禅是什么？\n\n* 禅是人的精神，信奉人的内在的纯洁与善。\n* 禅把依靠洞察达到心的本性，发现心本身，和以自心为主，作为目的。达到此心或精神的真性是禅宗的根本目的。\n    * 个人注记：有点像王阳明知行合一的最高境界\n* 禅强调不受任何拘束，脱离一切非自然的妨害。\n* 禅的基本思想是与我们心内的活动接触，它不依靠任何外部的附加物，尽可能选择最直接的道路。\n* 由于禅只认识日常生活本身的事实，因此它就能在最平凡、最平稳的普通人的生活中表现出来。\n* 但向己求 勿从它觅。\n\n## 禅是虚无主义吗？\n\n* “所谓中道，无中边亦无二边。外敷色声，偏于一边，内生妄念，又偏于另一边。此两边皆无时，中边亦无，即名中道”\n* 禅从它的性质上极为自然地主张“此亦非，彼亦非，一切皆非”。 没有否定，没有肯定，只有简明的事实，**纯粹的经验**，以及我们的实在和思想的基础本身。\n    * 个人注记：纯粹 超越了是非 也超越了虚无的否定一切\n* 在禅中，有某种自我肯定。而且它是自由的，绝对的，不知界限为何物，拒绝抽象的处理方法。\n* 禅的否定不一定是逻辑意义上的否定，肯定也是如此。禅的理解以经验为第一，不能被思想的人为系统法则，“然”、“否”之类常常牵强附会的认识论公式等等所束缚。\n* 不除去“彼此”、“我物”、“汝物”这类最后意识，任何人也不能彻底把握禅，并且“不能见古人来”。\n* 禅的目标是在个人的日常生活现实中，实现超越是非矛盾的统一。\n\n## 非逻辑的禅\n\n* 禅对待的是事实，不是逻辑上和语言上的偏颇的、不完全的表现。\n* 禅经常将心比喻为没有阴翳的明镜。因此跟着禅回到单纯，就要使这明镜经常保持光洁明亮，使来到它面前的东西不依靠任何帮助原原本本地映照在其中。\n* 禅认为我们是语言和逻辑的过于驯服的奴隶。\n* 如果我们希望找到知道某物价值的方法，找到通向精神幸福的道路，就只有努力于断然摆脱一切条件，看看我们是否能够找到既能发现健全的世界，又能内省地理解人生的观察点。\n* “手拿锄头，但事实却没拿” 人们往往认为，逻辑就是人生，逻辑之外没有人生的意义，人们只能顺从它。而事实是大多数人的人生观，都是破坏“思维法则”的。\n    * 个人注记：以为自己掌控着逻辑，实则是被其奴役的。所以手里什么都没有\n* 客观世界的逻辑学和伦理学有着认为努力和操作的痕迹，有着自觉地意识，是不纯的。禅厌恶不纯。\n* 人生是艺术，而且像真正的艺术那样，必须忘却自己。\n* 禅要求发自内心的生活，要求不受规范束缚，各自创造自己的规范。\n\n## 大肯定的禅\n\n* 精神不断地呼唤自由，通过达到没有否定与肯定的对立差别的更高的肯定形态，就可以很容易地得到这种自由。禅就在这种更高的肯定中。\n* 听从我们内在生命的要求，禅提倡任何对立也不能存在的绝对的领域。\n* 禅师们努力除掉弟子们与生俱来所有的立足点，而代之以完全不是立足点的立足点。\n* 禅的训练方法是让人一下陷入两难境地。我们必须不运用逻辑，依靠更高迈的心灵，自己找到从这种两难境地中脱身的办法。\n    * 比如瓶中养鹅的故事\n* 人生是事实，任何说明也不需要，也不能切中肯綮(qìng)。说明就是证明。难道我们活着这件事还需要什么证明吗？活着，仅仅是活着，还不够吗？我们在活着，在肯定，在这里就是纯粹的禅，赤裸裸的禅。\n* 模仿就是奴隶，不要被文字所束缚，必须抓住的是精神。大肯定就活在精神中。然而，精神在何处？这就必须向每日的经验中寻求。在哪里，有我们需要的充足的证据。\n\n## 实际的禅\n\n* “平常心是道” 自己有着沉稳自信的存在，就是禅的真理。\n* 禅的要旨在于捕捉流动的生命。\n* 理解禅要避免抽象、表现和华丽的辞藻。\n* 禅籍中有很多古怪的对“如何是禅”的回答，看似不沾边。然而重要的是，要领会禅，必须深入参透禅师们的内心状态。比如“看，水出高源”，“莫言语”，“此处四面皆山”等 皆为自然的描述，没有高深的意思在里边。\n    * 个人注记：我的理解是生活的每个细微之处都有意识的到往，不可以追求，也不刻意忽视，以平常心视之既是禅。\n        * 超越是非、对错？\n* 禅是自然的，是不能人为制造的，是生命本身的表现，并且是创造性的，这些都是禅的本质特征。因此要抓住禅的真正核心，就要时常注意不为表面的标志所迷惑。\n* “心无形相，非离言语，非不离言语。心常湛然，应用自在。”\n* 禅并非是泛神论，并没有把山川草木看做泛神的表象\n* 禅也不是自然主义或自由主义\n    * 自然主义听从人的自然倾向，不追究它的起源和价值，是一种盲从。\n\n## 悟\n\n* 禅修行的目的在于获得观察事物的新见解。\n* 禅的生活是从这种获得新见解的“悟”开始的。\n* 悟，可以定义为与知或逻辑的理解相对的直觉的洞察。\n* 当人的心在悟中成熟起来时，它们在各处自行降临。\n* 悟的所有原因、条件在内心，只等待着成熟的时机。一旦内心做好准备，世间万物都可使自己直接返回到自己的根源所在，也即是**真我的觉醒**。\n* 禅与思考无关，悟是一种内在的知觉 ---- 但不是对某个单一物的知觉，而是对存在的根本事实的知觉。悟的最终目的地是其自身，除其自身外任何目的都不存在。\n* 悟的心的开启研究的几个要点：\n    1. 悟不是由强烈思念而产生的某种假想状态。它是对物的看法获得的新见解。禅的训练是将意识构建的方法论一举扫荡，重新得到心的整体。\n    2. 悟指向未曾梦到的真理的崭新意识。它是在知的或者表现的事类多重积累后，忽然产生的一种心的激动或爆发。\n    3. 悟是禅存在的理由，没有它，禅就不成其为禅。但悟本身没有方法论。\n    4. 禅必须有至今未曾想过的知觉的独立，有从全新的角度观察旧有事物的新意识的觉醒。\n        1. 禅那，一般认为是指向某种固定思想的一种冥想或静思，并非是禅。\n    5. 禅要求的是绝对自由，连神也要脱离的独立。”应无所住，而生其心“。\n        1. 不同于被神秘主义称为神的东西。因为它有明显的目的物追求，而且得到神时，就要拒绝非神。\n    6. 禅是健全的心理状态。\n\n## 公案\n\n* 禅的独到之处在于公案和坐禅的存在。\n* 坐禅，梵语的禅那，是佛教训练中的三学，即尸罗（戒）、禅那（静虑）、般若（智慧）中的一种。佛教善徒用其全部的诚心诚意恪守佛的垂训，通晓将自己放纵的激情完全抑制住的方法，最后则期望得到足以领会高深的佛教哲理的一切复杂逻辑的智慧。\n* 禅那有“知觉”、“反省”、“凝心”等意义，把精神集中于思想的唯一目的物上。因此，从事禅的修行，是在将外界一切琐事调整为最佳状态时来支配意识，在这种状态中，精神逐渐能够超越于它的烦恼动乱之上。\n* 禅那是指保持心的安静的一般方法，Samādhi（三昧）用以表示作为禅那修行结果所得的心的状态。\n* 禅修行的坐禅与一般佛教徒实行的坐禅，在心的目的上是不同的。在禅中，禅那或坐禅是用以达到解明公案的手段，在禅中，禅那本身不是目的。要了解公案，如果没有彻底的坐禅修行，这种深远的精神真理就不能牢牢扎根于禅学徒的心中。\n* 公案在字面上的意义是指公文或权威法规，是流行于宋代末期的语言。现在指古代禅师的逸话，或是禅师与弟子间的问答，以及禅师提出的命题、提问，禅运用它作为开启人心，达到禅的真理的方法。\n* 虽然心依靠自身也能长大，但人不能无休止等待，无论对善对恶。为了达到自身的目的，总喜欢干涉。在得大于失的情况下，人们欢迎别人的干涉。把它成为改良或进步。因此在纯粹、自然、本质性的禅中导入公案体系，虽是对禅的冒渎，但在某种意义上也是一种进步。\n* 禅师们很清楚，禅如果不是产生于人的内在要求，就不是本然纯粹病充满创造活力的，而公案的手段和技术却在相当程度上是人工的产物。但是，在很难并很少能得到真物本身的情况下，既是是类似物，也是天之恩赐。\n* 现在的学生确实常常接受必要之外、有用之外的帮助。这种软弱教育的缺少，才使过去的禅师们成为具有更为雄大气魄的人物。\n* 心在收到某种束缚、失去自由、听不到声音的情况下，公案只能被看做受限制并被分割的东西。在心从束缚中被解放出来之前，人是不能在此世安住的。\n* 赵州：”庭前柏树子“。柏树子永远是柏树子本身，与泛神论或其他的”论“没有任何关系。人们大概会认为，努力通过逻辑的锁链了解其中包含的意义，就可以解开这一难题。然而，禅已远离我们在三千里之外。公案就象在逻辑分析所不能达到的我们心灵的最深处培育起来那样而得以运用。\n* 公案一般是这段了通向合理性的一切道路。也就是说，当我们几次三番向禅师提出自己的见解（用术语来说叫做”参禅“）时，必须宣告自己的知的摸索已经走入穷途，而这正是禅的研究的真正的出发点。\n* 为了帮助一般读者理解禅，用简便的语言来说，在我们心中，在相对构造的意识的”域外“，存在着未知的秘密。将它成为潜意识或超意识，是不妥的。这只是便利之举。事实上，”域外“也好，潜意识、超意识等等也好，都不存在。**心是全一，不能将其分割。**\n    * 个人注记： 王阳明的心外无物也提到了心作为一个整体，不可分割。\n* 耳司听，目司明，这是理所当然的。但得到悟的，却是整体的心，或者应当说是心之深处之心。当然，它只是知觉的一种行为，但它是最高级的知觉。\n* 曾被想象为横亘于远方的原野，就是我们每日走过的原野。\n* 禅必须除去一切带有经过、组织、训练色彩的内容，而止于单纯绝对的经验。\n\n## 禅堂与僧侣生活\n\n* 在禅堂中，通常被认为是男子工作的劳动，特别成为禅僧生活的主要部分。劳动的大部分是手工劳作，主要是扫除、洗濯(zhào)、烧饭、拾柴，或者到远近村落去化缘。\n* 大多数宗教隐者的苦行，并不是身心一致的活动。他们想的是身体被心所截断，或者心被身体所截断，好像身体是身体、心是心似的，而忘了这种截断仅仅存在于观念中或假说中。禅修行的目的就是不承认这种最基本的区分，时常注意避免只强调身心某一方面的习惯。\n* 在此世上诱发不幸的最为常见的原因，就是对所有欲的追求。然而，也不能把禁欲主义当做禅僧生活的理想。僧侣生活的中心思想，是要求对被给予的物加以最好的利用。并非表面所看到的，对抑制或超脱教义的鼓吹。\n* 禅堂生活的基本原则是“依靠行为的生活”。所以禅僧们都是健康地生活着的、使劲干着粗苯工作的普通人。 他们很快活，富于诙谐，并互相帮助。\n* 禅院的规则极为严厉，是用以打消我们心中固执的傲慢，让我们饮净谦恭杯中的最后一滴酒。\n* 所谓参禅，就是弟子到师傅那里讲述对于公案的意见，接受师傅的批评检查。\n* 为了让弟子们达到最深的自我，真正获得禅的知识，禅师们往往诉诸于这种咋看起来不近人情的方法。\n* 僧侣的生命必须从内至外，于知识完全合一。\n* **隐德**是指，在对待物时要尽其所能，充分实现物本身的德。依旧是说它意味着，对被给予的所有东西，要充分完全地、经济地加以利用。\n* 放弃一切索报和自我克制之心，为善而行善。云飘走了，天空还象原来那样晴朗。\n* “竹影扫阶尘不动，月穿潭底水无痕。” 不管怎么说，禅归根到底只是个人的内在经验。\n\n","slug":"2017-09-12-chan-xue-ru-men-lin-mu-da-zhuo","published":1,"updated":"2020-04-19T02:55:32.088Z","_id":"ck96ffjb6002lrmp929kx5pbk","comments":1,"photos":[],"link":"","content":"<h2 id=\"绪论\"><a href=\"#绪论\" class=\"headerlink\" title=\"绪论\"></a>绪论</h2><ul>\n<li>所谓原始佛教，是一粒种子，从这粒种子注定要生出将进一步生长的东方佛教。</li>\n<li>在中国、日本发展的佛教诸派中，有一个特殊的僧人集团，它主张直接从佛教创始人那里接受佛教的精髓和精神。它不依靠任何秘密文字，也没有任何神秘仪式，在佛教诸派中占据了最显赫的地位。这不仅是由于它在历史上的重要性，而且由于它是最具独创性的。它倡导的方法是激励人心的。在学术上称它为佛心宗，通常称为禅（梵语 dhyāna）。</li>\n<li>禅最大限度地强调了个人经验是必不可少的。没有这种经验，任何深远的能力即使是有用的，也不能有效地被掌握。</li>\n<li>佛教徒不承认超自然的作用。禅的精神训练方法是实际的、系统的。</li>\n<li>神秘主义性质是拒绝逻辑剖析，而逻辑性又是西方思想最为显著的特征之一。东方的推理方法是综合的，与其对每个事物一一分析，宁愿在直觉中把握它的全体。</li>\n<li>佛教精神为了实际的人生修行，舍弃了高高在上的哲学上层结构，其结果就不能不变成禅。</li>\n</ul>\n<h2 id=\"禅是什么？\"><a href=\"#禅是什么？\" class=\"headerlink\" title=\"禅是什么？\"></a>禅是什么？</h2><ul>\n<li>禅是人的精神，信奉人的内在的纯洁与善。</li>\n<li>禅把依靠洞察达到心的本性，发现心本身，和以自心为主，作为目的。达到此心或精神的真性是禅宗的根本目的。<ul>\n<li>个人注记：有点像王阳明知行合一的最高境界</li>\n</ul>\n</li>\n<li>禅强调不受任何拘束，脱离一切非自然的妨害。</li>\n<li>禅的基本思想是与我们心内的活动接触，它不依靠任何外部的附加物，尽可能选择最直接的道路。</li>\n<li>由于禅只认识日常生活本身的事实，因此它就能在最平凡、最平稳的普通人的生活中表现出来。</li>\n<li>但向己求 勿从它觅。</li>\n</ul>\n<h2 id=\"禅是虚无主义吗？\"><a href=\"#禅是虚无主义吗？\" class=\"headerlink\" title=\"禅是虚无主义吗？\"></a>禅是虚无主义吗？</h2><ul>\n<li>“所谓中道，无中边亦无二边。外敷色声，偏于一边，内生妄念，又偏于另一边。此两边皆无时，中边亦无，即名中道”</li>\n<li>禅从它的性质上极为自然地主张“此亦非，彼亦非，一切皆非”。 没有否定，没有肯定，只有简明的事实，<strong>纯粹的经验</strong>，以及我们的实在和思想的基础本身。<ul>\n<li>个人注记：纯粹 超越了是非 也超越了虚无的否定一切</li>\n</ul>\n</li>\n<li>在禅中，有某种自我肯定。而且它是自由的，绝对的，不知界限为何物，拒绝抽象的处理方法。</li>\n<li>禅的否定不一定是逻辑意义上的否定，肯定也是如此。禅的理解以经验为第一，不能被思想的人为系统法则，“然”、“否”之类常常牵强附会的认识论公式等等所束缚。</li>\n<li>不除去“彼此”、“我物”、“汝物”这类最后意识，任何人也不能彻底把握禅，并且“不能见古人来”。</li>\n<li>禅的目标是在个人的日常生活现实中，实现超越是非矛盾的统一。</li>\n</ul>\n<h2 id=\"非逻辑的禅\"><a href=\"#非逻辑的禅\" class=\"headerlink\" title=\"非逻辑的禅\"></a>非逻辑的禅</h2><ul>\n<li>禅对待的是事实，不是逻辑上和语言上的偏颇的、不完全的表现。</li>\n<li>禅经常将心比喻为没有阴翳的明镜。因此跟着禅回到单纯，就要使这明镜经常保持光洁明亮，使来到它面前的东西不依靠任何帮助原原本本地映照在其中。</li>\n<li>禅认为我们是语言和逻辑的过于驯服的奴隶。</li>\n<li>如果我们希望找到知道某物价值的方法，找到通向精神幸福的道路，就只有努力于断然摆脱一切条件，看看我们是否能够找到既能发现健全的世界，又能内省地理解人生的观察点。</li>\n<li>“手拿锄头，但事实却没拿” 人们往往认为，逻辑就是人生，逻辑之外没有人生的意义，人们只能顺从它。而事实是大多数人的人生观，都是破坏“思维法则”的。<ul>\n<li>个人注记：以为自己掌控着逻辑，实则是被其奴役的。所以手里什么都没有</li>\n</ul>\n</li>\n<li>客观世界的逻辑学和伦理学有着认为努力和操作的痕迹，有着自觉地意识，是不纯的。禅厌恶不纯。</li>\n<li>人生是艺术，而且像真正的艺术那样，必须忘却自己。</li>\n<li>禅要求发自内心的生活，要求不受规范束缚，各自创造自己的规范。</li>\n</ul>\n<h2 id=\"大肯定的禅\"><a href=\"#大肯定的禅\" class=\"headerlink\" title=\"大肯定的禅\"></a>大肯定的禅</h2><ul>\n<li>精神不断地呼唤自由，通过达到没有否定与肯定的对立差别的更高的肯定形态，就可以很容易地得到这种自由。禅就在这种更高的肯定中。</li>\n<li>听从我们内在生命的要求，禅提倡任何对立也不能存在的绝对的领域。</li>\n<li>禅师们努力除掉弟子们与生俱来所有的立足点，而代之以完全不是立足点的立足点。</li>\n<li>禅的训练方法是让人一下陷入两难境地。我们必须不运用逻辑，依靠更高迈的心灵，自己找到从这种两难境地中脱身的办法。<ul>\n<li>比如瓶中养鹅的故事</li>\n</ul>\n</li>\n<li>人生是事实，任何说明也不需要，也不能切中肯綮(qìng)。说明就是证明。难道我们活着这件事还需要什么证明吗？活着，仅仅是活着，还不够吗？我们在活着，在肯定，在这里就是纯粹的禅，赤裸裸的禅。</li>\n<li>模仿就是奴隶，不要被文字所束缚，必须抓住的是精神。大肯定就活在精神中。然而，精神在何处？这就必须向每日的经验中寻求。在哪里，有我们需要的充足的证据。</li>\n</ul>\n<h2 id=\"实际的禅\"><a href=\"#实际的禅\" class=\"headerlink\" title=\"实际的禅\"></a>实际的禅</h2><ul>\n<li>“平常心是道” 自己有着沉稳自信的存在，就是禅的真理。</li>\n<li>禅的要旨在于捕捉流动的生命。</li>\n<li>理解禅要避免抽象、表现和华丽的辞藻。</li>\n<li>禅籍中有很多古怪的对“如何是禅”的回答，看似不沾边。然而重要的是，要领会禅，必须深入参透禅师们的内心状态。比如“看，水出高源”，“莫言语”，“此处四面皆山”等 皆为自然的描述，没有高深的意思在里边。<ul>\n<li>个人注记：我的理解是生活的每个细微之处都有意识的到往，不可以追求，也不刻意忽视，以平常心视之既是禅。<ul>\n<li>超越是非、对错？</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>禅是自然的，是不能人为制造的，是生命本身的表现，并且是创造性的，这些都是禅的本质特征。因此要抓住禅的真正核心，就要时常注意不为表面的标志所迷惑。</li>\n<li>“心无形相，非离言语，非不离言语。心常湛然，应用自在。”</li>\n<li>禅并非是泛神论，并没有把山川草木看做泛神的表象</li>\n<li>禅也不是自然主义或自由主义<ul>\n<li>自然主义听从人的自然倾向，不追究它的起源和价值，是一种盲从。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"悟\"><a href=\"#悟\" class=\"headerlink\" title=\"悟\"></a>悟</h2><ul>\n<li>禅修行的目的在于获得观察事物的新见解。</li>\n<li>禅的生活是从这种获得新见解的“悟”开始的。</li>\n<li>悟，可以定义为与知或逻辑的理解相对的直觉的洞察。</li>\n<li>当人的心在悟中成熟起来时，它们在各处自行降临。</li>\n<li>悟的所有原因、条件在内心，只等待着成熟的时机。一旦内心做好准备，世间万物都可使自己直接返回到自己的根源所在，也即是<strong>真我的觉醒</strong>。</li>\n<li>禅与思考无关，悟是一种内在的知觉 —- 但不是对某个单一物的知觉，而是对存在的根本事实的知觉。悟的最终目的地是其自身，除其自身外任何目的都不存在。</li>\n<li>悟的心的开启研究的几个要点：<ol>\n<li>悟不是由强烈思念而产生的某种假想状态。它是对物的看法获得的新见解。禅的训练是将意识构建的方法论一举扫荡，重新得到心的整体。</li>\n<li>悟指向未曾梦到的真理的崭新意识。它是在知的或者表现的事类多重积累后，忽然产生的一种心的激动或爆发。</li>\n<li>悟是禅存在的理由，没有它，禅就不成其为禅。但悟本身没有方法论。</li>\n<li>禅必须有至今未曾想过的知觉的独立，有从全新的角度观察旧有事物的新意识的觉醒。<ol>\n<li>禅那，一般认为是指向某种固定思想的一种冥想或静思，并非是禅。</li>\n</ol>\n</li>\n<li>禅要求的是绝对自由，连神也要脱离的独立。”应无所住，而生其心“。<ol>\n<li>不同于被神秘主义称为神的东西。因为它有明显的目的物追求，而且得到神时，就要拒绝非神。</li>\n</ol>\n</li>\n<li>禅是健全的心理状态。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"公案\"><a href=\"#公案\" class=\"headerlink\" title=\"公案\"></a>公案</h2><ul>\n<li>禅的独到之处在于公案和坐禅的存在。</li>\n<li>坐禅，梵语的禅那，是佛教训练中的三学，即尸罗（戒）、禅那（静虑）、般若（智慧）中的一种。佛教善徒用其全部的诚心诚意恪守佛的垂训，通晓将自己放纵的激情完全抑制住的方法，最后则期望得到足以领会高深的佛教哲理的一切复杂逻辑的智慧。</li>\n<li>禅那有“知觉”、“反省”、“凝心”等意义，把精神集中于思想的唯一目的物上。因此，从事禅的修行，是在将外界一切琐事调整为最佳状态时来支配意识，在这种状态中，精神逐渐能够超越于它的烦恼动乱之上。</li>\n<li>禅那是指保持心的安静的一般方法，Samādhi（三昧）用以表示作为禅那修行结果所得的心的状态。</li>\n<li>禅修行的坐禅与一般佛教徒实行的坐禅，在心的目的上是不同的。在禅中，禅那或坐禅是用以达到解明公案的手段，在禅中，禅那本身不是目的。要了解公案，如果没有彻底的坐禅修行，这种深远的精神真理就不能牢牢扎根于禅学徒的心中。</li>\n<li>公案在字面上的意义是指公文或权威法规，是流行于宋代末期的语言。现在指古代禅师的逸话，或是禅师与弟子间的问答，以及禅师提出的命题、提问，禅运用它作为开启人心，达到禅的真理的方法。</li>\n<li>虽然心依靠自身也能长大，但人不能无休止等待，无论对善对恶。为了达到自身的目的，总喜欢干涉。在得大于失的情况下，人们欢迎别人的干涉。把它成为改良或进步。因此在纯粹、自然、本质性的禅中导入公案体系，虽是对禅的冒渎，但在某种意义上也是一种进步。</li>\n<li>禅师们很清楚，禅如果不是产生于人的内在要求，就不是本然纯粹病充满创造活力的，而公案的手段和技术却在相当程度上是人工的产物。但是，在很难并很少能得到真物本身的情况下，既是是类似物，也是天之恩赐。</li>\n<li>现在的学生确实常常接受必要之外、有用之外的帮助。这种软弱教育的缺少，才使过去的禅师们成为具有更为雄大气魄的人物。</li>\n<li>心在收到某种束缚、失去自由、听不到声音的情况下，公案只能被看做受限制并被分割的东西。在心从束缚中被解放出来之前，人是不能在此世安住的。</li>\n<li>赵州：”庭前柏树子“。柏树子永远是柏树子本身，与泛神论或其他的”论“没有任何关系。人们大概会认为，努力通过逻辑的锁链了解其中包含的意义，就可以解开这一难题。然而，禅已远离我们在三千里之外。公案就象在逻辑分析所不能达到的我们心灵的最深处培育起来那样而得以运用。</li>\n<li>公案一般是这段了通向合理性的一切道路。也就是说，当我们几次三番向禅师提出自己的见解（用术语来说叫做”参禅“）时，必须宣告自己的知的摸索已经走入穷途，而这正是禅的研究的真正的出发点。</li>\n<li>为了帮助一般读者理解禅，用简便的语言来说，在我们心中，在相对构造的意识的”域外“，存在着未知的秘密。将它成为潜意识或超意识，是不妥的。这只是便利之举。事实上，”域外“也好，潜意识、超意识等等也好，都不存在。<strong>心是全一，不能将其分割。</strong><ul>\n<li>个人注记： 王阳明的心外无物也提到了心作为一个整体，不可分割。</li>\n</ul>\n</li>\n<li>耳司听，目司明，这是理所当然的。但得到悟的，却是整体的心，或者应当说是心之深处之心。当然，它只是知觉的一种行为，但它是最高级的知觉。</li>\n<li>曾被想象为横亘于远方的原野，就是我们每日走过的原野。</li>\n<li>禅必须除去一切带有经过、组织、训练色彩的内容，而止于单纯绝对的经验。</li>\n</ul>\n<h2 id=\"禅堂与僧侣生活\"><a href=\"#禅堂与僧侣生活\" class=\"headerlink\" title=\"禅堂与僧侣生活\"></a>禅堂与僧侣生活</h2><ul>\n<li>在禅堂中，通常被认为是男子工作的劳动，特别成为禅僧生活的主要部分。劳动的大部分是手工劳作，主要是扫除、洗濯(zhào)、烧饭、拾柴，或者到远近村落去化缘。</li>\n<li>大多数宗教隐者的苦行，并不是身心一致的活动。他们想的是身体被心所截断，或者心被身体所截断，好像身体是身体、心是心似的，而忘了这种截断仅仅存在于观念中或假说中。禅修行的目的就是不承认这种最基本的区分，时常注意避免只强调身心某一方面的习惯。</li>\n<li>在此世上诱发不幸的最为常见的原因，就是对所有欲的追求。然而，也不能把禁欲主义当做禅僧生活的理想。僧侣生活的中心思想，是要求对被给予的物加以最好的利用。并非表面所看到的，对抑制或超脱教义的鼓吹。</li>\n<li>禅堂生活的基本原则是“依靠行为的生活”。所以禅僧们都是健康地生活着的、使劲干着粗苯工作的普通人。 他们很快活，富于诙谐，并互相帮助。</li>\n<li>禅院的规则极为严厉，是用以打消我们心中固执的傲慢，让我们饮净谦恭杯中的最后一滴酒。</li>\n<li>所谓参禅，就是弟子到师傅那里讲述对于公案的意见，接受师傅的批评检查。</li>\n<li>为了让弟子们达到最深的自我，真正获得禅的知识，禅师们往往诉诸于这种咋看起来不近人情的方法。</li>\n<li>僧侣的生命必须从内至外，于知识完全合一。</li>\n<li><strong>隐德</strong>是指，在对待物时要尽其所能，充分实现物本身的德。依旧是说它意味着，对被给予的所有东西，要充分完全地、经济地加以利用。</li>\n<li>放弃一切索报和自我克制之心，为善而行善。云飘走了，天空还象原来那样晴朗。</li>\n<li>“竹影扫阶尘不动，月穿潭底水无痕。” 不管怎么说，禅归根到底只是个人的内在经验。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"绪论\"><a href=\"#绪论\" class=\"headerlink\" title=\"绪论\"></a>绪论</h2><ul>\n<li>所谓原始佛教，是一粒种子，从这粒种子注定要生出将进一步生长的东方佛教。</li>\n<li>在中国、日本发展的佛教诸派中，有一个特殊的僧人集团，它主张直接从佛教创始人那里接受佛教的精髓和精神。它不依靠任何秘密文字，也没有任何神秘仪式，在佛教诸派中占据了最显赫的地位。这不仅是由于它在历史上的重要性，而且由于它是最具独创性的。它倡导的方法是激励人心的。在学术上称它为佛心宗，通常称为禅（梵语 dhyāna）。</li>\n<li>禅最大限度地强调了个人经验是必不可少的。没有这种经验，任何深远的能力即使是有用的，也不能有效地被掌握。</li>\n<li>佛教徒不承认超自然的作用。禅的精神训练方法是实际的、系统的。</li>\n<li>神秘主义性质是拒绝逻辑剖析，而逻辑性又是西方思想最为显著的特征之一。东方的推理方法是综合的，与其对每个事物一一分析，宁愿在直觉中把握它的全体。</li>\n<li>佛教精神为了实际的人生修行，舍弃了高高在上的哲学上层结构，其结果就不能不变成禅。</li>\n</ul>\n<h2 id=\"禅是什么？\"><a href=\"#禅是什么？\" class=\"headerlink\" title=\"禅是什么？\"></a>禅是什么？</h2><ul>\n<li>禅是人的精神，信奉人的内在的纯洁与善。</li>\n<li>禅把依靠洞察达到心的本性，发现心本身，和以自心为主，作为目的。达到此心或精神的真性是禅宗的根本目的。<ul>\n<li>个人注记：有点像王阳明知行合一的最高境界</li>\n</ul>\n</li>\n<li>禅强调不受任何拘束，脱离一切非自然的妨害。</li>\n<li>禅的基本思想是与我们心内的活动接触，它不依靠任何外部的附加物，尽可能选择最直接的道路。</li>\n<li>由于禅只认识日常生活本身的事实，因此它就能在最平凡、最平稳的普通人的生活中表现出来。</li>\n<li>但向己求 勿从它觅。</li>\n</ul>\n<h2 id=\"禅是虚无主义吗？\"><a href=\"#禅是虚无主义吗？\" class=\"headerlink\" title=\"禅是虚无主义吗？\"></a>禅是虚无主义吗？</h2><ul>\n<li>“所谓中道，无中边亦无二边。外敷色声，偏于一边，内生妄念，又偏于另一边。此两边皆无时，中边亦无，即名中道”</li>\n<li>禅从它的性质上极为自然地主张“此亦非，彼亦非，一切皆非”。 没有否定，没有肯定，只有简明的事实，<strong>纯粹的经验</strong>，以及我们的实在和思想的基础本身。<ul>\n<li>个人注记：纯粹 超越了是非 也超越了虚无的否定一切</li>\n</ul>\n</li>\n<li>在禅中，有某种自我肯定。而且它是自由的，绝对的，不知界限为何物，拒绝抽象的处理方法。</li>\n<li>禅的否定不一定是逻辑意义上的否定，肯定也是如此。禅的理解以经验为第一，不能被思想的人为系统法则，“然”、“否”之类常常牵强附会的认识论公式等等所束缚。</li>\n<li>不除去“彼此”、“我物”、“汝物”这类最后意识，任何人也不能彻底把握禅，并且“不能见古人来”。</li>\n<li>禅的目标是在个人的日常生活现实中，实现超越是非矛盾的统一。</li>\n</ul>\n<h2 id=\"非逻辑的禅\"><a href=\"#非逻辑的禅\" class=\"headerlink\" title=\"非逻辑的禅\"></a>非逻辑的禅</h2><ul>\n<li>禅对待的是事实，不是逻辑上和语言上的偏颇的、不完全的表现。</li>\n<li>禅经常将心比喻为没有阴翳的明镜。因此跟着禅回到单纯，就要使这明镜经常保持光洁明亮，使来到它面前的东西不依靠任何帮助原原本本地映照在其中。</li>\n<li>禅认为我们是语言和逻辑的过于驯服的奴隶。</li>\n<li>如果我们希望找到知道某物价值的方法，找到通向精神幸福的道路，就只有努力于断然摆脱一切条件，看看我们是否能够找到既能发现健全的世界，又能内省地理解人生的观察点。</li>\n<li>“手拿锄头，但事实却没拿” 人们往往认为，逻辑就是人生，逻辑之外没有人生的意义，人们只能顺从它。而事实是大多数人的人生观，都是破坏“思维法则”的。<ul>\n<li>个人注记：以为自己掌控着逻辑，实则是被其奴役的。所以手里什么都没有</li>\n</ul>\n</li>\n<li>客观世界的逻辑学和伦理学有着认为努力和操作的痕迹，有着自觉地意识，是不纯的。禅厌恶不纯。</li>\n<li>人生是艺术，而且像真正的艺术那样，必须忘却自己。</li>\n<li>禅要求发自内心的生活，要求不受规范束缚，各自创造自己的规范。</li>\n</ul>\n<h2 id=\"大肯定的禅\"><a href=\"#大肯定的禅\" class=\"headerlink\" title=\"大肯定的禅\"></a>大肯定的禅</h2><ul>\n<li>精神不断地呼唤自由，通过达到没有否定与肯定的对立差别的更高的肯定形态，就可以很容易地得到这种自由。禅就在这种更高的肯定中。</li>\n<li>听从我们内在生命的要求，禅提倡任何对立也不能存在的绝对的领域。</li>\n<li>禅师们努力除掉弟子们与生俱来所有的立足点，而代之以完全不是立足点的立足点。</li>\n<li>禅的训练方法是让人一下陷入两难境地。我们必须不运用逻辑，依靠更高迈的心灵，自己找到从这种两难境地中脱身的办法。<ul>\n<li>比如瓶中养鹅的故事</li>\n</ul>\n</li>\n<li>人生是事实，任何说明也不需要，也不能切中肯綮(qìng)。说明就是证明。难道我们活着这件事还需要什么证明吗？活着，仅仅是活着，还不够吗？我们在活着，在肯定，在这里就是纯粹的禅，赤裸裸的禅。</li>\n<li>模仿就是奴隶，不要被文字所束缚，必须抓住的是精神。大肯定就活在精神中。然而，精神在何处？这就必须向每日的经验中寻求。在哪里，有我们需要的充足的证据。</li>\n</ul>\n<h2 id=\"实际的禅\"><a href=\"#实际的禅\" class=\"headerlink\" title=\"实际的禅\"></a>实际的禅</h2><ul>\n<li>“平常心是道” 自己有着沉稳自信的存在，就是禅的真理。</li>\n<li>禅的要旨在于捕捉流动的生命。</li>\n<li>理解禅要避免抽象、表现和华丽的辞藻。</li>\n<li>禅籍中有很多古怪的对“如何是禅”的回答，看似不沾边。然而重要的是，要领会禅，必须深入参透禅师们的内心状态。比如“看，水出高源”，“莫言语”，“此处四面皆山”等 皆为自然的描述，没有高深的意思在里边。<ul>\n<li>个人注记：我的理解是生活的每个细微之处都有意识的到往，不可以追求，也不刻意忽视，以平常心视之既是禅。<ul>\n<li>超越是非、对错？</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>禅是自然的，是不能人为制造的，是生命本身的表现，并且是创造性的，这些都是禅的本质特征。因此要抓住禅的真正核心，就要时常注意不为表面的标志所迷惑。</li>\n<li>“心无形相，非离言语，非不离言语。心常湛然，应用自在。”</li>\n<li>禅并非是泛神论，并没有把山川草木看做泛神的表象</li>\n<li>禅也不是自然主义或自由主义<ul>\n<li>自然主义听从人的自然倾向，不追究它的起源和价值，是一种盲从。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"悟\"><a href=\"#悟\" class=\"headerlink\" title=\"悟\"></a>悟</h2><ul>\n<li>禅修行的目的在于获得观察事物的新见解。</li>\n<li>禅的生活是从这种获得新见解的“悟”开始的。</li>\n<li>悟，可以定义为与知或逻辑的理解相对的直觉的洞察。</li>\n<li>当人的心在悟中成熟起来时，它们在各处自行降临。</li>\n<li>悟的所有原因、条件在内心，只等待着成熟的时机。一旦内心做好准备，世间万物都可使自己直接返回到自己的根源所在，也即是<strong>真我的觉醒</strong>。</li>\n<li>禅与思考无关，悟是一种内在的知觉 —- 但不是对某个单一物的知觉，而是对存在的根本事实的知觉。悟的最终目的地是其自身，除其自身外任何目的都不存在。</li>\n<li>悟的心的开启研究的几个要点：<ol>\n<li>悟不是由强烈思念而产生的某种假想状态。它是对物的看法获得的新见解。禅的训练是将意识构建的方法论一举扫荡，重新得到心的整体。</li>\n<li>悟指向未曾梦到的真理的崭新意识。它是在知的或者表现的事类多重积累后，忽然产生的一种心的激动或爆发。</li>\n<li>悟是禅存在的理由，没有它，禅就不成其为禅。但悟本身没有方法论。</li>\n<li>禅必须有至今未曾想过的知觉的独立，有从全新的角度观察旧有事物的新意识的觉醒。<ol>\n<li>禅那，一般认为是指向某种固定思想的一种冥想或静思，并非是禅。</li>\n</ol>\n</li>\n<li>禅要求的是绝对自由，连神也要脱离的独立。”应无所住，而生其心“。<ol>\n<li>不同于被神秘主义称为神的东西。因为它有明显的目的物追求，而且得到神时，就要拒绝非神。</li>\n</ol>\n</li>\n<li>禅是健全的心理状态。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"公案\"><a href=\"#公案\" class=\"headerlink\" title=\"公案\"></a>公案</h2><ul>\n<li>禅的独到之处在于公案和坐禅的存在。</li>\n<li>坐禅，梵语的禅那，是佛教训练中的三学，即尸罗（戒）、禅那（静虑）、般若（智慧）中的一种。佛教善徒用其全部的诚心诚意恪守佛的垂训，通晓将自己放纵的激情完全抑制住的方法，最后则期望得到足以领会高深的佛教哲理的一切复杂逻辑的智慧。</li>\n<li>禅那有“知觉”、“反省”、“凝心”等意义，把精神集中于思想的唯一目的物上。因此，从事禅的修行，是在将外界一切琐事调整为最佳状态时来支配意识，在这种状态中，精神逐渐能够超越于它的烦恼动乱之上。</li>\n<li>禅那是指保持心的安静的一般方法，Samādhi（三昧）用以表示作为禅那修行结果所得的心的状态。</li>\n<li>禅修行的坐禅与一般佛教徒实行的坐禅，在心的目的上是不同的。在禅中，禅那或坐禅是用以达到解明公案的手段，在禅中，禅那本身不是目的。要了解公案，如果没有彻底的坐禅修行，这种深远的精神真理就不能牢牢扎根于禅学徒的心中。</li>\n<li>公案在字面上的意义是指公文或权威法规，是流行于宋代末期的语言。现在指古代禅师的逸话，或是禅师与弟子间的问答，以及禅师提出的命题、提问，禅运用它作为开启人心，达到禅的真理的方法。</li>\n<li>虽然心依靠自身也能长大，但人不能无休止等待，无论对善对恶。为了达到自身的目的，总喜欢干涉。在得大于失的情况下，人们欢迎别人的干涉。把它成为改良或进步。因此在纯粹、自然、本质性的禅中导入公案体系，虽是对禅的冒渎，但在某种意义上也是一种进步。</li>\n<li>禅师们很清楚，禅如果不是产生于人的内在要求，就不是本然纯粹病充满创造活力的，而公案的手段和技术却在相当程度上是人工的产物。但是，在很难并很少能得到真物本身的情况下，既是是类似物，也是天之恩赐。</li>\n<li>现在的学生确实常常接受必要之外、有用之外的帮助。这种软弱教育的缺少，才使过去的禅师们成为具有更为雄大气魄的人物。</li>\n<li>心在收到某种束缚、失去自由、听不到声音的情况下，公案只能被看做受限制并被分割的东西。在心从束缚中被解放出来之前，人是不能在此世安住的。</li>\n<li>赵州：”庭前柏树子“。柏树子永远是柏树子本身，与泛神论或其他的”论“没有任何关系。人们大概会认为，努力通过逻辑的锁链了解其中包含的意义，就可以解开这一难题。然而，禅已远离我们在三千里之外。公案就象在逻辑分析所不能达到的我们心灵的最深处培育起来那样而得以运用。</li>\n<li>公案一般是这段了通向合理性的一切道路。也就是说，当我们几次三番向禅师提出自己的见解（用术语来说叫做”参禅“）时，必须宣告自己的知的摸索已经走入穷途，而这正是禅的研究的真正的出发点。</li>\n<li>为了帮助一般读者理解禅，用简便的语言来说，在我们心中，在相对构造的意识的”域外“，存在着未知的秘密。将它成为潜意识或超意识，是不妥的。这只是便利之举。事实上，”域外“也好，潜意识、超意识等等也好，都不存在。<strong>心是全一，不能将其分割。</strong><ul>\n<li>个人注记： 王阳明的心外无物也提到了心作为一个整体，不可分割。</li>\n</ul>\n</li>\n<li>耳司听，目司明，这是理所当然的。但得到悟的，却是整体的心，或者应当说是心之深处之心。当然，它只是知觉的一种行为，但它是最高级的知觉。</li>\n<li>曾被想象为横亘于远方的原野，就是我们每日走过的原野。</li>\n<li>禅必须除去一切带有经过、组织、训练色彩的内容，而止于单纯绝对的经验。</li>\n</ul>\n<h2 id=\"禅堂与僧侣生活\"><a href=\"#禅堂与僧侣生活\" class=\"headerlink\" title=\"禅堂与僧侣生活\"></a>禅堂与僧侣生活</h2><ul>\n<li>在禅堂中，通常被认为是男子工作的劳动，特别成为禅僧生活的主要部分。劳动的大部分是手工劳作，主要是扫除、洗濯(zhào)、烧饭、拾柴，或者到远近村落去化缘。</li>\n<li>大多数宗教隐者的苦行，并不是身心一致的活动。他们想的是身体被心所截断，或者心被身体所截断，好像身体是身体、心是心似的，而忘了这种截断仅仅存在于观念中或假说中。禅修行的目的就是不承认这种最基本的区分，时常注意避免只强调身心某一方面的习惯。</li>\n<li>在此世上诱发不幸的最为常见的原因，就是对所有欲的追求。然而，也不能把禁欲主义当做禅僧生活的理想。僧侣生活的中心思想，是要求对被给予的物加以最好的利用。并非表面所看到的，对抑制或超脱教义的鼓吹。</li>\n<li>禅堂生活的基本原则是“依靠行为的生活”。所以禅僧们都是健康地生活着的、使劲干着粗苯工作的普通人。 他们很快活，富于诙谐，并互相帮助。</li>\n<li>禅院的规则极为严厉，是用以打消我们心中固执的傲慢，让我们饮净谦恭杯中的最后一滴酒。</li>\n<li>所谓参禅，就是弟子到师傅那里讲述对于公案的意见，接受师傅的批评检查。</li>\n<li>为了让弟子们达到最深的自我，真正获得禅的知识，禅师们往往诉诸于这种咋看起来不近人情的方法。</li>\n<li>僧侣的生命必须从内至外，于知识完全合一。</li>\n<li><strong>隐德</strong>是指，在对待物时要尽其所能，充分实现物本身的德。依旧是说它意味着，对被给予的所有东西，要充分完全地、经济地加以利用。</li>\n<li>放弃一切索报和自我克制之心，为善而行善。云飘走了，天空还象原来那样晴朗。</li>\n<li>“竹影扫阶尘不动，月穿潭底水无痕。” 不管怎么说，禅归根到底只是个人的内在经验。</li>\n</ul>\n"},{"layout":"post","title":"加拿大个税以及注册退休金计划(RRSP)和免税储蓄账户(TFSA)","date":"2019-03-23T04:00:00.000Z","description":"如何理解加拿大个税以及注册退休金计划（RRSP）和免税储蓄账户（TFSA）","keywords":"加拿大个税, 注册退休金计划, RRSP, 免税储蓄账户, TFSA","katex":true,"_content":"\n* 在加拿大开始工作几个月了，一直对注册退休金计划（RRSP）和免税储蓄账户（TFSA）不是特别了解。最近在搜索引擎和同事还有银行顾问的帮助下终于弄明白了这几个概念。记录一下，以免自己以后忘了。\n\n## 个人税率制度\n\n* 加拿大实施的阶梯税率制度，以2018年在安大略省收入为10W/年为例，平均税率（Average Tax Rate）是24.63%, 边际税率（Marginal Tax Rate）是43.41%。也就是说，收入缴纳的税款是10W*24.63%=24,626，其他任何新增加的收入需要缴纳的税率是43.41%。\n  * 个人收入不单单是工资收入，还包含银行利息、理财收益、房屋出租等。\n* 可以在 [2019 Personal tax calculator](https://www.ey.com/ca/en/services/tax/tax-calculators-2019-personal-tax) 查询不同收入的交税比例。\n\n## 免税储蓄账户（TFSA）\n\n* 加拿大每年会给每个人提供5000-6000的免税额度。每个人可以把自己的钱存到TSFA账号里做理财，盈利不用交税。具体额度需要到加拿大政府官网 [CRA(Canada Revenue Agency)](https://www.canada.ca/en/revenue-agency.html) 登陆后查询。\n* 我们是去年（2018年）来加国的，所以每人有11500的免税额度。（2018年是5500，2019年是6000）\n* 银行和其他金融机构都可开设TSFA账户，随便在哪儿开都行，也可以开多个，但注意总额不超过自己的免税额度，超过会被罚款。\n* 在哪儿开设TSFA账户，主要是考虑需要购买什么理财产品，管理费和交易费（MER）等\n\n## 注册退休金计划（RRSP）\n\n* 这个计划的意思是年轻的时候存钱理财，退休了可以从这个账户里取钱花。注意，RRSP不是养老金计划（CPP），也不是政府发的福利。钱是你自己的，政府只是政策鼓励你做退休计划。\n* 每年报税的时候，政府会计算每个人收入，给每个人分配相应的RRSP储蓄上限额度（全年收入18%）。比如你当年收入是10W，那么来年你可以向自己的RRSP账户存1.8W。每个人可以根据自己的情况在金融机构开设RRSP账号存不超过相应额度的钱用于理财。同TFSA账户一样，超存会罚款。\n* 优势是什么呢？避税。不同于TFSA支配税后收入，RRSP支配的是税前收入。怎么理解呢？比如，你当年税前收入10W，但是你当年存了1W到RRSP账户中，那么政府就会按9W收入来扣税，那1W不算收入。但是当年政府是不知道你存了多少钱到RRSP账户的，所以要等到来年报税季，你报告给政府，它再把多收税款返还。\n    * 我们来计算下：以安大略省为例，10W年薪的平均税率是24.63%=24,626，9W年薪的平均税率是22.73%=20,461。然后你存了1W到RRSP账户。那么来年政府应该返还你24,626-20,461=4165。\n    * 当然，怎么可能全是好处呢。从RRSP账户里取钱是算当年收入的。比如你年薪9W，然后你当年又从RRSP账户取了1W，那么你的平均税率，边际税率就会按照9W+1W=10W来算。所以存到RRSP里的钱，要在合适的时候取用。最好是不挣钱的时候，比如退休的时候。你没收入了，然后每年取3W，那么政府就按你3W收入计税。超低。\n    * 所以这个账户叫做退休金计划，也就是说，只有在你收入低或者没收入的时候去取这部分钱才最划算。或者，回国工作了。收入一下子降下来了，也可以慢慢取。\n* 同样跟TFSA一样，RRSP也是随便你在哪儿开，怎么理财都是你自己说了算。\n* RRSP还有一种特别的账户，就是雇主合作的金融机构开设的，叫做\"雇主注册退休金计划\"(瞎翻译的)。这种账户可以通过每月发放工资的时候直接帮你存放定额比例到你的RRSP账户中去，然后剩余部分再计算税款。也就是说，政府会直接按照扣除RRSP存款部分后再计税。但是这种账户的弊端是管理费相对较贵，而且不是所有雇主都提供。\n* RRSP还有另外两个优势：助学贷款和购房贷款。\n    - 比方说，你的RRSP账户总额（你可以在不同的机构开设多个RRSP账户）有10W，当你需要买房的时候，你可以向政府申请10W等额免息贷款。购房15年/助学10年还清。\n\n## 理财的渠道\n\n* 同事给推荐了[WealthSimple](https://wealthsimple.com/) 和 [Questrade](https://www.questrade.com/home) 两个平台\n  * WealthSimple 是自动托管平台，注册后会让你完整问卷调查，之后给你推荐适合的理财方式，你只需要往里边存钱就可以了。这是我的邀请链接：[https://wealthsimple.com/invite/OBEKGW](https://wealthsimple.com/invite/OBEKGW)，通过邀请注册的新账户有1W免托管费额度。邀请者也会增加1W的免托管额度。\n  * Questrade 是有两种模式，一种是类似WealthSimple的自动托管模式，叫做 Questwealth。另一种是国人熟知的自己管理，叫做Self-directed。在self-directed下开设的账户包括RRSP、TFSA等都是自己去购买和售出理财产品的。\n  * 当然还有各家银行，网上看到很多人推荐TD家，没了解过，就不多说了。\n* 我在网上也搜到了这一篇文章讲投资组合的，有兴趣的可以看看：[https://canadiancouchpotato.com/model-portfolios/](https://canadiancouchpotato.com/model-portfolios/) \n* 另外 reddit 也有一个channel叫做：[#PersonalFinanceCanada](https://www.reddit.com/r/PersonalFinanceCanada), 也可多关注下。\n\n## 如何合理避税\n\n* 如果是刚开始工作第一年，基本上只有5000-6000的TFSA免税额度。所以没啥可做的。\n* 第二年开始就可以开始利用RRSP的额度，尽量多的往里存。当然，前提是没有大额开销，且有多余的钱。读书和买房是可以利用RRSP的免息额度贷款，比自己花钱买房和读书要划算的多，但是额度不一定够，所以这两项要仔细研究很多细节，比如大概几年后会买房，预留多少首付，多少额度的贷款等等。另外，在加拿大待得越久，信用越好，买车的商业贷款税率也是可以是极低的。\n  * 具体优先级：\n    * 如果是夫妻两人，那么先存满高收入一方的RRSP，优先降低边际税率高的一方的税。然后存低收入一方的RRSP，接着是双方的TFSA账户。如果还有结余，把钱转到收入低的一方的理财账户进行理财，因为低收入方的边际税率相对较低，收益部分缴纳的税款也相对较少。\n    * 单身的话，RRSP优先，然后TFSA，最后再用其他账户理财。\n\n## 其他\n\n* 不管是RRSP还是TFSA都是可以称作理财账户，公民可以用来买理财产品或定期存款等用途。加拿大政府还提供了其他账户类型，但目前我只了解了这两个较常用的。\n* 还有一点需要知道的是，所有政府主导的项目，RRSP、TFSA或者其他的计划账户都是受政府监管的，如果你开设RRSP账户的那家公司倒闭了，不用担心你的钱没了。那些计划的钱都在一个池子里。公司没了，你只需要把钱转移到另一家公司管理就好了。在一家公司开设账户，只是让他们帮忙管理，并不是给他们了。\n","source":"_posts/2019-03-23-canada-personal-tax-rrsp-and-tfsa.md","raw":"---\nlayout: post\ntitle: 加拿大个税以及注册退休金计划(RRSP)和免税储蓄账户(TFSA)\ncategory: 生活随想\ntags: [加拿大税务]\ndate: 2019-03-23\ndescription: 如何理解加拿大个税以及注册退休金计划（RRSP）和免税储蓄账户（TFSA）\nkeywords: 加拿大个税, 注册退休金计划, RRSP, 免税储蓄账户, TFSA\nkatex: true\n---\n\n* 在加拿大开始工作几个月了，一直对注册退休金计划（RRSP）和免税储蓄账户（TFSA）不是特别了解。最近在搜索引擎和同事还有银行顾问的帮助下终于弄明白了这几个概念。记录一下，以免自己以后忘了。\n\n## 个人税率制度\n\n* 加拿大实施的阶梯税率制度，以2018年在安大略省收入为10W/年为例，平均税率（Average Tax Rate）是24.63%, 边际税率（Marginal Tax Rate）是43.41%。也就是说，收入缴纳的税款是10W*24.63%=24,626，其他任何新增加的收入需要缴纳的税率是43.41%。\n  * 个人收入不单单是工资收入，还包含银行利息、理财收益、房屋出租等。\n* 可以在 [2019 Personal tax calculator](https://www.ey.com/ca/en/services/tax/tax-calculators-2019-personal-tax) 查询不同收入的交税比例。\n\n## 免税储蓄账户（TFSA）\n\n* 加拿大每年会给每个人提供5000-6000的免税额度。每个人可以把自己的钱存到TSFA账号里做理财，盈利不用交税。具体额度需要到加拿大政府官网 [CRA(Canada Revenue Agency)](https://www.canada.ca/en/revenue-agency.html) 登陆后查询。\n* 我们是去年（2018年）来加国的，所以每人有11500的免税额度。（2018年是5500，2019年是6000）\n* 银行和其他金融机构都可开设TSFA账户，随便在哪儿开都行，也可以开多个，但注意总额不超过自己的免税额度，超过会被罚款。\n* 在哪儿开设TSFA账户，主要是考虑需要购买什么理财产品，管理费和交易费（MER）等\n\n## 注册退休金计划（RRSP）\n\n* 这个计划的意思是年轻的时候存钱理财，退休了可以从这个账户里取钱花。注意，RRSP不是养老金计划（CPP），也不是政府发的福利。钱是你自己的，政府只是政策鼓励你做退休计划。\n* 每年报税的时候，政府会计算每个人收入，给每个人分配相应的RRSP储蓄上限额度（全年收入18%）。比如你当年收入是10W，那么来年你可以向自己的RRSP账户存1.8W。每个人可以根据自己的情况在金融机构开设RRSP账号存不超过相应额度的钱用于理财。同TFSA账户一样，超存会罚款。\n* 优势是什么呢？避税。不同于TFSA支配税后收入，RRSP支配的是税前收入。怎么理解呢？比如，你当年税前收入10W，但是你当年存了1W到RRSP账户中，那么政府就会按9W收入来扣税，那1W不算收入。但是当年政府是不知道你存了多少钱到RRSP账户的，所以要等到来年报税季，你报告给政府，它再把多收税款返还。\n    * 我们来计算下：以安大略省为例，10W年薪的平均税率是24.63%=24,626，9W年薪的平均税率是22.73%=20,461。然后你存了1W到RRSP账户。那么来年政府应该返还你24,626-20,461=4165。\n    * 当然，怎么可能全是好处呢。从RRSP账户里取钱是算当年收入的。比如你年薪9W，然后你当年又从RRSP账户取了1W，那么你的平均税率，边际税率就会按照9W+1W=10W来算。所以存到RRSP里的钱，要在合适的时候取用。最好是不挣钱的时候，比如退休的时候。你没收入了，然后每年取3W，那么政府就按你3W收入计税。超低。\n    * 所以这个账户叫做退休金计划，也就是说，只有在你收入低或者没收入的时候去取这部分钱才最划算。或者，回国工作了。收入一下子降下来了，也可以慢慢取。\n* 同样跟TFSA一样，RRSP也是随便你在哪儿开，怎么理财都是你自己说了算。\n* RRSP还有一种特别的账户，就是雇主合作的金融机构开设的，叫做\"雇主注册退休金计划\"(瞎翻译的)。这种账户可以通过每月发放工资的时候直接帮你存放定额比例到你的RRSP账户中去，然后剩余部分再计算税款。也就是说，政府会直接按照扣除RRSP存款部分后再计税。但是这种账户的弊端是管理费相对较贵，而且不是所有雇主都提供。\n* RRSP还有另外两个优势：助学贷款和购房贷款。\n    - 比方说，你的RRSP账户总额（你可以在不同的机构开设多个RRSP账户）有10W，当你需要买房的时候，你可以向政府申请10W等额免息贷款。购房15年/助学10年还清。\n\n## 理财的渠道\n\n* 同事给推荐了[WealthSimple](https://wealthsimple.com/) 和 [Questrade](https://www.questrade.com/home) 两个平台\n  * WealthSimple 是自动托管平台，注册后会让你完整问卷调查，之后给你推荐适合的理财方式，你只需要往里边存钱就可以了。这是我的邀请链接：[https://wealthsimple.com/invite/OBEKGW](https://wealthsimple.com/invite/OBEKGW)，通过邀请注册的新账户有1W免托管费额度。邀请者也会增加1W的免托管额度。\n  * Questrade 是有两种模式，一种是类似WealthSimple的自动托管模式，叫做 Questwealth。另一种是国人熟知的自己管理，叫做Self-directed。在self-directed下开设的账户包括RRSP、TFSA等都是自己去购买和售出理财产品的。\n  * 当然还有各家银行，网上看到很多人推荐TD家，没了解过，就不多说了。\n* 我在网上也搜到了这一篇文章讲投资组合的，有兴趣的可以看看：[https://canadiancouchpotato.com/model-portfolios/](https://canadiancouchpotato.com/model-portfolios/) \n* 另外 reddit 也有一个channel叫做：[#PersonalFinanceCanada](https://www.reddit.com/r/PersonalFinanceCanada), 也可多关注下。\n\n## 如何合理避税\n\n* 如果是刚开始工作第一年，基本上只有5000-6000的TFSA免税额度。所以没啥可做的。\n* 第二年开始就可以开始利用RRSP的额度，尽量多的往里存。当然，前提是没有大额开销，且有多余的钱。读书和买房是可以利用RRSP的免息额度贷款，比自己花钱买房和读书要划算的多，但是额度不一定够，所以这两项要仔细研究很多细节，比如大概几年后会买房，预留多少首付，多少额度的贷款等等。另外，在加拿大待得越久，信用越好，买车的商业贷款税率也是可以是极低的。\n  * 具体优先级：\n    * 如果是夫妻两人，那么先存满高收入一方的RRSP，优先降低边际税率高的一方的税。然后存低收入一方的RRSP，接着是双方的TFSA账户。如果还有结余，把钱转到收入低的一方的理财账户进行理财，因为低收入方的边际税率相对较低，收益部分缴纳的税款也相对较少。\n    * 单身的话，RRSP优先，然后TFSA，最后再用其他账户理财。\n\n## 其他\n\n* 不管是RRSP还是TFSA都是可以称作理财账户，公民可以用来买理财产品或定期存款等用途。加拿大政府还提供了其他账户类型，但目前我只了解了这两个较常用的。\n* 还有一点需要知道的是，所有政府主导的项目，RRSP、TFSA或者其他的计划账户都是受政府监管的，如果你开设RRSP账户的那家公司倒闭了，不用担心你的钱没了。那些计划的钱都在一个池子里。公司没了，你只需要把钱转移到另一家公司管理就好了。在一家公司开设账户，只是让他们帮忙管理，并不是给他们了。\n","slug":"2019-03-23-canada-personal-tax-rrsp-and-tfsa","published":1,"updated":"2020-04-19T03:31:08.709Z","_id":"ck96ffjb8002ormp974cq7lt4","comments":1,"photos":[],"link":"","content":"<ul>\n<li>在加拿大开始工作几个月了，一直对注册退休金计划（RRSP）和免税储蓄账户（TFSA）不是特别了解。最近在搜索引擎和同事还有银行顾问的帮助下终于弄明白了这几个概念。记录一下，以免自己以后忘了。</li>\n</ul>\n<h2 id=\"个人税率制度\"><a href=\"#个人税率制度\" class=\"headerlink\" title=\"个人税率制度\"></a>个人税率制度</h2><ul>\n<li>加拿大实施的阶梯税率制度，以2018年在安大略省收入为10W/年为例，平均税率（Average Tax Rate）是24.63%, 边际税率（Marginal Tax Rate）是43.41%。也就是说，收入缴纳的税款是10W*24.63%=24,626，其他任何新增加的收入需要缴纳的税率是43.41%。<ul>\n<li>个人收入不单单是工资收入，还包含银行利息、理财收益、房屋出租等。</li>\n</ul>\n</li>\n<li>可以在 <a href=\"https://www.ey.com/ca/en/services/tax/tax-calculators-2019-personal-tax\" target=\"_blank\" rel=\"noopener\">2019 Personal tax calculator</a> 查询不同收入的交税比例。</li>\n</ul>\n<h2 id=\"免税储蓄账户（TFSA）\"><a href=\"#免税储蓄账户（TFSA）\" class=\"headerlink\" title=\"免税储蓄账户（TFSA）\"></a>免税储蓄账户（TFSA）</h2><ul>\n<li>加拿大每年会给每个人提供5000-6000的免税额度。每个人可以把自己的钱存到TSFA账号里做理财，盈利不用交税。具体额度需要到加拿大政府官网 <a href=\"https://www.canada.ca/en/revenue-agency.html\" target=\"_blank\" rel=\"noopener\">CRA(Canada Revenue Agency)</a> 登陆后查询。</li>\n<li>我们是去年（2018年）来加国的，所以每人有11500的免税额度。（2018年是5500，2019年是6000）</li>\n<li>银行和其他金融机构都可开设TSFA账户，随便在哪儿开都行，也可以开多个，但注意总额不超过自己的免税额度，超过会被罚款。</li>\n<li>在哪儿开设TSFA账户，主要是考虑需要购买什么理财产品，管理费和交易费（MER）等</li>\n</ul>\n<h2 id=\"注册退休金计划（RRSP）\"><a href=\"#注册退休金计划（RRSP）\" class=\"headerlink\" title=\"注册退休金计划（RRSP）\"></a>注册退休金计划（RRSP）</h2><ul>\n<li>这个计划的意思是年轻的时候存钱理财，退休了可以从这个账户里取钱花。注意，RRSP不是养老金计划（CPP），也不是政府发的福利。钱是你自己的，政府只是政策鼓励你做退休计划。</li>\n<li>每年报税的时候，政府会计算每个人收入，给每个人分配相应的RRSP储蓄上限额度（全年收入18%）。比如你当年收入是10W，那么来年你可以向自己的RRSP账户存1.8W。每个人可以根据自己的情况在金融机构开设RRSP账号存不超过相应额度的钱用于理财。同TFSA账户一样，超存会罚款。</li>\n<li>优势是什么呢？避税。不同于TFSA支配税后收入，RRSP支配的是税前收入。怎么理解呢？比如，你当年税前收入10W，但是你当年存了1W到RRSP账户中，那么政府就会按9W收入来扣税，那1W不算收入。但是当年政府是不知道你存了多少钱到RRSP账户的，所以要等到来年报税季，你报告给政府，它再把多收税款返还。<ul>\n<li>我们来计算下：以安大略省为例，10W年薪的平均税率是24.63%=24,626，9W年薪的平均税率是22.73%=20,461。然后你存了1W到RRSP账户。那么来年政府应该返还你24,626-20,461=4165。</li>\n<li>当然，怎么可能全是好处呢。从RRSP账户里取钱是算当年收入的。比如你年薪9W，然后你当年又从RRSP账户取了1W，那么你的平均税率，边际税率就会按照9W+1W=10W来算。所以存到RRSP里的钱，要在合适的时候取用。最好是不挣钱的时候，比如退休的时候。你没收入了，然后每年取3W，那么政府就按你3W收入计税。超低。</li>\n<li>所以这个账户叫做退休金计划，也就是说，只有在你收入低或者没收入的时候去取这部分钱才最划算。或者，回国工作了。收入一下子降下来了，也可以慢慢取。</li>\n</ul>\n</li>\n<li>同样跟TFSA一样，RRSP也是随便你在哪儿开，怎么理财都是你自己说了算。</li>\n<li>RRSP还有一种特别的账户，就是雇主合作的金融机构开设的，叫做”雇主注册退休金计划”(瞎翻译的)。这种账户可以通过每月发放工资的时候直接帮你存放定额比例到你的RRSP账户中去，然后剩余部分再计算税款。也就是说，政府会直接按照扣除RRSP存款部分后再计税。但是这种账户的弊端是管理费相对较贵，而且不是所有雇主都提供。</li>\n<li>RRSP还有另外两个优势：助学贷款和购房贷款。<ul>\n<li>比方说，你的RRSP账户总额（你可以在不同的机构开设多个RRSP账户）有10W，当你需要买房的时候，你可以向政府申请10W等额免息贷款。购房15年/助学10年还清。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"理财的渠道\"><a href=\"#理财的渠道\" class=\"headerlink\" title=\"理财的渠道\"></a>理财的渠道</h2><ul>\n<li>同事给推荐了<a href=\"https://wealthsimple.com/\" target=\"_blank\" rel=\"noopener\">WealthSimple</a> 和 <a href=\"https://www.questrade.com/home\" target=\"_blank\" rel=\"noopener\">Questrade</a> 两个平台<ul>\n<li>WealthSimple 是自动托管平台，注册后会让你完整问卷调查，之后给你推荐适合的理财方式，你只需要往里边存钱就可以了。这是我的邀请链接：<a href=\"https://wealthsimple.com/invite/OBEKGW\" target=\"_blank\" rel=\"noopener\">https://wealthsimple.com/invite/OBEKGW</a>，通过邀请注册的新账户有1W免托管费额度。邀请者也会增加1W的免托管额度。</li>\n<li>Questrade 是有两种模式，一种是类似WealthSimple的自动托管模式，叫做 Questwealth。另一种是国人熟知的自己管理，叫做Self-directed。在self-directed下开设的账户包括RRSP、TFSA等都是自己去购买和售出理财产品的。</li>\n<li>当然还有各家银行，网上看到很多人推荐TD家，没了解过，就不多说了。</li>\n</ul>\n</li>\n<li>我在网上也搜到了这一篇文章讲投资组合的，有兴趣的可以看看：<a href=\"https://canadiancouchpotato.com/model-portfolios/\" target=\"_blank\" rel=\"noopener\">https://canadiancouchpotato.com/model-portfolios/</a> </li>\n<li>另外 reddit 也有一个channel叫做：<a href=\"https://www.reddit.com/r/PersonalFinanceCanada\" target=\"_blank\" rel=\"noopener\">#PersonalFinanceCanada</a>, 也可多关注下。</li>\n</ul>\n<h2 id=\"如何合理避税\"><a href=\"#如何合理避税\" class=\"headerlink\" title=\"如何合理避税\"></a>如何合理避税</h2><ul>\n<li>如果是刚开始工作第一年，基本上只有5000-6000的TFSA免税额度。所以没啥可做的。</li>\n<li>第二年开始就可以开始利用RRSP的额度，尽量多的往里存。当然，前提是没有大额开销，且有多余的钱。读书和买房是可以利用RRSP的免息额度贷款，比自己花钱买房和读书要划算的多，但是额度不一定够，所以这两项要仔细研究很多细节，比如大概几年后会买房，预留多少首付，多少额度的贷款等等。另外，在加拿大待得越久，信用越好，买车的商业贷款税率也是可以是极低的。<ul>\n<li>具体优先级：<ul>\n<li>如果是夫妻两人，那么先存满高收入一方的RRSP，优先降低边际税率高的一方的税。然后存低收入一方的RRSP，接着是双方的TFSA账户。如果还有结余，把钱转到收入低的一方的理财账户进行理财，因为低收入方的边际税率相对较低，收益部分缴纳的税款也相对较少。</li>\n<li>单身的话，RRSP优先，然后TFSA，最后再用其他账户理财。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>不管是RRSP还是TFSA都是可以称作理财账户，公民可以用来买理财产品或定期存款等用途。加拿大政府还提供了其他账户类型，但目前我只了解了这两个较常用的。</li>\n<li>还有一点需要知道的是，所有政府主导的项目，RRSP、TFSA或者其他的计划账户都是受政府监管的，如果你开设RRSP账户的那家公司倒闭了，不用担心你的钱没了。那些计划的钱都在一个池子里。公司没了，你只需要把钱转移到另一家公司管理就好了。在一家公司开设账户，只是让他们帮忙管理，并不是给他们了。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>在加拿大开始工作几个月了，一直对注册退休金计划（RRSP）和免税储蓄账户（TFSA）不是特别了解。最近在搜索引擎和同事还有银行顾问的帮助下终于弄明白了这几个概念。记录一下，以免自己以后忘了。</li>\n</ul>\n<h2 id=\"个人税率制度\"><a href=\"#个人税率制度\" class=\"headerlink\" title=\"个人税率制度\"></a>个人税率制度</h2><ul>\n<li>加拿大实施的阶梯税率制度，以2018年在安大略省收入为10W/年为例，平均税率（Average Tax Rate）是24.63%, 边际税率（Marginal Tax Rate）是43.41%。也就是说，收入缴纳的税款是10W*24.63%=24,626，其他任何新增加的收入需要缴纳的税率是43.41%。<ul>\n<li>个人收入不单单是工资收入，还包含银行利息、理财收益、房屋出租等。</li>\n</ul>\n</li>\n<li>可以在 <a href=\"https://www.ey.com/ca/en/services/tax/tax-calculators-2019-personal-tax\" target=\"_blank\" rel=\"noopener\">2019 Personal tax calculator</a> 查询不同收入的交税比例。</li>\n</ul>\n<h2 id=\"免税储蓄账户（TFSA）\"><a href=\"#免税储蓄账户（TFSA）\" class=\"headerlink\" title=\"免税储蓄账户（TFSA）\"></a>免税储蓄账户（TFSA）</h2><ul>\n<li>加拿大每年会给每个人提供5000-6000的免税额度。每个人可以把自己的钱存到TSFA账号里做理财，盈利不用交税。具体额度需要到加拿大政府官网 <a href=\"https://www.canada.ca/en/revenue-agency.html\" target=\"_blank\" rel=\"noopener\">CRA(Canada Revenue Agency)</a> 登陆后查询。</li>\n<li>我们是去年（2018年）来加国的，所以每人有11500的免税额度。（2018年是5500，2019年是6000）</li>\n<li>银行和其他金融机构都可开设TSFA账户，随便在哪儿开都行，也可以开多个，但注意总额不超过自己的免税额度，超过会被罚款。</li>\n<li>在哪儿开设TSFA账户，主要是考虑需要购买什么理财产品，管理费和交易费（MER）等</li>\n</ul>\n<h2 id=\"注册退休金计划（RRSP）\"><a href=\"#注册退休金计划（RRSP）\" class=\"headerlink\" title=\"注册退休金计划（RRSP）\"></a>注册退休金计划（RRSP）</h2><ul>\n<li>这个计划的意思是年轻的时候存钱理财，退休了可以从这个账户里取钱花。注意，RRSP不是养老金计划（CPP），也不是政府发的福利。钱是你自己的，政府只是政策鼓励你做退休计划。</li>\n<li>每年报税的时候，政府会计算每个人收入，给每个人分配相应的RRSP储蓄上限额度（全年收入18%）。比如你当年收入是10W，那么来年你可以向自己的RRSP账户存1.8W。每个人可以根据自己的情况在金融机构开设RRSP账号存不超过相应额度的钱用于理财。同TFSA账户一样，超存会罚款。</li>\n<li>优势是什么呢？避税。不同于TFSA支配税后收入，RRSP支配的是税前收入。怎么理解呢？比如，你当年税前收入10W，但是你当年存了1W到RRSP账户中，那么政府就会按9W收入来扣税，那1W不算收入。但是当年政府是不知道你存了多少钱到RRSP账户的，所以要等到来年报税季，你报告给政府，它再把多收税款返还。<ul>\n<li>我们来计算下：以安大略省为例，10W年薪的平均税率是24.63%=24,626，9W年薪的平均税率是22.73%=20,461。然后你存了1W到RRSP账户。那么来年政府应该返还你24,626-20,461=4165。</li>\n<li>当然，怎么可能全是好处呢。从RRSP账户里取钱是算当年收入的。比如你年薪9W，然后你当年又从RRSP账户取了1W，那么你的平均税率，边际税率就会按照9W+1W=10W来算。所以存到RRSP里的钱，要在合适的时候取用。最好是不挣钱的时候，比如退休的时候。你没收入了，然后每年取3W，那么政府就按你3W收入计税。超低。</li>\n<li>所以这个账户叫做退休金计划，也就是说，只有在你收入低或者没收入的时候去取这部分钱才最划算。或者，回国工作了。收入一下子降下来了，也可以慢慢取。</li>\n</ul>\n</li>\n<li>同样跟TFSA一样，RRSP也是随便你在哪儿开，怎么理财都是你自己说了算。</li>\n<li>RRSP还有一种特别的账户，就是雇主合作的金融机构开设的，叫做”雇主注册退休金计划”(瞎翻译的)。这种账户可以通过每月发放工资的时候直接帮你存放定额比例到你的RRSP账户中去，然后剩余部分再计算税款。也就是说，政府会直接按照扣除RRSP存款部分后再计税。但是这种账户的弊端是管理费相对较贵，而且不是所有雇主都提供。</li>\n<li>RRSP还有另外两个优势：助学贷款和购房贷款。<ul>\n<li>比方说，你的RRSP账户总额（你可以在不同的机构开设多个RRSP账户）有10W，当你需要买房的时候，你可以向政府申请10W等额免息贷款。购房15年/助学10年还清。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"理财的渠道\"><a href=\"#理财的渠道\" class=\"headerlink\" title=\"理财的渠道\"></a>理财的渠道</h2><ul>\n<li>同事给推荐了<a href=\"https://wealthsimple.com/\" target=\"_blank\" rel=\"noopener\">WealthSimple</a> 和 <a href=\"https://www.questrade.com/home\" target=\"_blank\" rel=\"noopener\">Questrade</a> 两个平台<ul>\n<li>WealthSimple 是自动托管平台，注册后会让你完整问卷调查，之后给你推荐适合的理财方式，你只需要往里边存钱就可以了。这是我的邀请链接：<a href=\"https://wealthsimple.com/invite/OBEKGW\" target=\"_blank\" rel=\"noopener\">https://wealthsimple.com/invite/OBEKGW</a>，通过邀请注册的新账户有1W免托管费额度。邀请者也会增加1W的免托管额度。</li>\n<li>Questrade 是有两种模式，一种是类似WealthSimple的自动托管模式，叫做 Questwealth。另一种是国人熟知的自己管理，叫做Self-directed。在self-directed下开设的账户包括RRSP、TFSA等都是自己去购买和售出理财产品的。</li>\n<li>当然还有各家银行，网上看到很多人推荐TD家，没了解过，就不多说了。</li>\n</ul>\n</li>\n<li>我在网上也搜到了这一篇文章讲投资组合的，有兴趣的可以看看：<a href=\"https://canadiancouchpotato.com/model-portfolios/\" target=\"_blank\" rel=\"noopener\">https://canadiancouchpotato.com/model-portfolios/</a> </li>\n<li>另外 reddit 也有一个channel叫做：<a href=\"https://www.reddit.com/r/PersonalFinanceCanada\" target=\"_blank\" rel=\"noopener\">#PersonalFinanceCanada</a>, 也可多关注下。</li>\n</ul>\n<h2 id=\"如何合理避税\"><a href=\"#如何合理避税\" class=\"headerlink\" title=\"如何合理避税\"></a>如何合理避税</h2><ul>\n<li>如果是刚开始工作第一年，基本上只有5000-6000的TFSA免税额度。所以没啥可做的。</li>\n<li>第二年开始就可以开始利用RRSP的额度，尽量多的往里存。当然，前提是没有大额开销，且有多余的钱。读书和买房是可以利用RRSP的免息额度贷款，比自己花钱买房和读书要划算的多，但是额度不一定够，所以这两项要仔细研究很多细节，比如大概几年后会买房，预留多少首付，多少额度的贷款等等。另外，在加拿大待得越久，信用越好，买车的商业贷款税率也是可以是极低的。<ul>\n<li>具体优先级：<ul>\n<li>如果是夫妻两人，那么先存满高收入一方的RRSP，优先降低边际税率高的一方的税。然后存低收入一方的RRSP，接着是双方的TFSA账户。如果还有结余，把钱转到收入低的一方的理财账户进行理财，因为低收入方的边际税率相对较低，收益部分缴纳的税款也相对较少。</li>\n<li>单身的话，RRSP优先，然后TFSA，最后再用其他账户理财。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>不管是RRSP还是TFSA都是可以称作理财账户，公民可以用来买理财产品或定期存款等用途。加拿大政府还提供了其他账户类型，但目前我只了解了这两个较常用的。</li>\n<li>还有一点需要知道的是，所有政府主导的项目，RRSP、TFSA或者其他的计划账户都是受政府监管的，如果你开设RRSP账户的那家公司倒闭了，不用担心你的钱没了。那些计划的钱都在一个池子里。公司没了，你只需要把钱转移到另一家公司管理就好了。在一家公司开设账户，只是让他们帮忙管理，并不是给他们了。</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck96ffjb8002ormp974cq7lt4","category_id":"ck96fw2p6004yrmp910v1ewaf","_id":"ck96fw2p90051rmp9gwng0xjd"},{"post_id":"ck96ffjb4002ermp9gduy3053","category_id":"ck96fw2p6004yrmp910v1ewaf","_id":"ck96fxlo70053rmp95axcb74t"},{"post_id":"ck96ffjas001urmp94zv0bzt8","category_id":"ck96fw2p6004yrmp910v1ewaf","_id":"ck96fyjes0056rmp90qccfbow"},{"post_id":"ck96ffj9r0004rmp934o1fceh","category_id":"ck96fzgti0058rmp904qubxdd","_id":"ck96fzgtj0059rmp969byavlj"},{"post_id":"ck96ffja6000jrmp9147u4x8z","category_id":"ck96fzgti0058rmp904qubxdd","_id":"ck96g0c5e005armp997fb5nsd"},{"post_id":"ck96ffjaf000xrmp99redaz1u","category_id":"ck96fzgti0058rmp904qubxdd","_id":"ck96g14p3005brmp9erop0ojb"},{"post_id":"ck96ffjai0014rmp9f9m4hiiv","category_id":"ck96fzgti0058rmp904qubxdd","_id":"ck96g2j0n005drmp9crnw47k2"},{"post_id":"ck96ffjb5002irmp981amh5c1","category_id":"ck96fzgti0058rmp904qubxdd","_id":"ck96g2zyg005grmp9gwwihzx6"},{"post_id":"ck96ffjb6002lrmp929kx5pbk","category_id":"ck96fzgti0058rmp904qubxdd","_id":"ck96g3aaz005irmp9fbnugfhr"},{"post_id":"ck96ffja7000krmp9hg901a4r","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g4y05005nrmp947nc6a3g"},{"post_id":"ck96ffja8000mrmp9anxje29e","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g5mci005ormp9dfm93g7s"},{"post_id":"ck96ffja9000qrmp95ck59gfg","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g5u92005prmp93wiu8n08"},{"post_id":"ck96ffjaa000srmp92vba8stg","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g6hri005qrmp9b6vm77gc"},{"post_id":"ck96ffjac000trmp93w0tche7","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g711y005rrmp97j5x1139"},{"post_id":"ck96ffjae000wrmp90dfd6kcs","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g7bxv005srmp94r0i2xjk"},{"post_id":"ck96ffjah0011rmp9ecbfel4a","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g7ky4005trmp997tobu0x"},{"post_id":"ck96ffjaj0018rmp9hoi59bxv","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g7oo3005urmp97o9a2swh"},{"post_id":"ck96ffjam001drmp9bfvyaut3","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g81kd005vrmp98804fbpv"},{"post_id":"ck96ffjak001armp9dpg26orb","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96g8hs1005wrmp9dfhz1shv"},{"post_id":"ck96ffjao001hrmp9avpcdxhb","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gd9h2005xrmp9b10wgq6s"},{"post_id":"ck96ffjap001lrmp95di5gcsb","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gdf7n005yrmp9fyjmdeth"},{"post_id":"ck96ffjar001rrmp9b5y39w8k","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96ge1e3005zrmp935dz9nry"},{"post_id":"ck96ffjaq001nrmp99drv4mga","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gedv50060rmp9ehkbe9gh"},{"post_id":"ck96ffjaw001yrmp9eeivceym","category_id":"ck96fw2p6004yrmp910v1ewaf","_id":"ck96gf8170062rmp9dhzn4081"},{"post_id":"ck96ffjb2002armp9fnemd871","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gfngp0065rmp92pxo97ws"},{"post_id":"ck96ffjaz0023rmp9a6ge1396","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96ggmcm0066rmp9d34jd91v"},{"post_id":"ck96ffjb00026rmp9c0hv0m32","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gh1tp0067rmp99cyo6hxb"},{"post_id":"ck96ffjb3002crmp90fkx5z5e","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gha890069rmp947gzhjnl"},{"post_id":"ck96ffjax0020rmp98s2hh9ij","category_id":"ck96g4y05005mrmp9gpfaad1v","_id":"ck96gip14006drmp91wdubkgn"}],"PostTag":[{"post_id":"ck96ffja6000jrmp9147u4x8z","tag_id":"ck96ffj9u0006rmp92ohnbrc6","_id":"ck96ffja8000lrmp9ao2o76zc"},{"post_id":"ck96ffja7000krmp9hg901a4r","tag_id":"ck96ffja9000ormp9d1wxhhle","_id":"ck96ffjah0013rmp9cp5v4ujr"},{"post_id":"ck96ffja8000mrmp9anxje29e","tag_id":"ck96ffjag0010rmp9b2oy55nn","_id":"ck96ffjan001frmp9dxg2054u"},{"post_id":"ck96ffja9000qrmp95ck59gfg","tag_id":"ck96ffjag0010rmp9b2oy55nn","_id":"ck96ffjas001trmp9h2yk5jdx"},{"post_id":"ck96ffjaa000srmp92vba8stg","tag_id":"ck96ffjag0010rmp9b2oy55nn","_id":"ck96ffjb00025rmp9c32g9pq2"},{"post_id":"ck96ffjac000trmp93w0tche7","tag_id":"ck96ffjag0010rmp9b2oy55nn","_id":"ck96ffjb5002hrmp90vcfgxyy"},{"post_id":"ck96ffjac000trmp93w0tche7","tag_id":"ck96ffjb10029rmp9c1nm1m56","_id":"ck96ffjb6002krmp938dbgxul"},{"post_id":"ck96ffjae000wrmp90dfd6kcs","tag_id":"ck96ffjag0010rmp9b2oy55nn","_id":"ck96ffjbc002wrmp9b3nj3awx"},{"post_id":"ck96ffjae000wrmp90dfd6kcs","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbc002yrmp9gblc9qh5"},{"post_id":"ck96ffjae000wrmp90dfd6kcs","tag_id":"ck96ffjba002rrmp992j35rr1","_id":"ck96ffjbd0031rmp98my4g2d6"},{"post_id":"ck96ffjah0011rmp9ecbfel4a","tag_id":"ck96ffjbc002zrmp9b2g7f6pq","_id":"ck96ffjbe0036rmp929z7aol5"},{"post_id":"ck96ffjah0011rmp9ecbfel4a","tag_id":"ck96ffjbd0033rmp9g2h20x5k","_id":"ck96ffjbe0037rmp9h2ox6qcr"},{"post_id":"ck96ffjaj0018rmp9hoi59bxv","tag_id":"ck96ffjbe0038rmp9bf0aci1x","_id":"ck96ffjbg003drmp9b98u40ie"},{"post_id":"ck96ffjaj0018rmp9hoi59bxv","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbg003ermp9c5jyd5sz"},{"post_id":"ck96ffjak001armp9dpg26orb","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbh003hrmp95x8u7irl"},{"post_id":"ck96ffjak001armp9dpg26orb","tag_id":"ck96ffjbg003frmp9b4ytfzv7","_id":"ck96ffjbh003irmp9asad8f2e"},{"post_id":"ck96ffjam001drmp9bfvyaut3","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbh003krmp9ev7hh951"},{"post_id":"ck96ffjao001hrmp9avpcdxhb","tag_id":"ck96ffjbg003frmp9b4ytfzv7","_id":"ck96ffjbi003nrmp9bqgp9bxt"},{"post_id":"ck96ffjap001lrmp95di5gcsb","tag_id":"ck96ffjbg003frmp9b4ytfzv7","_id":"ck96ffjbi003prmp9aunf9qzi"},{"post_id":"ck96ffjaq001nrmp99drv4mga","tag_id":"ck96ffjbi003ormp9cbk247gk","_id":"ck96ffjbj003rrmp95ztc6x2c"},{"post_id":"ck96ffjar001rrmp9b5y39w8k","tag_id":"ck96ffjbi003ormp9cbk247gk","_id":"ck96ffjbk003urmp97w317yy7"},{"post_id":"ck96ffjaw001yrmp9eeivceym","tag_id":"ck96ffjbj003trmp96zp7a6rb","_id":"ck96ffjbm0043rmp9ffoh2d7i"},{"post_id":"ck96ffjax0020rmp98s2hh9ij","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbm0046rmp9ei1mb3em"},{"post_id":"ck96ffjaz0023rmp9a6ge1396","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbn0049rmp92nvt96fq"},{"post_id":"ck96ffjb00026rmp9c0hv0m32","tag_id":"ck96ffjb7002nrmp91rl23ae0","_id":"ck96ffjbn004crmp9g77p6rpr"},{"post_id":"ck96ffjb2002armp9fnemd871","tag_id":"ck96ffjbj003trmp96zp7a6rb","_id":"ck96ffjbo004hrmp92nl78itf"},{"post_id":"ck96ffjb2002armp9fnemd871","tag_id":"ck96ffjbn004ermp90k7hd53e","_id":"ck96ffjbp004irmp9d5os5p10"},{"post_id":"ck96ffjb8002ormp974cq7lt4","tag_id":"ck96fw2p7004zrmp95pe67u80","_id":"ck96fw2p80050rmp92xtehvah"},{"post_id":"ck96ffjb4002ermp9gduy3053","tag_id":"ck96fxlo70052rmp9hiivboi7","_id":"ck96fxlo70054rmp9hgh4galb"},{"post_id":"ck96ffjas001urmp94zv0bzt8","tag_id":"ck96fyjer0055rmp9c9tw6i27","_id":"ck96fyjes0057rmp91c6s42cm"},{"post_id":"ck96ffjai0014rmp9f9m4hiiv","tag_id":"ck96g2j0m005crmp934eofl76","_id":"ck96g2j0n005ermp9e3subceg"},{"post_id":"ck96ffjb5002irmp981amh5c1","tag_id":"ck96g2j0m005crmp934eofl76","_id":"ck96g2zyf005frmp9arx31z6s"},{"post_id":"ck96ffjb6002lrmp929kx5pbk","tag_id":"ck96g2j0m005crmp934eofl76","_id":"ck96g3aay005hrmp90ifm7v7q"},{"post_id":"ck96ffjaf000xrmp99redaz1u","tag_id":"ck96g2j0m005crmp934eofl76","_id":"ck96g3l8c005jrmp99eenebn3"},{"post_id":"ck96ffja6000jrmp9147u4x8z","tag_id":"ck96g2j0m005crmp934eofl76","_id":"ck96g3yv4005krmp9fd51dd47"},{"post_id":"ck96ffj9r0004rmp934o1fceh","tag_id":"ck96g2j0m005crmp934eofl76","_id":"ck96g45vr005lrmp96rvwf9od"},{"post_id":"ck96ffjaw001yrmp9eeivceym","tag_id":"ck96fyjer0055rmp9c9tw6i27","_id":"ck96gf8170061rmp95i4g4egq"},{"post_id":"ck96ffjaw001yrmp9eeivceym","tag_id":"ck96gfcmk0063rmp9evbn8jj1","_id":"ck96gfcml0064rmp97c8gco4q"},{"post_id":"ck96ffjb3002crmp90fkx5z5e","tag_id":"ck96gha890068rmp94hnjhoru","_id":"ck96gha89006armp9dbku2v3x"},{"post_id":"ck96ffjb3002crmp90fkx5z5e","tag_id":"ck96ghqla006brmp9f5u80xgt","_id":"ck96ghqla006crmp9bfvoeau8"}],"Tag":[{"name":"哲学","_id":"ck96ffj9u0006rmp92ohnbrc6"},{"name":"读书 & 学习","_id":"ck96ffj9v0008rmp95r9dgvf2"},{"name":"MongoDB","_id":"ck96ffja9000ormp9d1wxhhle"},{"name":"Vagrant","_id":"ck96ffjad000vrmp9aijwcmt3"},{"name":"Linux","_id":"ck96ffjag0010rmp9b2oy55nn"},{"name":"技术 & 总结","_id":"ck96ffjaj0017rmp9cw6v6ks3"},{"name":"Git","_id":"ck96ffjb10029rmp9c1nm1m56"},{"name":"PHP","_id":"ck96ffjb7002nrmp91rl23ae0"},{"name":"Laravel","_id":"ck96ffjba002rrmp992j35rr1"},{"name":"读书笔记","_id":"ck96ffjbb002urmp9bo1h8uf5"},{"name":"CSS","_id":"ck96ffjbc002zrmp9b2g7f6pq"},{"name":"Javascript","_id":"ck96ffjbd0033rmp9g2h20x5k"},{"name":"Nginx","_id":"ck96ffjbe0038rmp9bf0aci1x"},{"name":"编程规范","_id":"ck96ffjbg003frmp9b4ytfzv7"},{"name":"Elasticsearch","_id":"ck96ffjbi003ormp9cbk247gk"},{"name":"Mac","_id":"ck96ffjbj003trmp96zp7a6rb"},{"name":"技巧","_id":"ck96ffjbk003wrmp934lmf6ik"},{"name":"Keyboard","_id":"ck96ffjbl0040rmp976rh9xiv"},{"name":"VIM","_id":"ck96ffjbn004ermp90k7hd53e"},{"name":"加拿大税务","_id":"ck96fw2p7004zrmp95pe67u80"},{"name":"The School of Life","_id":"ck96fxlo70052rmp9hiivboi7"},{"name":"效率工具","_id":"ck96fyjer0055rmp9c9tw6i27"},{"name":"笔记","_id":"ck96g2j0m005crmp934eofl76"},{"name":"键盘","_id":"ck96gfcmk0063rmp9evbn8jj1"},{"name":"算法","_id":"ck96gha890068rmp94hnjhoru"},{"name":"排列组合","_id":"ck96ghqla006brmp9f5u80xgt"}]}}